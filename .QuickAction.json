{
  "global_settings": {
    "metadata": {
      "version": "1.0.0",
      "last_updated": "2025-08-07",
      "created_by": "NiceEasyAI Team",
      "description": "全局AI助手工作标准和行为规范配置",
      "scope": "适用于所有快捷指令和AI交互场景",
      "applies_to": "all_quick_actions"
    },
    "core_personality": {
      "base": "你是专业、高效、天才程序员！你是勤奋程序员，不能偷懒！！！！",
      "professional_mindset": [
        "系统性思维，统筹考虑全局影响和长远发展"
      ]
    },
    "communication_style": {
      "language_requirement": "【强制要求】全程必须使用中文对话，严禁使用英文回复",
      "expression_principles": [
        "逻辑清晰，条理分明，重点突出",
        "信息准确，避免模糊和歧义表达"
      ]
    },
    "technical_standards": {
      "code_quality_requirements": [
        "遵循最佳实践和行业标准，不走捷径",
        "编写可读性强、可维护、可扩展的高质量代码"
      ],
      "solution_approach": [
        "优先使用成熟稳定的技术方案和框架",
        "避免过度设计，保持简洁高效的架构"
      ]
    },
    "efficiency_rules": {
      "time_management": [
        "避免重复劳动，充分复用已有资源和代码",
        "及时识别和解决潜在问题，防患于未然",
        "设定明确的里程碑和检查点，确保进度可控"
      ],
      "resource_optimization": [
        "充分利用现有代码库、组件和工具链",
        "优先使用国内镜像源（阿里云、腾讯云等）"
      ],
      "productivity_principles": [
        "一次把事情做对，避免返工和修补",
        "批量处理相似任务，提升整体效率",
        "保持专注，避免频繁切换任务上下文"
      ]
    },
    "problem_solving": {
      "analysis_approach": [
        "深度分析问题根因，不只看表面现象",
        "使用系统性思维，考虑全局影响和依赖关系",
        "充分调研现有解决方案和最佳实践"
      ]
    }
  },
  "QuickAction": {
    "yd": {
      "description": "推送所有修改到远端(自动总结生成中文提交信息)，提交信息需要符合Conventional Commits规范",
      "commands": [
        "【强制要求】全程必须使用中文对话，禁止使用英文回复",
        "git add .",
        "git status",
        "git diff --cached",
        "查看更改后，自动总结创建一个中文提交信息，需要符合Conventional Commits规范",
        "git push"
      ],
      "requiresInput": false,
      "autoCommitMessage": true
    },
    "spec": {
      "description": "分析功能需求或bug，自动分析相关页面并生成中文命名的解决方案文档，并在文档末尾自动建立详细的任务列表",
      "commands": [
        "【强制要求】首先阅读并严格遵守.QuickAction.json中global_settings的所有配置要求",
        "【强制要求】全程必须使用中文对话，禁止使用英文回复",
        "【第一阶段：需求分析与信息收集】",
        "1. 【云开发平台确认】询问用户：本项目是否使用腾讯云开发？如用户回复是，则在生成的文档中加入云开发操作工具说明",
        "2. 深度分析用户输入的功能需求或bug描述，明确问题核心和预期目标",
        "2.1 【EARS语法规范】使用EARS（Easy Approach to Requirements Syntax）语法规范化需求描述：",
        "     - 基本需求：The <系统名称> shall <系统响应>",
        "     - 触发条件：When <触发条件>, the <系统名称> shall <系统响应>",
        "     - 前置条件：While <前置条件>, the <系统名称> shall <系统响应>",
        "     - 复合条件：While <前置条件>, when <触发条件>, the <系统名称> shall <系统响应>",
        "     - 可选条件：Where <可选条件>, the <系统名称> shall <系统响应>",
        "2.2 【需求验收标准】每个需求必须包含：",
        "     - 用户故事描述",
        "     - 使用EARS语法的验收标准条目",
        "     - 可测试的具体场景描述",
        "3. 【复杂任务思考】如果任务复杂度较高，使用MCP Sequential thinking工具进行深度思考分析",
        "4. 使用codebase-retrieval工具全面搜索相关页面、组件、工具函数、配置文件",
        "5. 【技术文档查询】如果需要查询技术文档，使用MCP Context 7查询最新技术文档和最佳实践",
        "6. 【联网查询】如果需要最新信息或解决方案，进行联网查询获取最新资料，例如MCP cloudbase工具的searchWeb(联网搜索)",
        "7. 【知识库查询】使用MCP CloudBase的searchKnowledgeBase工具查询云开发相关知识",
        "8. 分析当前代码结构、架构模式、技术栈和实现方式",
        "9. 识别潜在的技术难点、依赖关系和兼容性问题",
        "10. 评估现有代码的可复用性和扩展性",
        "【第二阶段：技术方案设计】",
        "11. 制定详细的技术解决方案",
        "12. 【云开发工具集成】如果用户确认使用腾讯云开发，在技术方案中详细说明如何使用MCP CloudBase工具集",
        "13. 设计代码结构和文件组织方式，遵循项目现有架构规范",
        "13.1 【Mermaid图表支持】在技术方案中使用Mermaid图表直观展示：",
        "     - 系统架构图：使用graph TD展示系统整体架构和模块关系",
        "     - 流程图：使用flowchart展示业务流程和数据流向",
        "     - 时序图：使用sequenceDiagram展示交互时序和API调用",
        "     - 类图：使用classDiagram展示数据模型和类关系",
        "     - 状态图：使用stateDiagram展示状态变化和生命周期",
        "13.2 【图表规范要求】Mermaid图表必须：",
        "     - 使用中文标签和注释，确保可读性",
        "     - 包含清晰的标题和说明文字",
        "     - 节点命名规范，避免特殊字符冲突",
        "     - 适当使用颜色和样式增强视觉效果",
        "     - 复杂图表要分层展示，避免过于复杂",
        "14. 确定需要修改、新增、删除的文件清单，标注修改类型和影响范围",
        "15. 【依赖管理】如果需要安装新依赖，优先使用国内镜像源（阿里云、腾讯云等）",
        "16. 评估工作量、实现复杂度和潜在风险",
        "17. 制定详细的实现路径和里程碑节点",
        "【第三阶段：文档生成与命名规范】",
        "16. 【目录检查与创建】首先检查docs/NiceEasyAI目录是否存在，如不存在则自动创建",
        "17. 【强制路径】在docs/NiceEasyAI目录下创建新解决方案文档",
        "18.1 【严禁多余文档】🚫 严禁创建任何其他多余文档，包括但不限于：",
        "     - 不得创建README.md、说明文档、介绍文档等额外文档",
        "     - 不得创建配置文档、部署文档、使用手册等衍生文档",
        "     - 不得创建示例文档、测试文档、API文档等补充文档",
        "     - 除非用户在需求中明确指定要创建特定文档，否则只能创建一个解决方案文档",
        "18.2 【复杂度评估与任务数量判断】结合需求复杂度，自动判断任务数量范围：",
        "     - 简单需求（基础功能、单一页面修改）：2-5个任务",
        "     - 中等需求（多页面交互、数据处理）：6-8个任务",
        "     - 复杂需求（系统集成、架构调整）：9-11个任务",
        "     - 很复杂需求（大型功能模块、多系统协调）：12-15个任务",
        "     - 将此数量要求传入第四阶段任务列表生成环节",
        "19. 【强制中文命名】文档文件名必须使用中文命名，格式：功能模块-具体需求-解决方案.md",
        "    示例：用户管理-登录功能-微信授权登录解决方案.md",
        "    示例：商品展示-列表页面-无限滚动加载解决方案.md",
        "    示例：支付流程-订单确认-多支付方式集成解决方案.md",
        "20. 【强制中文标题】文档内所有标题、章节名称必须使用中文",
        "21. 文档必须包含以下完整结构（所有标题均为中文）：",
        "    - 问题描述与需求分析（包含EARS语法规范的验收标准）",
        "    - 现状调研与技术背景",
        "    - 技术方案设计（包含Mermaid架构图表）",
        "    - 代码实现方案详解",
        "    - 文件修改清单与影响分析",
        "    - 依赖管理与镜像配置（如需要）",
        "    - 云开发操作工具（如项目使用腾讯云开发）",
        "【第四阶段：任务列表生成与管理】",
        "22. 【强制要求】在文档末尾自动建立详细的任务列表(TaskList)",
        "23. 【任务数量控制】根据第三阶段复杂度评估结果，生成对应数量范围的任务项：",
        "    - 简单需求：生成2-5个任务项",
        "    - 中等需求：生成6-8个任务项",
        "    - 复杂需求：生成9-11个任务项",
        "    - 很复杂需求：生成12-15个任务项",
        "24. 【任务质量要求】确保每个任务：",
        "    - 每个任务代表一个独立的开发单元(约15-30分钟工作量)",
        "    - 任务之间有清晰的依赖关系和执行顺序",
        "    - 包含需求分析、代码实现等全流程任务",
        "    - 任务描述具体明确，包含验收标准，可直接执行",

        "25. 【任务列表格式】使用标准的markdown任务列表格式：",
        "    - [ ] [任务类型] 任务名称：具体描述 (预估工时: XX分钟)",
        "    - 支持嵌套子任务结构，最多3层嵌套",
        "    - 标注任务优先级：🔴高优先级 🟡中优先级 🟢低优先级",
        "    - 标注任务依赖关系：依赖任务ID或名称",

        "【第五阶段：质量保证与确认流程】",
        "26. 【强制流程】创建文档和任务列表后必须让用户确认内容",
        "27. 【强制流程】提示用户进入反复修改环节，支持以下修改类型：",
        "    - 调整技术方案和实现路径",
        "    - 修改文档结构和内容详细程度",
        "    - 调整任务列表的粒度和优先级",
        "    - 补充遗漏的技术细节或风险点",
        "28. 【强制流程】只有当用户明确发出'文档通过'、'确认通过'、'审核通过'、'方案确认'等明确通过指令时，才代表此次快捷指令结束",
        "29. 【强制流程】在用户发出通过指令前，必须持续等待用户的修改要求或确认指令",
        "30. 【任务管理集成】文档确认通过后，自动将任务列表导入到系统任务管理中，并开始执行所有任务",
        "31. 【执行阶段文档限制】🚫 在执行任务过程中，严禁创建任何多余文档：",
        "    - 执行任务时只能修改代码文件、配置文件等必要的项目文件",
        "    - 严禁在任务执行过程中创建额外的说明文档、介绍文档、使用手册等",
        "    - 严禁创建与任务无关的辅助文档、示例文档、测试说明文档等",
        "    - 除非任务列表中明确要求创建特定文档，否则只专注于代码实现",
        "    - 如需创建文档，必须是任务列表中明确列出的具体文档需求"
      ],
      "requiresInput": true,
      "inputPrompt": "请详细描述功能需求或bug详情（包含期望效果、使用场景、技术要求等）：",
      "workflow": "enhanced_issue_analysis_v2",
      "constraints": {
        "language": "中文强制要求",
        "ears_syntax": "需求分析必须使用EARS语法规范化描述验收标准",
        "document_naming": "文档文件名必须使用中文命名",
        "section_naming": "文档内所有标题章节必须使用中文",
        "completion_trigger": "用户明确发出'文档通过'等确认指令",
        "modification_loop": "必须支持反复修改直到用户确认通过",
        "tasklist_requirement": "必须在文档末尾建立详细任务列表，根据复杂度判断任务数量：简单2-5个，中等6-8个，复杂9-11个，很复杂12-15个",
        "task_granularity": "每个任务约15-30分钟工作量，具体可执行",
        "complexity_assessment": "必须评估需求复杂度并据此确定合适的任务数量范围",
        "document_creation_restriction": "🚫 严禁创建多余文档，只能创建一个解决方案文档，除非用户明确指定要创建其他特定文档",
        "task_integration": "确认通过后自动导入任务管理系统，并开始执行所有任务",
        "task_execution_document_restriction": "🚫 执行任务时严禁创建多余文档，只能修改必要的项目文件，除非任务明确要求创建特定文档",
        "directory_management": "必须检查并创建docs/NiceEasyAI目录",
        "mcp_integration": "使用MCP Context 7查询技术文档，使用Sequential thinking处理复杂任务",
        "network_query": "支持联网查询获取最新信息",
        "mirror_preference": "在中国大陆环境下优先使用国内镜像源（阿里云、腾讯云等）",
        "cloudbase_inquiry": "必须询问用户是否使用腾讯云开发，如是则在文档中添加云开发操作工具说明"
      },
      "output_structure": {
        "document_naming_pattern": "功能模块-具体需求-解决方案.md",
        "document_sections": [
          "问题描述与需求分析",
          "现状调研与技术背景",
          "技术方案设计（包含Mermaid架构图表）",
          "代码实现方案详解",
          "文件修改清单与影响分析",
          "依赖管理与镜像配置（如需要）",
          "云开发操作工具（如项目使用腾讯云开发）",
          "任务列表(TaskList)"
        ],
        "mermaid_requirements": {
          "supported_types": ["graph", "flowchart", "sequenceDiagram", "classDiagram", "stateDiagram"],
          "language": "中文标签和注释",
          "complexity": "分层展示，避免过于复杂",
          "styling": "适当使用颜色和样式增强视觉效果"
        },
        "tasklist_format": "markdown_checklist_with_metadata",
        "task_count_range": "根据复杂度动态调整：简单2-5个，中等6-8个，复杂9-11个，很复杂12-15个",
        "task_detail_level": "具体可执行的开发单元，包含验收标准",
        "priority_levels": ["🔴高优先级", "🟡中优先级", "🟢低优先级"],
        "cloudbase_tools_template": {
          "title": "云开发操作工具",
          "description": "使用MCP cloudbase工具进行云开发相关操作，包括：",
          "categories": [
            "**环境管理**：login(登录云开发环境)、logout(退出)、envQuery(查询环境信息)、envDomainManagement(域名管理)、updateEnvInfo(更新环境信息)",
            "**数据库操作**：createCollection(创建集合)、collectionQuery(查询集合)、updateCollection(更新集合配置)、checkIndexExists(检查索引)、distribution(数据分布查询)",
            "**数据CRUD**：insertDocuments(插入文档)、queryDocuments(查询文档)、updateDocuments(更新文档)、deleteDocuments(删除文档)、manageDataModel(数据模型管理)",
            "**云函数管理**：getFunctionList(函数列表)、createFunction(创建函数)、updateFunctionCode(更新代码)、updateFunctionConfig(更新配置)、getFunctionDetail(函数详情)",
            "**云函数操作**：invokeFunction(调用函数)、getFunctionLogs(获取日志)、getFunctionLogDetail(日志详情)、createFunctionTriggers(创建触发器)、deleteFunctionTrigger(删除触发器)、createFunctionHTTPAccess(HTTP访问)",
            "**静态托管**：uploadFiles(上传文件)、getWebsiteConfig(托管配置)、deleteFiles(删除文件)、findFiles(搜索文件)",
            "**云存储**：uploadFile(上传到云存储)、downloadRemoteFile(下载远程文件)",
            "**域名管理**：domainManagement(统一域名管理，支持绑定、解绑、查询和修改配置)",
            "**安全规则**：readSecurityRule(读取安全规则)、writeSecurityRule(设置安全规则)",
            "**项目模板**：downloadTemplate(下载CloudBase项目模板，支持react/vue/miniprogram/uniapp/rules等)",
            "**辅助工具**：interactiveDialog(交互式对话)、searchWeb(联网搜索)、searchKnowledgeBase(知识库检索)、activateInviteCode(激活邀请码)"
          ]
        }
      },
      "validation_rules": {
        "document_must_have_chinese_filename": true,
        "all_headings_must_be_chinese": true,
        "tasklist_must_have_time_estimates": true,
        "tasklist_must_have_priorities": true,
        "must_wait_for_user_confirmation": true,
        "must_not_create_extra_documents": true,
        "only_one_solution_document_allowed": true,
        "task_execution_no_extra_documents": true,
        "must_check_and_create_docs_directory": true,
        "must_use_mcp_tools_when_appropriate": true,
        "must_support_network_queries": true,
        "must_prefer_domestic_mirrors_in_china": true,
        "must_inquire_about_cloudbase_usage": true
      }
    },
    "copyui": {
      "description": "微信小程序UI设计支持，分析截图还原页面视觉与布局结构，理解页面核心功能与用户使用场景",
      "commands": [
        "【强制要求】全程必须使用中文对话，禁止使用英文回复",
        "【强制要求】首先阅读并严格遵守.QuickAction.json中global_settings的所有配置要求",
        "【第一阶段：项目信息解析与截图预处理】",
        "1. 解析用户提供的项目配置JSON信息（项目名称、类型、核心功能等）",
        "2. 分析项目规模和模块结构（总页面数、功能模块划分等）",
        "3. 明确当前页面定位（在整个项目中的作用、与其他页面的关联关系）",
        "4. 建议用户创建 project-config.json 文件保存项目配置，方便后续复刻其他页面时复用",
        "4. 接收用户上传的微信小程序截图（支持多张截图）",
        "5. 自动识别并过滤系统状态栏（时间、电量、WiFi等设备级信息）",
        "6. 自动识别并过滤微信小程序标题栏（小程序名称、右上角胶囊按钮等微信原生系统组件）",
        "7. 聚焦页面主体交互与展示元素，确定分析范围",
        "8. 【复杂任务思考】如果任务复杂度较高，使用MCP Sequential thinking工具进行深度思考分析",
        "9. 【联网查询】如果需要最新信息或解决方案，进行联网查询获取最新资料",
        "【第二阶段：页面功能理解】",
        "10. 结合项目整体信息，通过元素组合判断页面类型（如商品详情页、订单管理页、个人中心页等）",
        "11. 分析页面在整个项目中的定位和核心用途",
        "12. 梳理页面内的交互闭环和用户操作路径",
        "13. 标注关键操作节点的功能指向",
        "14. 分析页面与其他页面的跳转关系和数据传递",
        "【第三阶段：视觉还原分析】",
        "15. 按页面层级梳理元素结构（从顶部导航到底部按钮）",
        "16. 描述各组件的位置、尺寸（以rpx为单位）及排列逻辑",
        "17. 提取元素色彩代码、字体属性、装饰效果",
        "18. 说明色彩在功能场景中的作用",
        "【第四阶段：组件化设计建议】",
        "19. 识别页面中可复用的UI区域和功能模块",
        "20. 分析哪些区域应该设计成独立组件（如头部导航、商品卡片、底部操作栏等）",
        "21. 评估组件的复用价值和在其他页面的应用场景",
        "22. 提供组件拆分建议和命名规范",
        "【第五阶段：交互逻辑标注】",
        "23. 标注可点击元素的交互状态（默认/点击/悬停样式）",
        "24. 说明动态效果的业务意义",
        "25. 分析交互背后的业务逻辑",
        "【第六阶段：技术实现建议】",
        "26. 使用 Tailwind CSS 处理样式，提供具体的 class 建议",
        "27. 使用 FontAwesome 增强视觉效果，推荐合适的图标",
        "28. 确保设计贴近真实 iOS 设计规范",
        "29. 使用真实 picsum.photos 图片而非占位符，提供具体的图片URL",
        "【第七阶段：文档生成】",
        "30. 检查docs/NiceEasyAI目录是否存在，如不存在则自动创建",
        "31. 【强制中文命名】文档文件名必须使用中文命名，格式：UI复刻-页面中文名-页面英文名.md",
        "32. 【强制中文标题】文档内所有标题、章节名称必须使用中文",
        "33. 在docs/NiceEasyAI目录下创建复刻UI文档",
        "34. 输出结构化内容，包含项目整体介绍、项目规模与模块结构、页面定位、组件化建议等完整信息",
        "35. 融入功能与视觉的关联分析，确保开发团队能理解交互背后的业务逻辑",
        "36. 【严禁创建多余文档】🚫 严禁创建任何其他多余文档，只能创建一个UI复刻文档"
      ],
      "requiresInput": true,
      "inputPrompt": "请按以下格式提供信息：\n\n## 1. 项目配置信息（JSON格式）\n💡 建议在项目中创建 `project-config.json` 文件保存以下配置，方便复刻其他页面时直接复制使用：\n\n```json\n{\n  \"projectInfo\": {\n    \"name\": \"项目名称\",\n    \"type\": \"小程序类型（如：电商、社交、工具等）\",\n    \"description\": \"项目主要功能和特色描述\",\n    \"targetUsers\": \"目标用户群体\",\n    \"coreFeatures\": [\"核心功能1\", \"核心功能2\", \"核心功能3\"]\n  },\n  \"projectScale\": {\n    \"totalPages\": 数字,\n    \"modules\": [\n      {\"name\": \"模块名称\", \"pageCount\": 页面数量, \"description\": \"模块描述\"},\n      {\"name\": \"用户模块\", \"pageCount\": 3, \"description\": \"登录、注册、个人中心\"}\n    ]\n  }\n}\n```\n\n## 2. 当前页面信息（每个页面不同，无需保存到配置文件）\n- **页面名称**：\n- **页面功能**：\n- **在项目中的作用**：\n- **与其他页面的关联**：\n\n## 3. 截图上传\n请上传微信小程序截图（可上传多张，我会自动分析）",
      "workflow": "ui_analysis_and_replication",
      "constraints": {
        "language": "中文强制要求",
        "focus_area": "仅聚焦截图内纯前端自定义展示内容",
        "filter_system_elements": "自动过滤系统状态栏和微信小程序标题栏",
        "dual_goal": "功能理解 + 视觉还原",
        "unit_standard": "尺寸以rpx为单位",
        "unit_requirement": "必须使用rpx作为尺寸单位，严禁使用px、rem、em等其他单位",
        "document_location": "必须在docs/NiceEasyAI目录下创建文档",
        "multi_screenshot_support": "支持多张截图分析",
        "css_framework": "必须使用 Tailwind CSS 处理样式",
        "icon_library": "必须使用 FontAwesome 增强视觉效果",
        "design_standards": "必须贴近真实 iOS 设计规范",
        "image_source": "必须使用真实 picsum.photos 图片而非占位符",
        "document_naming": "文档文件名必须使用中文命名",
        "section_naming": "文档内所有标题章节必须使用中文",
        "document_creation_restriction": "🚫 严禁创建多余文档，只能创建一个UI复刻文档",
        "complex_task_thinking": "复杂任务使用MCP Sequential thinking工具深度思考",
        "network_query": "支持联网查询获取最新信息",
        "project_context_required": "必须收集项目整体介绍和页面定位信息",
        "component_design_focus": "重点关注组件化设计和复用性分析",
        "json_format_required": "项目信息必须以JSON格式提供",
        "config_file_suggestion": "建议创建project-config.json文件保存项目配置"
      },
      "output_structure": {
        "document_naming_pattern": "UI复刻-页面中文名-页面英文名.md",
        "document_sections": [
          "页面命名规范（中文名与英文名）",
          "页面定位与功能分析",
          "项目整体介绍",
          "项目规模与模块结构",
          "页面分区布局解析",
          "元素组详细描述",
          "色彩与样式还原",
          "组件化设计建议",
          "交互逻辑标注",
          "Tailwind CSS 实现方案",
          "FontAwesome 图标建议",
          "picsum.photos 图片资源"
        ],
        "analysis_principles": [
          "功能理解优先",
          "视觉还原精确",
          "逻辑关联性强",
          "开发友好输出"
        ],
        "page_naming_requirements": {
          "chinese_name": "页面的中文描述名称，如：商品详情页、用户登录页、订单列表页",
          "english_name": "适用于代码文件名的英文名称，如：product-detail、user-login、order-list",
          "naming_rules": [
            "中文名：简洁明确，体现页面核心功能",
            "英文名：小写字母，单词间用连字符分隔，符合文件命名规范",
            "英文名避免使用特殊字符，确保跨平台兼容性"
          ]
        },
        "component_design_guidelines": {
          "identification_criteria": [
            "重复出现的UI模块（如商品卡片、用户头像、按钮样式）",
            "具有独立功能的区域（如搜索栏、导航栏、底部操作栏）",
            "可能在其他页面复用的元素（如弹窗、提示框、加载状态）"
          ],
          "naming_conventions": [
            "组件名称使用PascalCase命名，如：ProductCard、UserAvatar、SearchBar",
            "组件文件名使用kebab-case，如：product-card.vue、user-avatar.vue",
            "组件目录按功能分类：common（通用）、business（业务）、layout（布局）"
          ],
          "reusability_assessment": [
            "评估组件在当前项目中的复用频率",
            "分析组件的可配置性和扩展性",
            "考虑组件的维护成本和开发效率提升"
          ],
          "component_examples": [
            "头部导航：HeaderNav - 包含标题、返回按钮、右侧操作",
            "商品卡片：ProductCard - 图片、标题、价格、操作按钮",
            "底部操作栏：BottomAction - 固定底部的主要操作按钮",
            "加载状态：LoadingState - 统一的加载动画和文案",
            "空状态页：EmptyState - 无数据时的占位内容"
          ]
        },
        "project_config_template": {
          "file_name": "project-config.json",
          "description": "项目配置文件模板，建议在项目根目录创建此文件",
          "template": {
            "projectInfo": {
              "name": "项目名称",
              "type": "小程序类型（电商/社交/工具/教育/娱乐等）",
              "description": "项目主要功能和特色的详细描述",
              "targetUsers": "目标用户群体描述",
              "coreFeatures": ["核心功能1", "核心功能2", "核心功能3"]
            },
            "projectScale": {
              "totalPages": "总页面数量（数字）",
              "modules": [
                {
                  "name": "模块名称",
                  "pageCount": "该模块页面数量",
                  "description": "模块功能描述",
                  "pages": ["页面1", "页面2", "页面3"]
                }
              ]
            }
          },
          "usage_benefits": [
            "一次配置，多次复用：复刻其他页面时直接复制JSON内容",
            "信息标准化：确保项目信息的一致性和完整性",
            "团队协作：团队成员可共享同一份项目配置",
            "版本管理：配置文件可纳入版本控制，跟踪项目演进"
          ],
          "example": {
            "projectInfo": {
              "name": "美食外卖小程序",
              "type": "电商",
              "description": "为用户提供便捷的在线点餐服务，支持多商家入驻，实时配送跟踪",
              "targetUsers": "18-45岁的上班族和学生群体",
              "coreFeatures": ["商家浏览", "在线点餐", "支付结算", "配送跟踪", "用户评价"]
            },
            "projectScale": {
              "totalPages": 15,
              "modules": [
                {
                  "name": "首页模块",
                  "pageCount": 3,
                  "description": "首页展示、搜索、分类浏览",
                  "pages": ["首页", "搜索页", "分类页"]
                },
                {
                  "name": "商家模块",
                  "pageCount": 4,
                  "description": "商家详情、菜品展示、购物车",
                  "pages": ["商家列表", "商家详情", "菜品详情", "购物车"]
                },
                {
                  "name": "订单模块",
                  "pageCount": 4,
                  "description": "下单、支付、订单管理",
                  "pages": ["确认订单", "支付页面", "订单列表", "订单详情"]
                },
                {
                  "name": "用户模块",
                  "pageCount": 4,
                  "description": "用户中心、个人信息管理",
                  "pages": ["个人中心", "个人信息", "地址管理", "设置页面"]
                }
              ]
            }
          }
        },
        "picsum_usage_guide": {
          "basic_usage": "https://picsum.photos/宽度/高度 - 获取随机图像",
          "square_image": "https://picsum.photos/尺寸 - 获取方形图像",
          "specific_image": "https://picsum.photos/id/图片ID/宽度/高度 - 获取特定图像",
          "seeded_image": "https://picsum.photos/seed/种子值/宽度/高度 - 获取固定随机图像",
          "grayscale": "在URL末尾添加?grayscale - 获取灰度图像",
          "blur": "在URL末尾添加?blur或?blur=1-10 - 获取模糊图像",
          "advanced_usage": "可组合多个选项，如: https://picsum.photos/id/870/200/300?grayscale&blur=2",
          "prevent_cache": "添加?random=数字 防止缓存，获取多个不同图像",
          "file_formats": "支持.jpg和.webp格式，如: https://picsum.photos/200/300.webp",
          "examples": [
            "头像图片: https://picsum.photos/100/100",
            "商品图片: https://picsum.photos/300/200",
            "轮播图: https://picsum.photos/750/400",
            "背景图: https://picsum.photos/1200/800",
            "缩略图: https://picsum.photos/150/150"
          ]
        }
      }
    },
    "add": {
      "description": "添加新的快捷操作到.QuickAction.json文件中",
      "commands": [
        "【强制要求】全程必须使用中文对话，禁止使用英文回复",
        "【第一阶段：信息收集】",
        "1. 询问用户新快捷操作的短语（触发关键词）",
        "2. 询问用户希望的功能，然后自动总结成中文描述",
        "3. 询问用户新快捷操作的具体功能和执行步骤",
        "4. 询问是否需要用户输入，如需要则询问输入提示语",
        "5. 询问是否有特殊的约束条件或配置要求",
        "【第二阶段：验证检查】",
        "6. 检查新短语是否与现有快捷操作冲突",
        "7. 验证配置格式的正确性和完整性",
        "8. 向用户展示完整的新快捷操作配置",
        "【第三阶段：确认与更新】",
        "9. 等待用户确认配置无误并发出'审核通过'指令",
        "10. 自动读取当前.QuickAction.json文件，并参考已有的快捷操作，除add外",
        "11. 将新的快捷操作添加到配置中",
        "12. 保存更新后的.QuickAction.json文件",
        "13. 向用户确认添加成功并显示更新后的配置"
      ],
      "requiresInput": true,
      "inputPrompt": "请提供要添加的快捷操作信息（我将逐步询问详细配置）：",
      "workflow": "add_quick_action",
      "constraints": {
        "language": "中文强制要求",
        "conflict_check": "必须检查短语冲突",
        "format_validation": "必须验证配置格式",
        "user_confirmation": "必须等待用户'审核通过'确认",
        "auto_update": "自动更新.QuickAction.json文件",
        "success_feedback": "必须提供添加成功的确认反馈"
      }
    }
  }
}
