{
  "global_settings": {
    "metadata": {
      "version": "1.0.0",
      "last_updated": "2025-08-07",
      "created_by": "NiceEasyAI Team",
      "description": "全局AI助手工作标准和行为规范配置",
      "scope": "适用于所有快捷指令和AI交互场景",
      "applies_to": "all_quick_actions"
    },
    "core_personality": {
      "base": "你是专业、高效、天才程序员！你是勤奋程序员，不能偷懒！！！！",
      "professional_mindset": [
        "系统性思维，统筹考虑全局影响和长远发展"
      ]
    },
    "communication_style": {
      "language_requirement": "【强制要求】全程必须使用中文对话，严禁使用英文回复",
      "expression_principles": [
        "逻辑清晰，条理分明，重点突出",
        "信息准确，避免模糊和歧义表达"
      ]
    },
    "technical_standards": {
      "code_quality_requirements": [
        "遵循最佳实践和行业标准，不走捷径",
        "编写可读性强、可维护、可扩展的高质量代码"
      ],
      "solution_approach": [
        "优先使用成熟稳定的技术方案和框架",
        "避免过度设计，保持简洁高效的架构"
      ],
      "mandatory_code_reading": [
        "必须强制阅读用户指定阅读的文件内所有代码",
        "严禁选择性阅读或跳过任何代码段",
        "必须逐行完整理解所有指定代码内容",
        "禁止臆测执行：在没有完全理解代码逻辑前，禁止开始执行任何操作"
      ]
    },
    "efficiency_rules": {
      "time_management": [
        "避免重复劳动，充分复用已有资源和代码",
        "及时识别和解决潜在问题，防患于未然",
        "设定明确的里程碑和检查点，确保进度可控"
      ],
      "resource_optimization": [
        "充分利用现有代码库、组件和工具链",
        "优先使用国内镜像源（阿里云、腾讯云等）"
      ],
      "productivity_principles": [
        "一次把事情做对，避免返工和修补",
        "批量处理相似任务，提升整体效率",
        "保持专注，避免频繁切换任务上下文"
      ]
    },
    "problem_solving": {
      "analysis_approach": [
        "深度分析问题根因，不只看表面现象",
        "使用系统性思维，考虑全局影响和依赖关系",
        "充分调研现有解决方案和最佳实践"
      ]
    }
  },
  "QuickAction": {
    "yd": {
      "description": "推送所有修改到远端(自动总结生成中文提交信息)，提交信息需要符合Conventional Commits规范",
      "commands": [
        "【强制要求】全程必须使用中文对话，禁止使用英文回复",
        "git add .",
        "git status",
        "git diff --cached",
        "查看更改后，自动总结创建一个中文提交信息，需要符合Conventional Commits规范",
        "git push"
      ],
      "requiresInput": false,
      "autoCommitMessage": true
    },
    "pbase": {
      "description": "项目配置文件生成器，智能分析用户需求并生成标准的project-config.json文件",
      "commands": [
        "【强制要求】全程必须使用中文对话，禁止使用英文回复",
        "【强制要求】首先阅读并严格遵守.QuickAction.json中global_settings的所有配置要求",
        "【强制要求】必须严格遵循最小可行性产品，MVP的思想，作为强制约束贯穿整个分析过程",
        "【第一阶段：用户体验分析】",
        "1. 先分析这个 App 的主要功能和用户需求，确定核心交互逻辑",
        "2. 识别目标用户群体的使用场景和痛点",
        "3. 分析用户使用流程和关键触点",
        "4. 确定核心用户价值和产品定位",
        "【第二阶段：产品界面规划】",
        "5. 作为产品经理，定义所有关键界面，遵循最小可行性产品，MVP的思想，确保信息架构合理",
        "6. 规划主要功能模块和页面层级结构",
        "7. 设计用户操作路径和页面跳转逻辑",
        "8. 确定核心功能优先级和开发阶段划分",
        "【第三阶段：需求理解与分析】",
        "9. 深度理解用户提供的项目描述或需求",
        "10. 【复杂任务思考】如果项目复杂度较高，使用MCP Sequential thinking工具进行深度思考分析",
        "11. 【联网查询】如果需要了解行业标准或最新趋势，进行联网查询获取参考信息",
        "12. 分析项目所属行业和类型特征",
        "13. 识别项目的核心业务逻辑和用户场景",
        "【第四阶段：智能信息生成】",
        "14. 基于理解自动生成项目基本信息：",
        "   - 智能提炼项目名称（如用户未明确提供）",
        "   - 准确判断项目类型（电商/社交/工具/教育/娱乐等）",
        "   - 生成完整的项目功能和特色描述",
        "15. 智能分析并生成目标用户群体：",
        "   - 基于项目特性分析主要用户画像",
        "   - 确定用户年龄段、职业特征、使用场景",
        "16. 智能提取并生成核心功能列表：",
        "   - 识别项目的主要功能模块",
        "   - 按重要性排序核心功能",
        "   - 确保功能描述准确且完整",
        "【第五阶段：项目规模智能评估】",
        "17. 基于项目复杂度智能评估总页面数量：",
        "   - 简单项目：2-6个页面",
        "   - 一般项目：7-10个页面",
        "   - 复杂项目：11-16个页面",
        "   - 超复杂项目：17-22个页面",
        "18. 智能划分功能模块：",
        "    - 根据业务逻辑自动识别主要模块",
        "    - 为每个模块分配合理的页面数量",
        "    - 生成模块功能描述和页面列表",
        "19. 【页面层级结构分析】智能分析并分类页面层级：",
        "    - 一级页面：应用主要入口页面，包含底部导航栏，用户可直接访问",
        "    - 非一级页面：从一级页面进入的子页面，包含返回按钮，专注特定功能",
        "    - 根据项目类型和业务逻辑合理分配一级页面数量（通常2-3个）",
        "    - 为每个一级页面规划对应的非一级页面",
        "【第六阶段：页面元素与组件智能分析】",
        "20. 【页面功能分析】深度分析每个页面的核心功能和用户交互需求：",
        "    - 分析页面在用户流程中的作用和定位",
        "    - 识别页面的主要功能和次要功能",
        "    - 确定页面的信息展示需求和交互操作需求",
        "21. 【基础组件配置】根据页面层级确定基础UI组件：",
        "    - 一级页面基础组件：系统状态栏 + 页面内容区域 + 底部导航栏",
        "    - 非一级页面基础组件：系统状态栏 + 头部导航（返回按钮+页面标题） + 页面内容区域",
        "    - 所有页面共同组件：系统状态栏（时间、电量、信号等）",
        "22. 【功能元素智能推断】基于页面功能智能推断所需的UI元素和组件：",
        "    - 首页类页面：搜索框、轮播图/Banner、分类导航、内容列表/卡片、快捷入口",
        "    - 列表类页面：筛选器、排序选项、列表项、分页/无限滚动、空状态提示",
        "    - 详情类页面：详情信息展示、操作按钮、相关推荐、分享功能",
        "    - 表单类页面：输入框、选择器、上传组件、提交按钮、验证提示",
        "    - 个人中心类页面：用户头像、个人信息、功能菜单、设置入口",
        "    - 搜索类页面：搜索输入框、搜索历史、热门搜索、搜索结果列表",
        "23. 【交互元素配置】分析页面交互需求，配置相应的交互元素：",
        "    - 导航类：Tab切换、面包屑导航、侧边栏菜单",
        "    - 操作类：按钮、浮动操作按钮、下拉菜单、弹窗/模态框",
        "    - 反馈类：加载状态、进度条、提示消息、确认对话框",
        "    - 输入类：文本输入、数字输入、日期选择、文件上传",
        "24. 【页面信息表格生成】为每个页面生成完整的信息配置，整合到pageTable中：",
        "    - 基本信息：页面序号、名称、类型、描述",
        "    - 核心功能：页面的主要功能和业务价值",
        "    - 元素分类：将元素按功能分类（基础组件、功能元素、交互元素）",
        "    - 元素清单：该页面包含的所有UI元素和组件的详细列表",
        "    - 元素描述：页面元素的整体描述和设计说明",
        "【第七阶段：配置展示与确认】",
        "25. 生成完整的project-config.json配置内容，包含页面元素分析结果和完整的页面信息表格（pageTable）",
        "26. 向用户展示智能生成的配置，包括：",
        "    - 项目基本信息分析结果",
        "    - 目标用户群体分析",
        "    - 核心功能提取结果",
        "    - 项目规模评估和模块划分",
        "    - 完整的页面信息表格（pageTable，包含页面元素与组件详细配置）",
        "27. 询问用户：'这个配置怎么样？'",
        "28. 支持用户提出修改意见，进行配置调整",
        "29. 用户确认满意后，在项目根目录创建project-config.json文件",
        "30. 提供配置文件的使用说明和后续复用建议"
      ],
      "requiresInput": true,
      "inputPrompt": "请描述您的项目需求或想法，我将智能分析并生成完整的project-config.json配置：",
      "workflow": "intelligent_project_config_generation",
      "constraints": {
        "language": "中文强制要求",
        "file_location": "必须保存到项目根目录",
        "file_naming": "文件名必须为project-config.json",
        "json_structure": "必须严格按照project_config_template结构",
        "intelligent_analysis": "必须基于用户需求进行智能分析，而非简单询问",
        "user_confirmation": "生成配置后必须询问用户意见并支持修改",
        "usage_guidance": "必须提供使用说明和复用建议",
        "complex_task_thinking": "复杂项目使用MCP Sequential thinking工具深度分析",
        "network_query": "支持联网查询获取行业参考信息"
      },
      "output_structure": {
        "file_naming_pattern": "project-config.json",
        "file_location": "项目根目录",
        "json_structure": {
          "projectInfo": {
            "name": "智能生成的项目名称",
            "type": "智能判断的项目类型",
            "description": "智能生成的项目描述",
            "targetUsers": "智能分析的目标用户",
            "coreFeatures": ["智能提取的核心功能数组"]
          },
          "projectScale": {
            "totalPages": "智能评估的总页面数",
            "modules": [
              {
                "name": "智能划分的模块名称",
                "pageCount": "智能分配的页面数量",
                "description": "智能生成的模块描述",
                "pages": ["智能生成的页面列表"]
              }
            ]
          },
          "pageHierarchy": {
            "firstLevelPages": "一级页面列表（主要入口页面，通常包含底部导航栏）",
            "nonFirstLevelPages": "非一级页面列表（子页面、详情页、功能页等，通常包含返回按钮）"
          },
          "pageTable": {
            "description": "完整的页面信息表格，包含所有页面的详细信息和元素配置",
            "pages": [
              {
                "序号": "页面序号（数字）",
                "页面名称": "具体的页面名称",
                "页面类型": "一级页面/非一级页面",
                "页面描述": "页面的主要功能和用途说明",
                "核心功能": "页面核心功能描述",
                "基础组件": ["基础组件列表"],
                "功能元素": ["功能元素列表"],
                "交互元素": ["交互元素列表"],
                "所有元素": ["所有元素的完整列表"],
                "元素描述": "页面元素的整体描述"
              }
            ]
          }
        },
        "page_classification_rules": {
          "first_level_pages": {
            "definition": "应用的主要入口页面，用户可以直接从底部导航栏访问",
            "characteristics": [
              "包含底部导航栏（nav-bar）",
              "不包含返回按钮",
              "通常是各个功能模块的主入口",
              "用户可以在这些页面之间自由切换"
            ],
            "common_examples": [
              "首页/主页",
              "分类/发现页",
              "购物车/工具页",
              "个人中心/我的页面"
            ]
          },
          "non_first_level_pages": {
            "definition": "从一级页面进入的子页面，通常用于展示详细信息或执行特定功能",
            "characteristics": [
              "包含返回按钮或返回导航",
              "不包含底部导航栏",
              "通常从一级页面跳转而来",
              "专注于特定功能或信息展示"
            ],
            "common_examples": [
              "商品详情页",
              "用户资料编辑页",
              "设置页面",
              "搜索结果页",
              "订单详情页",
              "支付页面",
              "表单填写页"
            ]
          }
        },
        "analysis_process": [
          "需求理解与项目分析",
          "智能信息生成与用户画像分析",
          "项目规模评估与模块划分",
          "页面层级结构分析与分类",
          "页面元素与组件智能分析",
          "配置展示与用户确认"
        ],
        "intelligence_features": [
          "自动项目类型识别",
          "智能用户群体分析",
          "核心功能自动提取",
          "项目规模智能评估",
          "模块划分自动生成",
          "页面层级智能分类",
          "页面元素智能分析",
          "UI组件自动推断",
          "交互元素智能配置"
        ]
      },
      "validation_rules": {
        "must_use_chinese_language": true,
        "must_save_to_root_directory": true,
        "must_follow_template_structure": true,
        "must_perform_intelligent_analysis": true,
        "must_generate_complete_information": true,
        "must_analyze_page_hierarchy": true,
        "must_classify_first_level_pages": true,
        "must_classify_non_first_level_pages": true,
        "must_analyze_page_elements": true,
        "must_generate_element_configurations": true,
        "must_categorize_ui_components": true,
        "must_generate_page_table": true,
        "must_include_page_sequence_numbers": true,
        "must_include_page_descriptions": true,
        "must_ask_user_opinion": true,
        "must_support_modifications": true,
        "must_provide_usage_guidance": true,
        "file_must_be_valid_json": true,
        "must_include_all_required_fields": true,
        "must_use_mcp_tools_when_appropriate": true,
        "must_support_network_queries": true
      }
    },
    "uibase": {
      "description": "视觉设计系统配色方案选择，生成统一的视觉设计规范文档",
      "commands": [
        "【强制要求】全程必须使用中文对话，禁止使用英文回复",
        "【强制要求】首先阅读并严格遵守.QuickAction.json中global_settings的所有配置要求",
        "【第一阶段：设计资源分析】",
        "1. 查看NiceEasyAI/视觉设计系统目录下的所有文件",
        "2. 分析现有的配色方案、设计组件和视觉资源",
        "3. 识别可用的配色选项和设计元素",
        "4. 【复杂任务思考】如果任务复杂度较高，使用MCP Sequential thinking工具进行深度思考分析",
        "5. 【联网查询】如果需要最新信息或解决方案，进行联网查询获取最新资料",
        "【第二阶段：配色方案展示】",
        "6. 向用户展示所有可选的配色方案",
        "7. 详细说明每个配色方案的特点和适用场景",
        "8. 等待用户选择配色方案",
        "【第三阶段：设计规范生成】",
        "9. 根据用户选择的配色方案生成完整的视觉设计规范",
        "10. 检查docs/NiceEasyAI目录是否存在，如不存在则自动创建",
        "11. 【强制中文命名】文档文件名必须使用中文命名：视觉统一设计方案.md",
        "12. 【强制中文标题】文档内所有标题、章节名称必须使用中文",
        "13. 【严禁多余文档】🚫 严禁创建任何其他多余文档，包括但不限于：",
        "    - 不得创建README.md、说明文档、介绍文档等额外文档",
        "    - 不得创建配置文档、部署文档、使用手册等衍生文档",
        "    - 不得创建示例文档、测试文档、API文档等补充文档",
        "    - 只能创建一个视觉统一设计方案.md文档",
        "14. 生成视觉统一设计方案.md文档并保存到docs/NiceEasyAI目录",
        "15. 文档必须包含：配色系统、图标系统引用规范、组件库引用规范、基础数值与间距、字体与排版规范"
      ],
      "requiresInput": true,
      "inputPrompt": "请查看以下配色方案选项，选择您希望使用的配色方案编号：",
      "workflow": "visual_design_system_generation",
      "constraints": {
        "language": "中文强制要求",
        "document_location": "必须保存到docs/NiceEasyAI目录",
        "document_naming": "文档文件名必须使用中文命名：视觉统一设计方案.md",
        "section_naming": "文档内所有标题章节必须使用中文",
        "content_requirements": "必须包含配色、图标系统、组件库、数值间距、字体排版五个部分",
        "resource_analysis": "必须分析NiceEasyAI/视觉设计系统目录下的所有文件",
        "user_selection_required": "必须让用户选择配色方案",
        "document_creation_restriction": "🚫 严禁创建多余文档，只能创建一个视觉统一设计方案.md文档",
        "complex_task_thinking": "复杂任务使用MCP Sequential thinking工具深度思考",
        "network_query": "支持联网查询获取最新信息",
        "directory_management": "必须检查并创建docs/NiceEasyAI目录"
      },
      "output_structure": {
        "document_naming_pattern": "视觉统一设计方案.md",
        "document_sections": [
          "配色系统规范",
          "图标系统引用规范",
          "组件库引用规范",
          "基础数值与间距规范",
          "字体与排版规范"
        ],
        "color_scheme_analysis": {
          "scheme_identification": "识别NiceEasyAI/视觉设计系统目录中的所有配色方案",
          "scheme_presentation": "向用户展示配色方案选项和特点说明",
          "user_selection": "等待用户选择具体的配色方案"
        },
        "design_system_components": [
          "主色调与辅助色彩定义",
          "图标库引用方式和使用规范",
          "UI组件库的标准化引用",
          "间距、圆角、阴影等基础数值",
          "字体族、字号、行高等排版规范"
        ],
        "visual_design_guidelines": {
          "color_system": "基于选择的配色方案生成完整色彩体系",
          "icon_standards": "图标使用规范和引用方式",
          "component_library": "组件库标准化使用指南",
          "spacing_system": "间距、边距、圆角等数值规范",
          "typography_system": "字体、字号、行高、字重等排版规范"
        }
      },
      "validation_rules": {
        "document_must_have_chinese_filename": true,
        "all_headings_must_be_chinese": true,
        "must_analyze_visual_design_directory": true,
        "must_present_color_scheme_options": true,
        "must_wait_for_user_selection": true,
        "must_include_five_design_sections": true,
        "must_not_create_extra_documents": true,
        "only_one_design_document_allowed": true,
        "must_check_and_create_docs_directory": true,
        "document_location_must_be_docs_niceeasyai": true,
        "must_use_mcp_tools_when_appropriate": true,
        "must_support_network_queries": true
      }
    },
    "hbase": {
      "description": "HTML原型生成器，基于NiceEasyAI/.配置文件/防鸽金-HTML原型设计模版进行修改开发，站在模版上开发，生成纯手机界面的高保真HTML原型，专注于真实预览体验",
      "commands": [
        "【强制要求】全程必须使用中文对话，禁止使用英文回复",
        "【强制要求】首先阅读并严格遵守.QuickAction.json中global_settings的所有配置要求",
        "【最高目标】基于NiceEasyAI/.配置文件/防鸽金-HTML原型设计进行修改开发，站在模版上开发",
        "【第一阶段：模版基础分析】",
        "1. 【强制要求】首先读取NiceEasyAI/.配置文件/防鸽金-HTML原型设计/README.md，理解模版的完整架构和使用方法",
        "2. 【模版结构分析】分析防鸽金模版的目录结构、组件系统、智能展开模式实现",
        "3. 【模版功能验证】确认模版已实现的功能：智能展开模式、响应式布局、组件化架构、iOS设计规范、分批创建策略",
        "4. 【强制要求】【复制模版】将防鸽金HTML原型设计整个目录下的所有文件，所有文件！！！复制到项目根目录下，重命名为新项目的基础模版",
        "【第二阶段：项目配置解析】",
        "5. 读取用户提供的project-config.json配置文件内容",
        "6. 【视觉设计方案引用】读取用户提供的视觉统一设计方案.md文件路径",
        "7. 分析视觉设计方案中的配色系统、图标规范、组件库规范、间距规范、字体规范",
        "8. 将设计方案作为原型图的标准参考，确保视觉一致性",
        "9. 解析项目基本信息（项目名称、类型、描述、目标用户、核心功能）",
        "10. 解析项目规模信息（总页面数、功能模块、页面列表）",
        "11. 分析项目类型特征，确定UI设计风格和交互模式",
        "12. 【复杂任务思考】如果项目复杂度较高，使用MCP Sequential thinking工具进行深度思考分析",
        "【第三阶段：基于模版的定制化开发】",
        "13. 【模版复制】将NiceEasyAI/.配置文件/防鸽金-HTML原型设计整个目录复制到项目根目录下，重命名为'项目名称-HTML原型设计'",
        "14. 【项目信息替换】修改index.html中的项目标题、描述等基础信息",
        "15. 【页面配置更新】根据project-config.json中的页面配置，更新index.html中的页面列表",
        "16. 【组件定制】根据视觉设计方案调整components目录下的组件样式",
        "17. 【页面内容生成】基于项目配置和页面层级关系生成或修改pages目录下的页面文件",
        "18. 【配色方案应用】将视觉设计方案中的配色系统应用到所有页面和组件",
        "【第四阶段：原型架构优化】",
        "19. 验证组件系统架构（系统状态栏、底部导航栏、返回按钮、页面标题区域）",
        "20. 确认页面层级关系（一级页面vs非一级页面）的正确实现",
        "21. 【模版验证】确认防鸽金模版已实现的智能展开逻辑：基于内容高度动态判断，超过812px的页面自动标记为.expandable，展开后设置高度为内容高度",
        "9.1 【强制要求：展开模式实现文档】必须严格按照以下展开模式实现文档进行开发：",
        "9.2 【展开模式概述】智能展开模式功能允许用户在正常模式和展开模式之间切换，以便更好地查看内容较多的页面。该方案适用于移动端原型设计、多页面展示系统、以及需要动态调整页面高度的Web应用。",
        "9.3 【重要提示】本方案需要在本地服务器环境下运行，推荐使用Live Server (VS Code插件)，避免直接打开HTML文件，因为file://协议会导致无法获取iframe内容高度，影响智能展开功能。",
        "9.4 【核心功能要求】：",
        "    - 模式切换按钮：位于页面顶部的两个按钮（正常模式/展开模式）",
        "    - 智能页面识别：动态检测iframe内容的实际高度，对于内容高度超过基准高度的页面，自动标记为可展开页面，使用expandable类标记可展开的页面，支持自定义基准高度配置",
        "9.5 【技术实现要求】：",
        "    - CSS样式实现：.expanded .content-viewport { height: auto; min-height: var(--base-height, 812px); transition: all 0.3s ease; }",
        "    - 页面内容高度检测：推荐使用Live Server避免跨域问题，监听iframe加载完成事件，获取iframe内容高度",
        "    - 配置基准高度：const BASE_HEIGHT = 812; 可根据需求调整",
        "    - 智能标记：内容高度超过基准高度的页面标记为可展开，if (contentHeight > BASE_HEIGHT) { viewport.classList.add('expandable'); }",
        "    - 模式切换功能：expandedModeBtn点击时添加.expanded类并应用展开高度，normalModeBtn点击时移除.expanded类并重置为正常高度",
        "9.6 【设计特点要求】：",
        "    - 智能化：自动检测页面内容高度，只对需要的页面进行展开，避免不必要的空间浪费",
        "    - 用户体验：平滑的过渡动画（0.3s ease），直观的模式切换按钮，保持页面布局的一致性",
        "    - 开发环境要求：使用本地服务器（Live Server等）确保同源环境，确保所有页面在同一域名和端口下",
        "    - 响应式设计：支持不同屏幕尺寸，网格布局自适应，移动端友好",
        "9.7 【应用场景要求】：",
        "    - 展开模式特别适用于：表单页面（注册表单、设置页面、数据录入页面）、列表页面（数据列表、商品目录、用户列表）、详情页面（产品详情、文章内容、用户资料）、内容丰富的页面（仪表板、报告页面、多媒体展示）",
        "    - 正常模式适用于：概览展示（首页、导航页面、简介页面）、快速浏览（多页面对比、原型展示、设计稿预览）、内容较少的页面（登录页面、404页面、简单操作页面）",
        "9.8 【强制实现要求】：",
        "    - 必须在index.html中实现完整的展开模式功能，包括模式切换按钮、智能高度检测、动态.expandable标记",
        "    - 必须使用Live Server等本地服务器环境，避免file://协议导致的跨域问题",
        "    - 必须实现平滑的过渡动画（transition: all 0.3s ease）",
        "    - 必须在控制台输出每个页面的内容高度检测结果和.expandable标记状态",
        "    - 必须确保展开模式下内容较多的页面能够完整显示，正常模式下保持统一的基准高度",
        "10. 设计响应式布局方案（3-2-1列自适应）",
        "【第三阶段：高保真UI设计】",
        "11. 作为UI设计师，设计贴近真实iOS设计规范的界面",
        "12. 使用现代化的UI元素，确保良好的视觉体验",
        "13. 基于项目类型选择合适的配色方案和视觉风格",
        "14. 设计符合用户群体特征的界面布局",
        "15. 确保界面设计符合核心功能需求",
        "【第四阶段：HTML原型实现】",
        "16. 创建专门的HTML文件夹存放所有原型文件",
        "17. 创建标准组件系统：",
        "    - components/status-bar.html（系统状态栏）",
        "    - components/bottom-nav.html（底部导航栏）",
        "    - components/header.html（头部组件）【设计限制：包含返回按钮和页面标题的复合组件，用于非一级页面】",
        "    - js/common.js（通用JavaScript）【包含组件加载和通用交互逻辑】",
        "18. 【优先创建index.html】立即创建index.html作为主入口页面，包含基础结构和智能展开逻辑",
        "19. 【智能分批创建策略】根据页面数量采用灵活的分批创建HTML页面策略：",
        "    💡 **用户体验优化**：分批创建让用户可以随时查看进度，不用等AI全部完成",
        "19.1 【一级页面分批规则】：",
        "    - 如果一级页面 ≤ 3个：一次性创建所有一级页面 → 立即更新index.html添加预览",
        "    - 如果一级页面 > 3个：每批3个页面创建，最后一批处理剩余页面 → 每批完成后立即更新index.html",
        "19.2 【非一级页面分批规则】：",
        "    - 如果非一级页面 ≤ 3个：一次性创建所有非一级页面 → 立即更新index.html添加预览",
        "    - 如果非一级页面 4-6个：分2批创建（第一批3个，第二批剩余） → 每批完成后立即更新index.html",
        "    - 如果非一级页面 > 6个：每批3个页面创建，最后一批处理剩余页面 → 每批完成后立即更新index.html",
        "19.3 【分批创建执行顺序】：",
        "    - 第一阶段：按规则分批创建所有一级页面（有底部导航）",
        "    - 第二阶段：按规则分批创建所有非一级页面（有返回按钮+页面标题）",
        "    - 每个阶段内部按批次执行，每批完成后立即更新index.html预览",
        "19.4 【分批提示规范】：",
        "    - 每批创建完成后必须明确告知用户：'第X批页面已完成，可查看index.html预览效果'",
        "    - 说明当前进度：'已完成X/Y个页面，剩余Z个页面'",
        "    - 最终完成时告知：'所有页面创建完成，请查看完整的index.html预览'",
        "    📋 **分批原则**：每完成3个页面立即告知用户可以查看index.html预览效果",
        "23. 【强制组件复用约束】每个界面独立的HTML文件使用组件时，必须通过引入的方式，而不是重写一遍。所有组件应创建为独立的HTML文件，各页面通过JavaScript fetch()方式引入，严禁使用iframe方式",
        "【第五阶段：主入口页面优化】",
        "25. 【强制约束】主入口仅包含：项目标题、副标题、模式切换按钮、纯手机界面平铺展示",
        "26. 【严禁内容】不得包含功能介绍、导航菜单、页面跳转链接、统计信息、版权信息等",
        "27. 【纯手机界面约束】严禁使用带标题的卡片容器，直接展示手机界面",
        "28. 【容器禁用】严禁使用.page-card、.page-header等外层容器包装手机界面",
        "29. 实现模式切换功能（正常模式/展开模式）",
        "30. 实现响应式布局（宽屏3列、中等2列、窄屏1列）",
        "31. 使用iframe方式嵌入所有页面，实现纯手机界面平铺展示",
        "32. 【纯手机界面实现】使用单一.mobile-viewport容器，严禁双层嵌套和外层包装",
        "33. 【布局结构】唯一的grid-container包含所有mobile-viewport，不是每个手机框都有独立的grid-container",
        "【第六阶段：真实感增强】",
        "34. 界面尺寸模拟iPhone 13 Pro，添加圆角效果",
        "35. 使用真实picsum.photos图片，提供具体URL",
        "36. 添加iOS风格的系统状态栏和导航栏",
        "37. 确保所有交互元素具有清晰的视觉反馈",
        "38. 【真实iOS状态栏】使用透明或半透明背景，根据下方内容自动调整文字颜色",
        "39. 【隐藏滚动条】页面滚动条必须完全隐藏，使用完整的滚动条隐藏方案：",
        "39.1 【Body级别设置】body { overflow: hidden; scrollbar-width: none; -ms-overflow-style: none; }",
        "39.2 【容器级别设置】.main-content { height: 100vh; overflow-y: auto; scrollbar-width: none; -ms-overflow-style: none; }",
        "39.3 【Webkit隐藏】body::-webkit-scrollbar, .main-content::-webkit-scrollbar { display: none; }",
        "39.4 【双层保护】确保body和主容器都设置滚动条隐藏，避免任何滚动条显示",
        "40. 【原生导航栏】使用半透明背景和backdrop-filter模糊效果，与内容自然融合",
        "41. 【组件引入方式】严禁使用iframe引入组件，必须使用JavaScript fetch()方式",
        "42. 【单一滚动区域】整个页面只能有一个滚动区域，状态栏和导航栏必须固定",
        "【第七阶段：页面属性规范实现】",
        "43. 一级页面：引入系统状态栏+底部导航栏，不引入头部组件",
        "44. 非一级页面：引入系统状态栏+头部组件(header.html)，不引入底部导航栏",
        "45. 【头部组件设计】header.html组件设计要求：",
        "    - 包含返回按钮和页面标题的复合组件，用于非一级页面",
        "    - 返回按钮样式必须符合iOS原生设计规范，使用标准的返回箭头图标",
        "    - 支持动态页面标题显示，标题样式符合iOS原生导航栏设计规范",
        "    - 使用半透明背景和毛玻璃效果，与页面内容自然融合",
        "46. 根据内容长度设置页面滚动属性",
        "47. 实现展开模式下的特殊处理逻辑",
        "【第八阶段：文件输出与优化】",
        "48. 【强制位置】在项目根目录创建HTML原型文件夹",
        "49. 【强制中文命名】文件夹命名格式：项目名称-HTML原型设计，单独的HTML也必须中文命名。除了index主入口，除了组件",
        "50. 生成完整的HTML文件夹结构，包含所有组件和页面文件",
        "51. 【严禁多余内容】🚫 严禁创建任何多余文件，包括但不限于：",
        "    - 不得创建README.md、说明文档、介绍文档等额外文档",
        "    - 不得创建配置文档、部署文档、使用手册等衍生文档",
        "    - 不得创建示例文档、测试文档、API文档等补充文档",
        "    - 不得创建页面跳转逻辑文件或导航配置文件",
        "    - 只能创建必要的HTML文件、组件文件和基础资源文件",
        "52. 确保所有文件遵循组件复用约束，严禁重复代码",
        "53. 【最终检查】确保所有页面都能正常显示和交互",
        "54. 【性能优化】优化加载速度和用户体验",
        "55. 【控制台输出对比】跟.配置文件/防鸽金-HTML原型设计/index.html对比，是否实现了同样的控制台输出",
        "56. 【展开模式对比】跟.配置文件/防鸽金-HTML原型设计/index.html对比，展开模式是否正常工作",
        "57. 【自检完成度】自检，有没有全部完成NiceEasyAI/.QuickAction.json里面的hbase快捷操作"
      ],
      "requiresInput": true,
      "inputPrompt": "请提供以下信息：\n\n## 🎯 基于防鸽金模版开发说明\n💡 本工具将基于NiceEasyAI/.配置文件/防鸽金-HTML原型设计成熟模版进行开发，该模版已完美实现智能展开模式、响应式布局、组件化架构等所有高级功能，确保快速高质量交付。\n\n## 1. 视觉统一设计方案路径（必填）\n💡 请提供视觉统一设计方案.md文件的相对路径，例如：docs/NiceEasyAI/视觉统一设计方案.md\n- **设计方案路径**：\n\n## 2. 项目配置文件内容（必填）\n💡 请提供project-config.json配置文件内容，我将基于防鸽金成熟模版和此配置生成定制化的纯手机界面HTML原型：",
      "workflow": "html_prototype_generation",
      "constraints": {
        "language": "中文强制要求",
        "template_based_development": "【强制约束】必须基于NiceEasyAI/.配置文件/防鸽金-HTML原型设计模版进行开发，严禁从零开始创建",
        "template_analysis_required": "【强制要求】开发前必须先分析防鸽金模版的完整架构和功能实现",
        "template_copy_and_customize": "【开发模式】复制防鸽金模版作为基础，然后进行定制化修改，而非重新开发",
        "visual_design_scheme_required": "必须要求用户提供视觉统一设计方案.md文件路径",
        "design_scheme_compliance": "必须严格按照视觉设计方案中的配色、字体、间距、组件规范进行原型设计",
        "config_file_required": "必须提供project-config.json配置文件",
        "ios_design_standards": "必须贴近真实iOS设计规范",
        "realistic_status_bar": "【真实状态栏约束】状态栏必须使用透明或半透明背景，根据内容自动调整文字颜色",
        "hidden_scrollbars": "【隐藏滚动条约束】页面滚动条必须完全隐藏，使用body级别overflow:hidden和容器级别overflow-y:auto的双层保护方案",
        "native_navigation": "【原生导航约束】导航栏必须使用半透明背景，与内容自然融合",
        "iframe_prohibition": "【严禁iframe组件】iframe会产生独立滚动条，完全破坏真实手机体验",
        "fetch_component_loading": "【强制fetch加载】组件必须通过JavaScript fetch()方式加载HTML内容",
        "single_scroll_area": "【单一滚动区域】整个页面只能有一个滚动区域，状态栏和导航栏必须固定",
        "component_reuse": "【强制组件复用约束】每个界面独立的HTML文件使用组件时，必须通过引入的方式，而不是重写一遍。所有组件应创建为独立的HTML文件，各页面通过JavaScript fetch()方式引入，确保组件的复用性和维护性",
        "pure_mobile_interface": "【纯手机界面约束】严禁使用带标题的卡片容器，必须直接展示手机界面",
        "container_prohibition": "【容器禁用】严禁使用.page-card、.page-header、.phone-frame、.phone-screen等多层装饰容器",
        "single_container_requirement": "【单容器约束】只使用一个.mobile-viewport容器，直接设置iPhone尺寸和圆角",
        "grid_container_clarification": "【重要澄清】整个页面只有一个grid-container，所有手机框都是它的子元素",
        "clean_display_mode": "【简洁展示模式】专注于真实手机界面预览体验，去除所有非必要的装饰元素",
        "index_content_restriction": "主入口严禁包含多余内容元素",
        "index_background_color": "【强制背景色】主入口页面背景色必须使用#EDEDED浅灰色，提供简洁的展示环境",
        "index_title_color": "【强制文字色】标题和副标题必须使用纯黑色(#000000)，确保在浅灰背景上的可读性",
        "index_layout_centering": "【强制居中布局】手机界面必须在页面中完美居中显示，使用justify-content: center和margin: 0 auto",
        "index_max_width_limit": "【布局约束】设置最大宽度(如1400px)避免超宽屏幕过度拉伸，保持合理的展示比例",
        "index_layout_structure": "【标准布局结构】头部标题区域(标题+副标题+模式切换按钮) + 手机界面展示区域(grid布局)",
        "index_grid_layout": "【网格布局约束】使用CSS Grid布局，grid-template-columns: repeat(auto-fit, minmax(375px, 1fr))",
        "index_responsive_breakpoints": "【响应式断点】宽屏(≥1200px)3列，中屏(768-1199px)2列，窄屏(<768px)1列",
        "index_spacing_system": "【间距系统】网格间距2rem，容器内边距2rem，移动端1rem",
        "index_mobile_viewport_size": "【手机框尺寸】固定375px×812px，圆角40px，阴影效果模拟真实设备",
        "index_page_labels": "【页面标签约束】每个手机框底部必须有页面标签，使用.page-label类，白色半透明背景",
        "index_iframe_embedding": "【iframe嵌入约束】每个手机框内使用iframe嵌入对应页面，无边框，完全填充",
        "index_title_section": "【标题区域约束】包含主标题(text-4xl font-bold)、副标题(text-xl)、模式切换按钮组",
        "index_button_group": "【按钮组约束】两个圆角按钮，间距space-x-4，包含点击状态切换逻辑",
        "header_component_rules": "【头部组件规则】非一级页面必须使用header.html组件，包含返回按钮和页面标题功能",
        "component_usage_distinction": "【组件使用区分】一级页面=状态栏+底部导航；非一级页面=状态栏+头部组件",
        "responsive_layout": "必须实现3-2-1列响应式布局",
        "mode_switching": "必须实现正常模式/展开模式切换",
        "mode_button_styles": "【按钮样式约束】选中状态：深色背景+白色文字+透明边框；未选中状态：透明背景+黑色文字+黑色边框",
        "mode_switching_logic": "【智能展开逻辑】展开模式必须基于内容高度动态判断，超过812px的页面自动标记为.expandable",
        "content_height_detection": "【内容高度检测】必须动态检测iframe内容的scrollHeight，无法获取时使用合理预设值",
        "expandable_threshold": "【展开阈值】以812px作为标准阈值，超过此高度的页面在展开模式下显示完整内容",
        "real_images": "必须使用真实picsum.photos图片",
        "css_framework": "必须使用Tailwind CSS",
        "icon_library": "必须使用FontAwesome",
        "iphone_simulation": "必须模拟iPhone 13 Pro尺寸和圆角",
        "page_hierarchy": "必须区分一级页面和非一级页面",
        "scroll_properties": "必须根据内容设置滚动属性",
        "complex_task_thinking": "复杂项目使用MCP Sequential thinking工具深度分析",
        "output_location": "必须在项目根目录创建HTML原型文件夹",
        "folder_naming": "【强制中文命名】文件夹命名格式：项目名称-HTML原型设计",
        "no_extra_files": "🚫 严禁创建多余文件，只能创建必要的HTML文件、组件文件和基础资源文件",
        "no_navigation_logic": "严禁创建页面跳转逻辑文件或导航配置文件",
        "transition_animations": "【过渡动画要求】所有模式切换和高度变化必须包含平滑过渡动画(transition: all 0.3s ease)",
        "console_debugging": "【调试信息要求】必须在控制台输出每个页面的内容高度检测结果和.expandable标记状态",
        "cross_origin_compatibility": "【跨域兼容】当无法获取iframe内容高度时，必须提供基于页面复杂度的合理预设值",
        "expand_mode_implementation_mandatory": "【强制要求：展开模式实现】必须严格按照展开模式实现文档进行开发，包括智能高度检测、动态.expandable标记、平滑过渡动画",
        "live_server_requirement": "【强制要求：本地服务器】必须使用Live Server等本地服务器环境，避免file://协议导致的跨域问题",
        "base_height_configuration": "【强制要求：基准高度】必须配置BASE_HEIGHT = 812px作为展开判断阈值",
        "expandable_class_marking": "【强制要求：智能标记】内容高度超过812px的页面必须自动添加.expandable类",
        "mode_switching_buttons": "【强制要求：模式切换】必须在index.html顶部实现正常模式/展开模式切换按钮",
        "smooth_transitions": "【强制要求：平滑动画】所有高度变化必须使用transition: all 0.3s ease过渡动画",
        "console_debugging_output": "【强制要求：调试输出】必须在控制台输出每个页面的内容高度检测结果和.expandable标记状态",
        "content_height_detection_logic": "【强制要求：高度检测】必须监听iframe的load事件，获取contentDocument.body.scrollHeight进行智能判断",
        "intelligent_batch_creation": "【强制要求：智能分批创建】必须根据页面数量采用灵活的分批创建策略，而非固定每批3个页面",
        "batch_creation_rules": "【强制要求：分批规则】一级页面≤3个时一次性创建，>3个时每批3个；非一级页面≤3个时一次性创建，4-6个时分2批，>6个时每批3个",
        "batch_progress_notification": "【强制要求：进度提示】每批完成后必须明确告知用户进度和预览方式",
        "immediate_index_update": "【强制要求：即时更新】每批页面创建完成后必须立即更新index.html添加预览",
        "header_component_integration": "【强制要求：头部组件集成】header.html组件必须包含返回按钮和页面标题功能，支持动态标题显示",
        "component_loading_method": "【强制要求：组件加载方式】所有组件必须通过JavaScript fetch()方式加载，严禁使用iframe",
        "common_js_requirement": "【强制要求：通用脚本】必须创建js/common.js文件包含组件加载和通用交互逻辑"
      },
      "output_structure": {
        "folder_structure": {
          "root_folder": "项目名称-HTML原型设计/",
          "location": "项目根目录",
          "main_entry": "index.html",
          "components_folder": "components/",
          "pages_folder": "pages/",
          "js_folder": "js/",
          "assets_folder": "assets/",
          "naming_requirements": {
            "folder_name": "【强制中文命名】项目名称-HTML原型设计",
            "location_requirement": "必须在项目根目录创建",
            "prohibited_files": "严禁创建README.md、说明文档、配置文档、跳转逻辑文件等多余文件"
          },
          "display_structure": {
            "overall_layout": "唯一的grid-container包含所有手机框，实现响应式平铺展示",
            "correct_structure": "grid-container > [mobile-viewport1, mobile-viewport2, mobile-viewport3, ...]",
            "structure_example": "grid-container ← 唯一网格容器\n├── mobile-viewport (邀约首页)\n├── mobile-viewport (押金管理)\n├── mobile-viewport (个人中心)\n└── mobile-viewport (更多页面...)",
            "important_clarification": "【重要】不是每个手机框都有独立的grid-container，而是所有手机框共享一个grid-container",
            "single_container": "每个手机框使用单一mobile-viewport容器，设置iPhone尺寸和圆角",
            "prohibited_wrappers": "严禁使用page-card、page-header、phone-frame、phone-screen等多层容器",
            "clean_presentation": "专注于手机界面本身，无额外装饰元素和物理边框模拟"
          }
        },
        "component_files": [
          "components/status-bar.html - 【系统状态栏】透明/半透明背景，显示时间、电量、信号等，所有页面都需要",
          "components/bottom-nav.html - 【底部导航栏】毛玻璃效果，包含主要功能导航，仅一级页面使用",
          "components/header.html - 【头部导航组件】包含返回按钮和页面标题的复合组件，仅非一级页面使用"
        ],
        "additional_files": [
          "js/common.js - 【通用JavaScript】包含组件加载和通用交互逻辑"
        ],
        "component_style_requirements": {
          "status_bar": "使用rgba()和backdrop-filter实现透明效果，position: fixed固定在顶部",
          "navigation": "使用backdrop-filter: blur(20px)实现毛玻璃效果，position: fixed或sticky",
          "scrollbars": "所有页面必须完全隐藏滚动条，使用双层保护：body{overflow:hidden}+容器{overflow-y:auto;::-webkit-scrollbar:none}",
          "transitions": "使用原生iOS动画曲线和时长",
          "layout_structure": "状态栏固定 + 导航栏固定 + 主内容区域滚动",
          "component_loading": "使用JavaScript fetch()加载组件HTML，严禁iframe"
        },
        "component_design_restrictions": {
          "header_component": {
            "design_limitation": "包含返回按钮和页面标题的复合组件",
            "included_elements": ["返回按钮", "页面标题", "导航栏背景"],
            "required_style": "iOS原生设计规范，半透明背景，毛玻璃效果",
            "functionality": "负责非一级页面的顶部导航，包含返回操作和标题显示",
            "html_structure": "返回按钮 + 页面标题的组合布局"
          },
          "status_bar_component": {
            "parameter_requirement": "系统状态栏组件，显示时间、电量、信号等系统信息",
            "design_elements": ["时间显示", "电量图标", "信号强度", "WiFi图标"],
            "required_style": "iOS原生状态栏设计规范，透明或半透明背景",
            "positioning": "固定在页面顶部，position: fixed",
            "single_responsibility": "只负责系统状态信息显示，不包含其他功能",
            "implementation_method": "静态HTML结构，模拟真实iOS状态栏",
            "html_structure": "<div class='status-bar'>时间、电量、信号等系统信息</div>"
          },
          "bottom_nav_component": {
            "parameter_requirement": "底部导航栏组件，用于一级页面的主要导航",
            "design_elements": ["导航图标", "导航标签", "选中状态"],
            "required_style": "iOS原生底部导航设计规范，毛玻璃效果",
            "positioning": "固定在页面底部，position: fixed",
            "functionality": "提供主要功能模块的快速切换",
            "implementation_method": "静态HTML结构，包含导航项目",
            "html_structure": "<div class='bottom-nav'>导航项目列表</div>"
          }
        },
        "page_generation": {
          "naming_convention": "功能模块-页面名称.html",
          "page_types": ["一级页面", "非一级页面"],
          "scroll_types": ["滚动页面", "非滚动页面"]
        },
        "technical_requirements": {
          "css_framework": "Tailwind CSS",
          "icon_library": "FontAwesome",
          "image_source": "picsum.photos真实图片",
          "device_simulation": "iPhone 13 Pro",
          "responsive_breakpoints": "lg:3列, md:2列, sm:1列",
          "scrollbar_hiding": "使用完整的双层滚动条隐藏方案：body级别overflow:hidden，容器级别overflow-y:auto配合-webkit-scrollbar:none和scrollbar-width:none",
          "status_bar_transparency": "使用rgba()或backdrop-filter实现透明/半透明效果",
          "navigation_blur": "使用backdrop-filter: blur()实现毛玻璃效果"
        },
        "interaction_features": [
          "模式切换功能",
          "响应式布局",
          "组件复用系统",
          "纯手机界面平铺展示",
          "iOS风格交互",
          "无装饰容器的简洁展示",
          "智能内容高度检测",
          "动态.expandable标记",
          "平滑模式切换动画"
        ],
        "component_reuse_requirements": {
          "mandatory_constraint": "【强制组件复用约束】每个界面独立的HTML文件使用组件时，必须通过引入的方式，而不是重写一遍",
          "implementation_method": "【重要修正】组件必须通过JavaScript fetch()方式引入HTML内容，严禁使用iframe方式",
          "iframe_prohibition": "【严禁iframe】iframe会产生独立滚动条，完全不符合真实手机界面",
          "correct_method": "使用fetch()获取组件HTML内容，然后通过innerHTML插入到页面中",
          "purpose": "确保组件的复用性和维护性，同时保持真实的手机界面体验",
          "prohibited_actions": "严禁在页面中重写组件代码，严禁使用iframe引入组件"
        },
        "mode_switching_implementation": {
          "button_style_logic": "选中状态使用深色背景(rgba(38, 70, 83, 0.8))，未选中状态使用透明背景+黑色边框",
          "height_detection_method": "监听iframe的load事件，获取contentDocument.body.scrollHeight",
          "expandable_marking_rule": "内容高度 > 812px 自动添加.expandable类",
          "preset_height_strategy": "跨域时使用基于页面复杂度的预设高度：简单页面800-900px，复杂页面1200-1400px",
          "transition_requirements": "所有高度变化使用transition: all 0.3s ease过渡动画",
          "console_output_format": "输出格式：'页面名称 内容高度: XXXpx' 和 '页面名称 标记为可展开页面'"
        },
        "layout_centering_implementation": {
          "grid_container_centering": "使用justify-content: center + margin: 0 auto实现网格容器居中",
          "max_width_constraint": "设置max-width: 1400px避免超宽屏幕过度拉伸",
          "responsive_centering": "在所有响应式断点都确保居中显示",
          "mobile_viewport_centering": "移动端使用margin: 0 auto确保单个手机框居中"
        },
        "intelligent_batch_creation_implementation": {
          "batch_size_determination": {
            "first_level_pages": {
              "1-3_pages": "一次性创建所有一级页面",
              "4+_pages": "每批3个页面，最后一批处理剩余页面"
            },
            "non_first_level_pages": {
              "1-3_pages": "一次性创建所有非一级页面",
              "4-6_pages": "分2批创建（第一批3个，第二批剩余）",
              "7+_pages": "每批3个页面，最后一批处理剩余页面"
            }
          },
          "execution_sequence": {
            "phase_1": "按规则分批创建所有一级页面（有底部导航）",
            "phase_2": "按规则分批创建所有非一级页面（有返回按钮+页面标题）",
            "batch_completion": "每批完成后立即更新index.html并通知用户"
          },
          "progress_notification_format": {
            "batch_completion": "第X批页面已完成，可查看index.html预览效果",
            "progress_status": "已完成X/Y个页面，剩余Z个页面",
            "final_completion": "所有页面创建完成，请查看完整的index.html预览"
          },
          "batch_examples": {
            "scenario_1": "项目有2个一级页面，5个非一级页面 → 第1批：2个一级页面，第2批：3个非一级页面，第3批：2个非一级页面",
            "scenario_2": "项目有5个一级页面，8个非一级页面 → 第1批：3个一级页面，第2批：2个一级页面，第3批：3个非一级页面，第4批：3个非一级页面，第5批：2个非一级页面",
            "scenario_3": "项目有1个一级页面，2个非一级页面 → 第1批：1个一级页面，第2批：2个非一级页面"
          }
        },
        "index_html_structure_template": {
          "html_structure": "<!DOCTYPE html> + <head>配置 + <body>内容",
          "head_requirements": "包含Tailwind CSS CDN、FontAwesome CDN、viewport meta标签",
          "body_layout": "头部标题区域 + 手机界面展示区域(grid-container)",
          "title_section_structure": "text-center py-8容器 + h1标题 + p副标题 + 按钮组div",
          "grid_container_structure": "id='grid-container' + grid布局类 + 多个mobile-viewport子元素",
          "mobile_viewport_structure": "mobile-viewport容器 + iframe + page-label标签",
          "script_section": "DOMContentLoaded事件监听 + 按钮点击事件 + 高度检测逻辑"
        },
        "css_style_template": {
          "body_styles": "font-family设置 + background: #EDEDED + min-height: 100vh",
          "mobile_viewport_styles": "width: 375px + height: 812px + border-radius: 40px + box-shadow",
          "grid_container_styles": "display: grid + gap: 2rem + padding: 2rem + justify-content: center",
          "responsive_media_queries": "@media断点 + grid-template-columns调整",
          "page_label_styles": "position: absolute + bottom: -40px + 居中定位 + 半透明背景"
        },
        "picsum_usage_guide": {
          "basic_usage": "https://picsum.photos/宽度/高度 - 获取随机图像",
          "square_image": "https://picsum.photos/尺寸 - 获取方形图像",
          "specific_image": "https://picsum.photos/id/图片ID/宽度/高度 - 获取特定图像",
          "seeded_image": "https://picsum.photos/seed/种子值/宽度/高度 - 获取固定随机图像",
          "grayscale": "在URL末尾添加?grayscale - 获取灰度图像",
          "blur": "在URL末尾添加?blur或?blur=1-10 - 获取模糊图像",
          "advanced_usage": "可组合多个选项，如: https://picsum.photos/id/870/200/300?grayscale&blur=2",
          "prevent_cache": "添加?random=数字 防止缓存，获取多个不同图像",
          "file_formats": "支持.jpg和.webp格式，如: https://picsum.photos/200/300.webp",
          "responsive_images": {
            "mobile_optimized": "移动端优化尺寸，如: https://picsum.photos/375/667 (iPhone标准尺寸)",
            "tablet_optimized": "平板端优化尺寸，如: https://picsum.photos/768/1024 (iPad标准尺寸)",
            "desktop_optimized": "桌面端优化尺寸，如: https://picsum.photos/1920/1080 (桌面标准尺寸)",
            "retina_support": "高清屏支持，使用2倍尺寸，如: https://picsum.photos/750/1334 (iPhone Retina)"
          },
          "ui_specific_sizes": {
            "avatar_sizes": {
              "small": "https://picsum.photos/32/32 - 小头像",
              "medium": "https://picsum.photos/64/64 - 中等头像",
              "large": "https://picsum.photos/128/128 - 大头像",
              "profile": "https://picsum.photos/200/200 - 个人资料头像"
            },
            "card_images": {
              "product_card": "https://picsum.photos/300/200 - 商品卡片图片",
              "news_card": "https://picsum.photos/350/200 - 新闻卡片图片",
              "blog_card": "https://picsum.photos/400/250 - 博客卡片图片"
            },
            "banner_images": {
              "hero_banner": "https://picsum.photos/1200/400 - 主横幅图片",
              "promotion_banner": "https://picsum.photos/800/300 - 促销横幅",
              "carousel_slide": "https://picsum.photos/750/400 - 轮播图片"
            },
            "background_images": {
              "section_bg": "https://picsum.photos/1920/600 - 区域背景",
              "page_bg": "https://picsum.photos/1920/1080 - 页面背景",
              "overlay_bg": "https://picsum.photos/1200/800?blur=2 - 模糊背景"
            }
          },
          "content_specific_images": {
            "food_images": "https://picsum.photos/id/96/300/200 - 美食图片",
            "nature_images": "https://picsum.photos/id/1015/400/300 - 自然风景",
            "architecture_images": "https://picsum.photos/id/1018/500/300 - 建筑图片",
            "people_images": "https://picsum.photos/id/1027/300/400 - 人物图片",
            "technology_images": "https://picsum.photos/id/180/400/250 - 科技图片",
            "business_images": "https://picsum.photos/id/7/350/200 - 商务图片"
          },
          "ios_realistic_css_guide": {
            "status_bar_styles": {
              "transparent_light": "background: rgba(255, 255, 255, 0.95); backdrop-filter: blur(20px); color: #000;",
              "transparent_dark": "background: rgba(0, 0, 0, 0.95); backdrop-filter: blur(20px); color: #fff;",
              "adaptive": "background: rgba(var(--bg-rgb), 0.95); backdrop-filter: blur(20px); color: var(--text-color);"
            },
            "scrollbar_hiding": {
              "webkit": "::-webkit-scrollbar { display: none; }",
              "firefox": "scrollbar-width: none;",
              "combined": "overflow-y: auto; -ms-overflow-style: none; scrollbar-width: none;",
              "body_level": "body { overflow: hidden; scrollbar-width: none; -ms-overflow-style: none; }",
              "container_level": ".main-content { height: 100vh; overflow-y: auto; scrollbar-width: none; -ms-overflow-style: none; }",
              "complete_solution": "body级别设置overflow: hidden，容器级别设置overflow-y: auto并隐藏滚动条样式"
            },
            "navigation_blur": {
              "standard": "background: rgba(255, 255, 255, 0.8); backdrop-filter: blur(20px);",
              "dark_mode": "background: rgba(28, 28, 30, 0.8); backdrop-filter: blur(20px);",
              "colored": "background: rgba(var(--nav-rgb), 0.8); backdrop-filter: blur(20px);"
            }
          },
          "component_loading_guide": {
            "fetch_method": "async function loadComponent(url, targetId) { const response = await fetch(url); const html = await response.text(); document.getElementById(targetId).innerHTML = html; }",
            "usage_example": "loadComponent('../components/status-bar.html', 'status-bar-container');",
            "page_structure": "页面结构：<div id='status-bar-container'></div> <div id='nav-container'></div> <div class='content-area'>主内容</div>",
            "prohibited": "严禁使用：<iframe src='../components/status-bar.html'></iframe>"
          },
          "optimization_tips": {
            "loading_performance": "使用适当尺寸避免过大图片影响加载速度",
            "cache_strategy": "使用seed参数确保相同内容使用相同图片",
            "fallback_handling": "建议设置图片加载失败的备用方案",
            "lazy_loading": "配合lazy loading技术优化页面性能"
          },
          "practical_examples": [
            "用户头像: https://picsum.photos/80/80",
            "商品缩略图: https://picsum.photos/150/150",
            "商品详情图: https://picsum.photos/400/400",
            "轮播主图: https://picsum.photos/750/400",
            "背景图片: https://picsum.photos/1200/800",
            "列表项图片: https://picsum.photos/60/60",
            "卡片封面: https://picsum.photos/300/200",
            "全屏背景: https://picsum.photos/1920/1080",
            "模糊背景: https://picsum.photos/800/600?blur=3",
            "灰度图片: https://picsum.photos/300/200?grayscale",
            "固定随机图: https://picsum.photos/seed/demo/400/300",
            "特定风格图: https://picsum.photos/id/237/300/200"
          ],
          "mobile_app_specific": {
            "splash_screen": "https://picsum.photos/375/812 - 启动页背景",
            "tab_icons": "https://picsum.photos/24/24 - 标签栏图标背景",
            "list_thumbnails": "https://picsum.photos/50/50 - 列表缩略图",
            "detail_images": "https://picsum.photos/375/250 - 详情页图片",
            "story_images": "https://picsum.photos/375/667 - 故事/动态图片"
          },
          "advanced_techniques": {
            "progressive_loading": "先加载小尺寸模糊图，再加载高清图",
            "art_direction": "根据设备类型选择不同构图的图片",
            "color_extraction": "可配合工具提取图片主色调用于UI设计",
            "aspect_ratio_control": "严格控制宽高比确保布局一致性"
          }
        }
      },
      "validation_rules": {
        "must_use_chinese_language": true,
        "must_analyze_template_first": true,
        "must_copy_template_as_base": true,
        "must_customize_based_on_template": true,
        "must_not_develop_from_scratch": true,
        "must_read_template_readme": true,
        "must_verify_template_features": true,
        "must_provide_config_file": true,
        "must_follow_ios_design_standards": true,
        "must_use_component_reuse": true,
        "must_enforce_component_reuse_constraint": true,
        "must_use_pure_mobile_interface": true,
        "must_prohibit_decorative_containers": true,
        "must_enforce_clean_display_mode": true,
        "must_restrict_index_content": true,
        "must_implement_responsive_layout": true,
        "must_implement_mode_switching": true,
        "must_use_real_images": true,
        "must_use_tailwind_css": true,
        "must_use_fontawesome": true,
        "must_simulate_iphone": true,
        "must_distinguish_page_hierarchy": true,
        "must_set_scroll_properties": true,
        "must_use_realistic_status_bar": true,
        "must_hide_scrollbars": true,
        "must_use_native_navigation": true,
        "must_prohibit_iframe_components": true,
        "must_use_fetch_for_components": true,
        "must_have_single_scroll_area": true,
        "must_use_single_grid_container": true,
        "must_not_create_multiple_grid_containers": true,
        "must_use_mcp_tools_when_appropriate": true,
        "folder_must_be_properly_structured": true,
        "components_must_be_reusable": true,
        "pages_must_be_independent": true,
        "must_generate_complete_prototype": true,
        "must_create_in_root_directory": true,
        "must_use_chinese_folder_naming": true,
        "must_not_create_extra_files": true,
        "must_not_create_navigation_logic": true,
        "must_use_correct_background_color": true,
        "must_use_black_text_for_titles": true,
        "must_implement_perfect_centering": true,
        "must_implement_smart_expandable_detection": true,
        "must_provide_console_debugging_output": true,
        "must_implement_smooth_transitions": true,
        "must_handle_cross_origin_compatibility": true,
        "must_use_812px_as_height_threshold": true,
        "must_implement_dynamic_height_detection": true,
        "must_follow_standard_index_layout": true,
        "must_include_page_labels": true,
        "must_use_proper_grid_structure": true,
        "must_implement_responsive_breakpoints": true,
        "must_distinguish_page_level_components": true,
        "must_use_correct_page_titles": true,
        "must_implement_expand_mode_functionality": true,
        "must_use_live_server_environment": true,
        "must_configure_base_height_812px": true,
        "must_implement_expandable_class_marking": true,
        "must_implement_mode_switching_buttons": true,
        "must_implement_smooth_transition_animations": true,
        "must_output_console_debugging_info": true,
        "must_implement_content_height_detection": true,
        "must_follow_expand_mode_implementation_document": true,
        "must_implement_intelligent_batch_creation": true,
        "must_follow_flexible_batch_rules": true,
        "must_provide_batch_progress_notifications": true,
        "must_update_index_immediately_after_each_batch": true,
        "must_restrict_back_button_component_to_single_button": true,
        "must_implement_page_title_component_with_parameters": true,
        "must_enforce_component_single_responsibility": true,
        "must_implement_dynamic_title_injection": true
      }
    },
    "cutpage": {
      "description": "页面元素拆解与业务实体分析工具，深度分析设计师原型图，智能区分静态内容与动态数据元素，系统性提炼业务实体及其复杂关联关系，并深度分析原型图中的交互逻辑和业务流程",
      "commands": [
        "【强制要求】全程必须使用中文对话，禁止使用英文回复",
        "【强制要求】首先阅读并严格遵守.QuickAction.json中global_settings的所有配置要求",
        "【第一阶段：原型图收集与预处理】",
        "1. 询问用户原型图的总数量，确认收集范围",
        "2. 逐张收集原型图，要求用户明确标注：",
        "   - 页面序号（如：页面1、页面2）",
        "   - 页面名称（如：首页、商品详情页、个人中心等）",
        "   - 页面类型（一级页面/非一级页面）",
        "   - 页面描述（简要说明页面的主要功能和用途）",
        "3. 确认用户发送完毕所有原型图后，再进行下一步",
        "4. 【复杂任务思考】如果原型图数量较多或复杂度较高，使用MCP Sequential thinking工具进行深度思考分析",
        "5. 【联网查询】如果需要了解特定行业的业务实体标准或最佳实践，进行联网查询获取参考信息",
        "【第二阶段：项目配置解析】",
        "6. 要求用户提供project-config.json文件内容",
        "7. 解析项目基本信息（项目名称、类型、描述、目标用户、核心功能）",
        "8. 分析项目规模信息（总页面数、功能模块、页面层级关系）",
        "9. 理解项目业务领域特征，为后续实体分析提供上下文",
        "【第三阶段：页面元素智能拆解】",
        "10. 逐页深度分析原型图中的所有可视元素",
        "11. 【静态内容识别】识别并标记静态内容：",
        "    - 固定文本标签（如：\"用户名\"、\"密码\"、\"提交\"）",
        "    - 装饰性图标和分割线",
        "    - 固定的导航结构和按钮",
        "    - 版权信息、帮助文本等",
        "12. 【动态数据元素识别】识别并标记动态数据元素：",
        "    - 用户输入字段的数据值",
        "    - 从后端获取的展示数据",
        "    - 计算生成的数值和状态",
        "    - 用户个性化内容",
        "13. 【数据来源分析】为每个动态元素标注可能的数据来源：",
        "    - 用户输入（User Input）",
        "    - 数据库查询（Database Query）",
        "    - API调用（API Call）",
        "    - 本地计算（Local Calculation）",
        "    - 第三方服务（Third-party Service）",
        "14. 【业务含义标注】分析每个动态元素的业务含义和作用",
        "【第四阶段：业务实体系统性提炼】",
        "15. 【实体识别】从动态数据元素中识别核心业务实体：",
        "    - 主要业务对象（如：用户、商品、订单、支付等）",
        "    - 辅助业务对象（如：地址、评价、优惠券等）",
        "    - 系统管理对象（如：权限、日志、配置等）",
        "16. 【属性提炼】为每个实体提炼核心属性：",
        "    - 基础属性（ID、名称、创建时间等）",
        "    - 业务属性（状态、金额、数量等）",
        "    - 关系属性（外键、关联ID等）",
        "17. 【关联关系梳理】分析实体间的关联关系：",
        "    - 一对一关系（1:1）",
        "    - 一对多关系（1:N）",
        "    - 多对多关系（M:N）",
        "    - 继承关系和组合关系",
        "18. 【业务规则识别】从页面交互中识别隐含的业务规则",
        "【第五阶段：交互逻辑深度分析】",
        "19. 【交互流程梳理】分析原型图中的交互逻辑：",
        "    - 页面间跳转关系（从哪个页面跳转到哪个页面）",
        "    - 用户操作触发条件（点击、滑动、输入等）",
        "    - 状态变化逻辑（数据更新、界面刷新、状态切换）",
        "    - 数据流向分析（数据如何在页面间传递）",
        "20. 【业务流程识别】识别完整的业务流程：",
        "    - 用户任务流程（从开始到完成的完整路径）",
        "    - 异常处理流程（错误、取消、超时等情况）",
        "    - 权限控制逻辑（登录验证、权限检查等）",
        "    - 数据验证规则（输入校验、业务规则验证）",
        "21. 【交互模式分析】分析交互设计模式：",
        "    - 导航模式（Tab导航、层级导航、抽屉导航等）",
        "    - 操作模式（单选、多选、拖拽、手势等）",
        "    - 反馈模式（加载状态、成功提示、错误提示等）",
        "    - 布局模式（列表、网格、卡片、表单等）",
        "【第六阶段：文档生成与输出】",
        "22. 检查docs/NiceEasyAI目录是否存在，如不存在则自动创建",
        "23. 【强制中文命名】文档文件名必须使用中文命名",
        "24. 生成《页面元素拆解表.md》文档：",
        "    - 按页面序号组织内容",
        "    - 每页包含：页面名称、页面类型、静态元素列表、动态元素列表",
        "    - 动态元素包含：元素名称、数据类型、数据来源、业务含义",
        "    - 使用表格格式清晰展示",
        "25. 生成《业务实体清单.md》文档：",
        "    - 实体概览表：实体名称、实体类型、核心作用",
        "    - 详细实体定义：每个实体的完整属性列表",
        "    - 关联关系图：实体间的关系说明",
        "    - 业务规则说明：相关的业务约束和规则",
        "26. 生成《原型图交互逻辑.md》文档：",
        "    - 页面跳转关系图：使用Mermaid图表展示页面间的跳转关系",
        "    - 交互流程详表：每个页面的具体交互逻辑和操作流程",
        "    - 业务流程分析：完整的用户任务流程和异常处理",
        "    - 交互设计模式：导航、操作、反馈、布局等设计模式分析",
        "    - 状态变化逻辑：数据状态、界面状态的变化规则",
        "    - 数据流向图：使用Mermaid图表展示数据在页面间的流动",
        "27. 【严禁多余文档】🚫 严禁创建任何其他多余文档，包括但不限于：",
        "    - 不得创建README.md、说明文档、介绍文档等额外文档",
        "    - 不得创建配置文档、部署文档、使用手册等衍生文档",
        "    - 不得创建示例文档、测试文档、API文档等补充文档",
        "    - 只能创建指定的三个分析文档",
        "28. 将文档保存到docs/NiceEasyAI目录",
        "29. 向用户确认分析完成并提供文档位置信息"
      ],
      "requiresInput": true,
      "inputPrompt": "请按以下步骤提供信息：\n\n## 📋 第一步：原型图信息\n请告诉我：\n1. 您总共有多少张设计师原型图？\n2. 然后逐张发送，每张图片请标注：\n   - 页面序号（如：页面1、页面2）\n   - 页面名称（如：首页、商品详情页、个人中心等）\n   - 页面类型（一级页面/非一级页面）\n   - 页面描述（简要说明页面的主要功能和用途）\n\n## 📋 第二步：项目配置\n请提供project-config.json文件的完整内容\n\n💡 我将深度分析原型图中的页面元素，智能区分静态内容与动态数据，系统性提炼业务实体及其复杂关联关系，并分析原型图中的交互逻辑，生成三个专业的分析文档：\n- 《页面元素拆解表.md》- 页面元素详细分析\n- 《业务实体清单.md》- 业务实体和关联关系\n- 《原型图交互逻辑.md》- 交互逻辑和业务流程分析",
      "workflow": "intelligent_page_element_analysis_and_business_entity_extraction",
      "constraints": {
        "language": "中文强制要求",
        "prototype_collection_sequence": "必须等待用户明确发送完毕所有原型图后再开始分析",
        "intelligent_element_classification": "必须智能区分静态内容与动态数据元素",
        "systematic_entity_extraction": "必须系统性提炼业务实体",
        "relationship_analysis": "必须深度分析实体间的关联关系",
        "business_rule_identification": "必须识别隐含的业务规则",
        "document_location": "必须保存到docs/NiceEasyAI目录",
        "document_naming": "文档命名必须使用中文",
        "single_file_for_pages": "所有页面的元素拆解放在同一个md文件中",
        "separate_entity_file": "业务实体清单单独一个md文件",
        "separate_interaction_file": "原型图交互逻辑单独一个md文件",
        "data_source_annotation": "必须标注动态元素的数据来源",
        "business_meaning_analysis": "必须分析元素的业务含义",
        "interaction_logic_analysis": "必须深度分析原型图中的交互逻辑和业务流程",
        "mermaid_diagram_requirement": "必须使用Mermaid图表展示页面跳转关系和数据流向",
        "table_format_requirement": "必须使用表格格式清晰展示信息",
        "complex_task_thinking": "复杂任务使用MCP Sequential thinking工具深度分析",
        "network_query": "支持联网查询获取行业参考信息",
        "no_extra_documents": "🚫 严禁创建多余文档，只能创建指定的三个分析文档"
      },
      "output_structure": {
        "document_1": {
          "filename": "页面元素拆解表.md",
          "location": "docs/NiceEasyAI/",
          "content_structure": {
            "page_organization": "按页面序号组织内容",
            "page_sections": [
              "页面基本信息（序号、名称、类型）",
              "静态元素列表（固定文本、装饰元素、导航结构）",
              "动态元素详表（元素名称、数据类型、数据来源、业务含义）"
            ],
            "table_format": "使用Markdown表格格式清晰展示",
            "data_source_categories": [
              "用户输入（User Input）",
              "数据库查询（Database Query）",
              "API调用（API Call）",
              "本地计算（Local Calculation）",
              "第三方服务（Third-party Service）"
            ]
          }
        },
        "document_2": {
          "filename": "业务实体清单.md",
          "location": "docs/NiceEasyAI/",
          "content_structure": {
            "entity_overview": "实体概览表（实体名称、类型、核心作用）",
            "detailed_definitions": "详细实体定义（完整属性列表）",
            "relationship_diagram": "关联关系图（实体间关系说明）",
            "business_rules": "业务规则说明（约束和规则）",
            "entity_categories": [
              "主要业务对象（用户、商品、订单等）",
              "辅助业务对象（地址、评价、优惠券等）",
              "系统管理对象（权限、日志、配置等）"
            ],
            "relationship_types": [
              "一对一关系（1:1）",
              "一对多关系（1:N）",
              "多对多关系（M:N）",
              "继承关系和组合关系"
            ]
          }
        },
        "document_3": {
          "filename": "原型图交互逻辑.md",
          "location": "docs/NiceEasyAI/",
          "content_structure": {
            "page_navigation_diagram": "页面跳转关系图（使用Mermaid图表展示）",
            "interaction_flow_table": "交互流程详表（每个页面的具体交互逻辑）",
            "business_process_analysis": "业务流程分析（完整的用户任务流程）",
            "interaction_design_patterns": "交互设计模式（导航、操作、反馈、布局模式）",
            "state_change_logic": "状态变化逻辑（数据状态、界面状态变化规则）",
            "data_flow_diagram": "数据流向图（使用Mermaid图表展示数据流动）",
            "interaction_categories": [
              "页面跳转交互（导航、链接、按钮跳转）",
              "数据操作交互（增删改查、表单提交）",
              "状态切换交互（选择、切换、展开收起）",
              "反馈交互（加载、提示、确认、错误处理）"
            ],
            "flow_analysis_dimensions": [
              "用户操作路径（正常流程、异常流程）",
              "数据传递方式（参数传递、状态共享）",
              "权限控制逻辑（登录验证、角色权限）",
              "业务规则验证（输入校验、业务约束）"
            ]
          }
        }
      },
      "analysis_methodology": {
        "element_classification_approach": [
          "视觉特征分析（固定vs变化的内容）",
          "交互行为分析（静态展示vs动态交互）",
          "数据流向分析（输入、处理、输出）",
          "业务逻辑分析（功能目的和作用）"
        ],
        "entity_extraction_principles": [
          "从数据元素到业务概念的抽象",
          "基于领域知识的实体识别",
          "属性完整性和一致性检查",
          "关系合理性和必要性验证"
        ],
        "interaction_logic_analysis_approach": [
          "页面跳转路径分析（导航流程、返回逻辑）",
          "用户操作序列分析（操作步骤、触发条件）",
          "状态变化追踪（界面状态、数据状态）",
          "异常流程识别（错误处理、边界情况）",
          "业务流程完整性验证（端到端流程）"
        ],
        "mermaid_diagram_standards": [
          "页面跳转关系图使用graph TD格式",
          "数据流向图使用flowchart LR格式",
          "业务流程图使用flowchart TD格式",
          "状态变化图使用stateDiagram格式",
          "所有图表使用中文标签和注释"
        ],
        "quality_assurance": [
          "元素分类的准确性检查",
          "实体定义的完整性验证",
          "关系逻辑的一致性确认",
          "业务规则的合理性评估",
          "交互逻辑的完整性验证",
          "Mermaid图表的正确性检查"
        ]
      },
      "validation_rules": {
        "must_use_chinese_language": true,
        "must_wait_for_all_prototypes": true,
        "must_analyze_page_sequence": true,
        "must_distinguish_static_dynamic_elements": true,
        "must_annotate_data_sources": true,
        "must_analyze_business_meaning": true,
        "must_extract_business_entities": true,
        "must_define_entity_attributes": true,
        "must_analyze_entity_relationships": true,
        "must_identify_business_rules": true,
        "must_create_docs_directory": true,
        "must_use_chinese_document_names": true,
        "must_combine_pages_in_single_file": true,
        "must_separate_entity_documentation": true,
        "must_use_table_format": true,
        "must_not_create_extra_documents": true,
        "must_use_mcp_tools_when_appropriate": true,
        "must_support_network_queries": true,
        "must_provide_systematic_analysis": true,
        "must_ensure_analysis_completeness": true,
        "must_maintain_professional_standards": true
      }
    },
    "dbbase": {
      "description": "基于cutpage生成的分析文档，结合用户技术栈选择，生成完整的数据库设计和交互文档体系（业务流程图、系统架构图、数据字典、交互说明文档）",
      "commands": [
        "【强制要求】全程必须使用中文对话，禁止使用英文回复",
        "【强制要求】首先阅读并严格遵守.QuickAction.json中global_settings的所有配置要求",
        "【第一阶段：文档收集与验证】",
        "1. 要求用户提供cutpage生成的三个分析文档的文件路径：",
        "   - 页面元素拆解表.md文件路径",
        "   - 业务实体清单.md文件路径",
        "   - 原型图交互逻辑.md文件路径",
        "2. 【文档验证】验证文档路径的有效性，确认文件存在且可读取",
        "3. 【内容验证】读取并验证三个文档的内容完整性和格式正确性",
        "4. 【复杂任务思考】如果分析文档内容复杂度较高，使用MCP Sequential thinking工具进行深度思考分析",
        "5. 【联网查询】如果需要了解最新的架构设计模式或微信云开发技术标准，进行联网查询获取参考信息",
        "【第二阶段：技术栈确认与验证】",
        "6. 询问用户前端技术栈选择：",
        "   - A. 原生微信小程序",
        "   - B. uniapp跨端框架",
        "7. 【技术栈验证】验证选择的前端技术栈与微信云开发的兼容性",
        "8. 确认后端技术栈配置（强制使用）：",
        "   - 后端：微信云开发",
        "   - API接口：云开发的云函数",
        "   - 数据库：云开发的文档数据库（类似MongoDB）",
        "   - 存储：云开发的云存储",
        "9. 【架构合理性检查】验证整体技术栈组合的合理性和可行性",
        "【第三阶段：业务流程图生成】",
        "10. 【流程分析】基于原型图交互逻辑.md深度分析用户业务流程",
        "11. 【元素整合】结合页面元素拆解表.md中的交互元素和动态数据流",
        "12. 【全链路流程设计】设计完整的用户操作全链路业务流程，包括：",
        "    - 用户操作全链路流程（如：浏览商品→下单→支付→确认收货）",
        "    - 数据处理流程和状态变化",
        "    - 异常处理流程和错误恢复",
        "    - 权限验证流程和安全控制",
        "13. 【Mermaid图表生成】使用标准Mermaid flowchart语法生成可视化业务流程图",
        "14. 【文档创建】创建业务流程图.md文档并保存到docs/NiceEasyAI目录",
        "【第四阶段：系统架构图生成】",
        "15. 【实体分析】基于业务实体清单.md分析数据模型结构和关联关系",
        "16. 【架构设计】结合确认的技术栈设计完整的系统架构，包括：",
        "    - 前端层（小程序/uniapp界面层）",
        "    - 业务逻辑层（云函数API层）",
        "    - 数据访问层（数据库操作层）",
        "    - 数据存储层（云开发文档数据库）",
        "    - 文件存储层（云开发云存储）",
        "    - 安全认证层（微信登录+云开发权限）",
        "17. 【组件关系】详细定义各层之间的数据流向和调用关系",
        "18. 【Mermaid架构图】使用Mermaid graph语法生成系统架构图",
        "19. 【文档创建】创建系统架构图.md文档并保存到docs/NiceEasyAI目录",
        "【第五阶段：数据字典生成】",
        "20. 【数据库设计】基于业务实体清单.md设计完整的数据库结构",
        "21. 【表结构定义】为每个业务实体定义数据库表结构，包括：",
        "    - 表名和表描述",
        "    - 字段名称、数据类型、长度限制",
        "    - 主键、外键、索引定义",
        "    - 字段约束（非空、唯一、默认值）",
        "    - 枚举值定义和业务规则",
        "22. 【关联关系】定义表之间的关联关系和引用完整性",
        "23. 【数据字典文档】创建数据字典.md文档并保存到docs/NiceEasyAI目录",
        "【第六阶段：交互说明文档生成】",
        "24. 【页面交互分析】基于页面元素拆解表.md分析每个页面的交互逻辑",
        "25. 【操作流程设计】为每个页面设计详细的操作流程，包括：",
        "    - 页面操作步骤和用户引导",
        "    - 操作前置条件和权限要求",
        "    - 数据验证规则和输入约束",
        "    - 成功反馈和异常处理机制",
        "    - 页面跳转逻辑和状态管理",
        "26. 【交互规范】定义统一的交互设计规范和用户体验标准",
        "27. 【交互说明文档】创建交互说明文档.md并保存到docs/NiceEasyAI目录",
        "【第七阶段：质量检查与输出】",
        "28. 【文档验证】验证生成的四个文档的完整性和正确性",
        "29. 【格式规范检查】确保所有文档格式符合Markdown规范，图表清晰可读",
        "30. 【内容一致性检查】确保四个文档之间的内容一致性和逻辑关联",
        "31. 【最终确认】向用户确认生成完成并提供所有文档位置信息",
        "32. 【严禁多余文档】🚫 严禁创建任何其他多余文档，只能创建指定的四个核心文档"
      ],
      "requiresInput": true,
      "inputPrompt": "请提供以下信息：\n\n## 📋 第一步：分析文档路径\n请提供cutpage生成的三个分析文档的完整文件路径：\n1. 📄 页面元素拆解表.md文件路径：\n2. 📄 业务实体清单.md文件路径：\n3. 📄 原型图交互逻辑.md文件路径：\n\n## 📋 第二步：前端技术栈选择\n请选择您的前端技术栈：\n- **A. 原生微信小程序** - 使用微信小程序原生开发框架\n- **B. uniapp跨端框架** - 使用uni-app开发，可编译为小程序\n\n💡 **输出说明**：我将基于您的选择和分析文档生成完整的数据库设计和交互文档体系：\n- 📊 业务流程图.md - 可视化用户操作全链路\n- 🏗️ 系统架构图.md - 完整的技术架构设计\n- 📚 数据字典.md - 数据库表结构和字段定义\n- 📝 交互说明文档.md - 页面操作流程和异常处理",
      "workflow": "database_design_and_interaction_documentation_generation",
      "constraints": {
        "language": "中文强制要求",
        "document_path_validation": "必须验证文档路径有效性和文件可读性",
        "content_integrity_check": "必须验证文档内容完整性和格式正确性",
        "cutpage_document_dependency": "必须基于cutpage生成的三个分析文档",
        "frontend_tech_selection": "必须让用户选择前端技术栈并验证兼容性",
        "backend_tech_mandatory": "后端强制使用微信云开发技术栈（云函数+文档数据库+云存储）",
        "architecture_feasibility_check": "必须验证整体技术栈组合的合理性和可行性",
        "mermaid_diagram_requirement": "必须使用标准Mermaid语法生成图表",
        "diagram_syntax_validation": "必须验证Mermaid图表语法正确性",
        "document_location": "必须保存到docs/NiceEasyAI目录",
        "document_naming": "文档命名必须使用中文",
        "no_extra_documents": "🚫 严禁创建多余文档，只能创建四个指定核心文档",
        "business_flow_analysis": "必须深度分析业务流程逻辑，包括用户操作全链路和异常处理",
        "system_architecture_design": "必须设计完整的分层系统架构",
        "database_design_requirement": "必须设计完整的数据库结构和数据字典",
        "interaction_documentation_requirement": "必须生成详细的交互说明文档",
        "complex_task_thinking": "复杂任务使用MCP Sequential thinking工具深度分析",
        "network_query": "支持联网查询获取最新技术标准和设计模式"
      },
      "output_structure": {
        "document_1": {
          "filename": "业务流程图.md",
          "location": "docs/NiceEasyAI/",
          "content_structure": {
            "sections": [
              "业务流程概述",
              "用户操作全链路流程图（Mermaid flowchart）",
              "核心业务流程详解",
              "异常处理流程图",
              "权限验证流程图",
              "数据流向说明"
            ],
            "mermaid_requirements": {
              "syntax": "flowchart TD",
              "node_types": "矩形节点、菱形决策节点、圆形开始结束节点",
              "connection_types": "实线箭头、虚线箭头、带标签连接线",
              "color_coding": "不同类型操作使用不同颜色区分",
              "user_journey": "突出用户操作全链路（如：浏览商品→下单→支付→确认收货）"
            }
          },
          "data_source": "基于原型图交互逻辑.md和页面元素拆解表.md"
        },
        "document_2": {
          "filename": "系统架构图.md",
          "location": "docs/NiceEasyAI/",
          "content_structure": {
            "sections": [
              "系统架构概述",
              "技术栈说明",
              "系统分层架构图（Mermaid graph）",
              "数据流向图",
              "组件交互关系",
              "安全架构设计"
            ],
            "mermaid_requirements": {
              "syntax": "graph TD",
              "layer_definition": "清晰的分层结构",
              "component_grouping": "使用subgraph对组件分组",
              "data_flow": "明确的数据流向箭头",
              "technology_labeling": "每个组件标注具体技术"
            }
          },
          "data_source": "基于业务实体清单.md和确认的技术栈"
        },
        "document_3": {
          "filename": "数据字典.md",
          "location": "docs/NiceEasyAI/",
          "content_structure": {
            "sections": [
              "数据库设计概述",
              "数据表清单",
              "表结构详细定义",
              "字段类型和约束说明",
              "枚举值定义",
              "索引和关联关系",
              "数据完整性规则"
            ],
            "table_definition_requirements": {
              "table_info": "表名、表描述、业务用途",
              "field_definition": "字段名、数据类型、长度、是否必填、默认值、注释",
              "constraints": "主键、外键、唯一约束、检查约束",
              "indexes": "普通索引、唯一索引、复合索引",
              "enums": "枚举字段的所有可选值和含义",
              "relationships": "表间关联关系（一对一、一对多、多对多）"
            }
          },
          "data_source": "基于业务实体清单.md和数据库设计最佳实践"
        },
        "document_4": {
          "filename": "交互说明文档.md",
          "location": "docs/NiceEasyAI/",
          "content_structure": {
            "sections": [
              "交互设计概述",
              "页面操作流程详解",
              "用户操作前置条件",
              "数据验证规则",
              "成功反馈机制",
              "异常处理和错误提示",
              "页面跳转逻辑",
              "交互设计规范"
            ],
            "interaction_requirements": {
              "operation_flow": "每个页面的详细操作步骤和用户引导",
              "preconditions": "操作前置条件、权限要求、数据准备",
              "validation_rules": "输入验证、格式检查、业务规则验证",
              "success_feedback": "操作成功的反馈方式和提示信息",
              "error_handling": "异常情况处理、错误提示、恢复机制",
              "navigation_logic": "页面间跳转逻辑、参数传递、状态管理",
              "design_standards": "统一的交互设计规范和用户体验标准"
            }
          },
          "data_source": "基于页面元素拆解表.md和原型图交互逻辑.md"
        },
        "quality_standards": {
          "diagram_readability": "图表必须清晰易读，层次分明",
          "technical_accuracy": "技术方案必须准确可行",
          "business_completeness": "业务流程必须完整覆盖用户操作全链路",
          "database_completeness": "数据字典必须覆盖所有业务实体和字段定义",
          "interaction_completeness": "交互说明必须覆盖所有页面操作和异常处理",
          "documentation_standards": "文档格式必须符合Markdown规范",
          "content_consistency": "四个文档之间必须保持内容一致性和逻辑关联"
        }
      },
      "validation_rules": {
        "must_use_chinese_language": true,
        "must_validate_document_paths": true,
        "must_check_file_accessibility": true,
        "must_verify_content_integrity": true,
        "must_read_cutpage_documents": true,
        "must_confirm_frontend_tech": true,
        "must_validate_tech_compatibility": true,
        "must_use_cloudbase_backend": true,
        "must_check_architecture_feasibility": true,
        "must_generate_business_flow_diagram": true,
        "must_generate_system_architecture_diagram": true,
        "must_generate_database_dictionary": true,
        "must_generate_interaction_documentation": true,
        "must_use_standard_mermaid_syntax": true,
        "must_validate_mermaid_syntax": true,
        "must_include_exception_handling": true,
        "must_include_security_considerations": true,
        "must_define_complete_database_structure": true,
        "must_include_field_constraints_and_enums": true,
        "must_document_page_operation_flows": true,
        "must_include_preconditions_and_error_handling": true,
        "must_save_to_docs_directory": true,
        "must_use_chinese_document_naming": true,
        "must_create_exactly_four_documents": true,
        "must_ensure_content_consistency": true,
        "must_use_mcp_tools_when_appropriate": true,
        "must_support_network_queries": true
      }
    },
    "db": {
      "description": "数据库设计器，智能分析项目需求并生成完整的数据库设计方案",
      "commands": [
        "【强制要求】全程必须使用中文对话，禁止使用英文回复",
        "【强制要求】首先阅读并严格遵守.QuickAction.json中global_settings的所有配置要求",
        "【第一阶段：需求分析与数据库选型】",
        "1. 深度分析用户提供的项目需求或spec文档",
        "2. 询问用户项目使用的数据库类型：",
        "   - MySQL（关系型，适合传统Web应用）",
        "   - PostgreSQL（功能强大的开源关系型数据库）",
        "   - MongoDB（文档型NoSQL，适合灵活数据结构）",
        "   - SQLite（轻量级嵌入式数据库）",
        "   - 其他（用户自定义数据库类型）",
        "3. 【复杂任务思考】如果项目复杂度较高，使用MCP Sequential thinking工具进行深度思考分析",
        "4. 【联网查询】如果需要了解特定数据库的设计最佳实践，进行联网查询获取参考信息",
        "5. 智能识别项目中的数据实体和业务对象",
        "6. 分析实体间的关系（一对一、一对多、多对多）",
        "7. 确定核心业务流程和数据流向",
        "【第二阶段：数据库表结构设计】",
        "8. 基于选择的数据库类型设计表结构：",
        "   - 关系型数据库：标准表结构、字段类型、约束条件",
        "   - MongoDB：集合结构、文档模式、索引设计",
        "   - 其他数据库：对应的数据结构设计",
        "9. 设计内容包括：",
        "   - 表名/集合名命名规范",
        "   - 字段定义（类型、长度、约束、默认值）",
        "   - 主键和外键设计（关系型数据库）",
        "   - 索引优化建议",
        "   - 数据完整性约束",
        "10. 生成对应数据库的DDL语句和初始化脚本",
        "【第三阶段：API接口设计】",
        "11. 基于数据模型和数据库类型设计API接口：",
        "    - CRUD操作接口定义",
        "    - 请求参数和响应格式",
        "    - 接口路径和HTTP方法",
        "    - 数据验证规则",
        "    - 错误处理和状态码",
        "12. 针对不同数据库类型优化API设计",
        "13. 生成API文档和接口测试用例",
        "【第四阶段：数据模型可视化】",
        "14. 根据数据库类型使用Mermaid生成相应的图表：",
        "    - 关系型数据库：ER图展示实体关系",
        "    - MongoDB：文档结构图和集合关系",
        "    - 数据流向图和系统架构图",
        "15. 【Mermaid图表规范】确保图表：",
        "    - 使用中文标签和注释",
        "    - 清晰展示数据结构和关系",
        "    - 适当使用颜色区分不同类型",
        "【第五阶段：文档生成与优化建议】",
        "16. 检查docs/NiceEasyAI目录是否存在，如不存在则自动创建",
        "17. 【强制中文命名】文档文件名必须使用中文命名：数据库设计方案.md",
        "18. 【强制中文标题】文档内所有标题、章节名称必须使用中文",
        "19. 【严禁多余文档】🚫 严禁创建任何其他多余文档，只能创建一个数据库设计方案文档",
        "20. 生成完整的数据库设计文档，包括：",
        "    - 数据库概述与选型说明",
        "    - 数据实体分析",
        "    - 表结构/集合结构详细设计",
        "    - API接口设计规范",
        "    - 数据模型关系图",
        "    - 针对所选数据库的性能优化建议",
        "    - 数据安全和备份策略",
        "21. 提供特定数据库的部署和维护建议"
      ],
      "requiresInput": true,
      "inputPrompt": "请提供以下信息：\n\n## 1. 项目需求描述或spec文档路径\n请描述项目需求或提供现有的spec文档路径\n\n## 2. 数据库类型选择（必选）\n请选择项目使用的数据库类型：\n- **MySQL** - 关系型数据库，适合传统Web应用\n- **PostgreSQL** - 功能强大的开源关系型数据库\n- **MongoDB** - 文档型NoSQL数据库，适合灵活数据结构\n- **SQLite** - 轻量级嵌入式数据库，适合小型应用\n- **其他** - 请指定具体的数据库类型\n\n请明确告知您选择的数据库类型，我将据此生成对应的数据库设计方案。",
      "workflow": "intelligent_database_design",
      "constraints": {
        "language": "中文强制要求",
        "database_type_required": "必须要求用户明确选择数据库类型",
        "database_specific_design": "必须根据选择的数据库类型生成对应的设计方案",
        "document_location": "必须保存到docs/NiceEasyAI目录",
        "document_naming": "文档文件名必须使用中文命名：数据库设计方案.md",
        "section_naming": "文档内所有标题章节必须使用中文",
        "intelligent_analysis": "必须基于需求进行智能数据建模分析",
        "api_design_integration": "必须包含完整的API接口设计",
        "mermaid_visualization": "必须使用Mermaid图表展示数据模型关系",
        "document_creation_restriction": "🚫 严禁创建多余文档，只能创建一个数据库设计方案文档",
        "complex_task_thinking": "复杂项目使用MCP Sequential thinking工具深度分析",
        "network_query": "支持联网查询获取数据库设计最佳实践",
        "performance_optimization": "必须提供针对所选数据库的性能优化建议",
        "security_considerations": "必须包含数据安全和权限设计"
      },
      "output_structure": {
        "document_naming_pattern": "数据库设计方案.md",
        "document_sections": [
          "数据库概述与选型说明",
          "数据实体分析",
          "表结构/集合结构详细设计",
          "API接口设计规范",
          "数据模型关系图（Mermaid图表）",
          "索引优化策略",
          "数据安全与权限设计",
          "性能优化建议",
          "部署与维护指南"
        ],
        "database_design_components": {
          "database_selection": "用户选择的数据库类型和选型理由",
          "entity_analysis": "智能识别业务实体和数据对象",
          "structure_design": "针对特定数据库的结构设计",
          "relationship_design": "数据关系分析和设计",
          "api_specification": "RESTful API接口完整规范",
          "visualization": "适合数据库类型的Mermaid图表",
          "optimization": "特定数据库的优化策略"
        },
        "database_type_specifications": {
          "MySQL": "关系型表结构、SQL语句、索引优化",
          "PostgreSQL": "高级特性利用、JSON支持、全文搜索",
          "MongoDB": "集合设计、文档模式、聚合管道",
          "SQLite": "轻量化设计、嵌入式优化、文件管理",
          "其他": "根据用户指定的数据库类型定制设计"
        },
        "mermaid_requirements": {
          "supported_types": ["erDiagram", "graph", "flowchart"],
          "language": "中文标签和注释",
          "content": "根据数据库类型展示相应的数据结构",
          "styling": "使用颜色区分不同实体类型"
        }
      },
      "validation_rules": {
        "document_must_have_chinese_filename": true,
        "all_headings_must_be_chinese": true,
        "must_require_database_type_selection": true,
        "must_analyze_data_entities": true,
        "must_design_database_specific_structures": true,
        "must_include_api_design": true,
        "must_generate_mermaid_diagrams": true,
        "must_provide_database_specific_optimization": true,
        "must_not_create_extra_documents": true,
        "only_one_database_design_document_allowed": true,
        "must_check_and_create_docs_directory": true,
        "must_use_mcp_tools_when_appropriate": true,
        "must_support_network_queries": true,
        "must_include_security_considerations": true
      }
    },
    "copyui": {
      "description": "微信小程序UI设计支持，分析截图还原页面视觉与布局结构，理解页面核心功能与用户使用场景",
      "commands": [
        "【强制要求】全程必须使用中文对话，禁止使用英文回复",
        "【强制要求】首先阅读并严格遵守.QuickAction.json中global_settings的所有配置要求",
        "【第一阶段：项目信息解析与截图预处理】",
        "1. 解析用户提供的项目配置JSON信息（项目名称、类型、核心功能等）",
        "2. 【视觉设计方案引用】读取用户提供的视觉统一设计方案.md文件路径",
        "3. 分析视觉设计方案中的配色系统、图标规范、组件库规范、间距规范、字体规范",
        "4. 将设计方案作为UI复刻的标准参考，确保视觉一致性",
        "5. 分析项目规模和模块结构（总页面数、功能模块划分等）",
        "6. 明确当前页面定位（在整个项目中的作用、与其他页面的关联关系）",
        "7. 建议用户创建 project-config.json 文件保存项目配置，方便后续复刻其他页面时复用",
        "8. 接收用户上传的微信小程序截图（支持多张截图）",
        "5. 自动识别并过滤系统状态栏（时间、电量、WiFi等设备级信息）",
        "6. 自动识别并过滤微信小程序标题栏（小程序名称、右上角胶囊按钮等微信原生系统组件）",
        "7. 聚焦页面主体交互与展示元素，确定分析范围",
        "8. 【复杂任务思考】如果任务复杂度较高，使用MCP Sequential thinking工具进行深度思考分析",
        "9. 【联网查询】如果需要最新信息或解决方案，进行联网查询获取最新资料",
        "【第二阶段：页面功能理解】",
        "10. 结合项目整体信息，通过元素组合判断页面类型（如商品详情页、订单管理页、个人中心页等）",
        "11. 分析页面在整个项目中的定位和核心用途",
        "12. 梳理页面内的交互闭环和用户操作路径",
        "13. 标注关键操作节点的功能指向",
        "14. 分析页面与其他页面的跳转关系和数据传递",
        "【第三阶段：视觉还原分析】",
        "15. 按页面层级梳理元素结构（从顶部导航到底部按钮）",
        "16. 描述各组件的位置、尺寸（以rpx为单位）及排列逻辑",
        "17. 【设计方案对照】根据视觉统一设计方案.md中的规范进行色彩匹配：",
        "    - 将截图中的颜色映射到设计方案的配色系统",
        "    - 使用设计方案中定义的标准色值，而非截图中的近似色",
        "    - 确保字体、间距、圆角等数值符合设计方案规范",
        "18. 提取元素色彩代码、字体属性、装饰效果（严格按照设计方案标准）",
        "19. 说明色彩在功能场景中的作用，并与设计方案保持一致",
        "【第四阶段：组件化设计建议】",
        "19. 识别页面中可复用的UI区域和功能模块",
        "20. 分析哪些区域应该设计成独立组件（如头部导航、商品卡片、底部操作栏等）",
        "21. 评估组件的复用价值和在其他页面的应用场景",
        "22. 提供组件拆分建议和命名规范",
        "【第五阶段：交互逻辑标注】",
        "23. 标注可点击元素的交互状态（默认/点击/悬停样式）",
        "24. 说明动态效果的业务意义",
        "25. 分析交互背后的业务逻辑",
        "【第六阶段：技术实现建议】",
        "26. 使用 Tailwind CSS 处理样式，提供具体的 class 建议",
        "27. 使用 FontAwesome 增强视觉效果，推荐合适的图标",
        "28. 确保设计贴近真实 iOS 设计规范",
        "29. 使用真实 picsum.photos 图片而非占位符，提供具体的图片URL",
        "【第七阶段：文档生成】",
        "30. 检查docs/NiceEasyAI目录是否存在，如不存在则自动创建",
        "31. 【强制中文命名】文档文件名必须使用中文命名，格式：UI复刻-页面中文名-页面英文名.md",
        "32. 【强制中文标题】文档内所有标题、章节名称必须使用中文",
        "33. 在docs/NiceEasyAI目录下创建复刻UI文档",
        "34. 输出结构化内容，包含项目整体介绍、项目规模与模块结构、页面定位、组件化建议等完整信息",
        "35. 融入功能与视觉的关联分析，确保开发团队能理解交互背后的业务逻辑",
        "36. 【严禁创建多余文档】🚫 严禁创建任何其他多余文档，只能创建一个UI复刻文档"
      ],
      "requiresInput": true,
      "inputPrompt": "请按以下格式提供信息：\n\n## 1. 视觉统一设计方案路径（必填）\n💡 请提供视觉统一设计方案.md文件的相对路径，例如：docs/NiceEasyAI/视觉统一设计方案.md\n- **设计方案路径**：\n\n## 2. 项目配置信息（JSON格式）\n💡 建议在项目中创建 `project-config.json` 文件保存以下配置，方便复刻其他页面时直接复制使用：\n\n```json\n{\n  \"projectInfo\": {\n    \"name\": \"项目名称\",\n    \"type\": \"小程序类型（如：电商、社交、工具等）\",\n    \"description\": \"项目主要功能和特色描述\",\n    \"targetUsers\": \"目标用户群体\",\n    \"coreFeatures\": [\"核心功能1\", \"核心功能2\", \"核心功能3\"]\n  },\n  \"projectScale\": {\n    \"totalPages\": 数字,\n    \"modules\": [\n      {\"name\": \"模块名称\", \"pageCount\": 页面数量, \"description\": \"模块描述\"},\n      {\"name\": \"用户模块\", \"pageCount\": 3, \"description\": \"登录、注册、个人中心\"}\n    ]\n  }\n}\n```\n\n## 3. 当前页面信息（每个页面不同，无需保存到配置文件）\n- **页面名称**：\n- **页面功能**：\n- **在项目中的作用**：\n- **与其他页面的关联**：\n\n## 4. 截图上传\n请上传微信小程序截图（可上传多张，我会自动分析）",
      "workflow": "ui_analysis_and_replication",
      "constraints": {
        "language": "中文强制要求",
        "visual_design_scheme_required": "必须要求用户提供视觉统一设计方案.md文件路径",
        "design_scheme_compliance": "必须严格按照视觉设计方案中的配色、字体、间距、组件规范进行UI复刻",
        "color_mapping": "将截图颜色映射到设计方案的标准配色系统，使用设计方案中的标准色值",
        "focus_area": "仅聚焦截图内纯前端自定义展示内容",
        "filter_system_elements": "自动过滤系统状态栏和微信小程序标题栏",
        "dual_goal": "功能理解 + 视觉还原",
        "unit_standard": "尺寸以rpx为单位",
        "unit_requirement": "必须使用rpx作为尺寸单位，严禁使用px、rem、em等其他单位",
        "document_location": "必须在docs/NiceEasyAI目录下创建文档",
        "multi_screenshot_support": "支持多张截图分析",
        "css_framework": "必须使用 Tailwind CSS 处理样式",
        "icon_library": "必须使用 FontAwesome 增强视觉效果",
        "design_standards": "必须贴近真实 iOS 设计规范",
        "image_source": "必须使用真实 picsum.photos 图片而非占位符",
        "document_naming": "文档文件名必须使用中文命名",
        "section_naming": "文档内所有标题章节必须使用中文",
        "document_creation_restriction": "🚫 严禁创建多余文档，只能创建一个UI复刻文档",
        "complex_task_thinking": "复杂任务使用MCP Sequential thinking工具深度思考",
        "network_query": "支持联网查询获取最新信息",
        "project_context_required": "必须收集项目整体介绍和页面定位信息",
        "component_design_focus": "重点关注组件化设计和复用性分析",
        "json_format_required": "项目信息必须以JSON格式提供",
        "config_file_suggestion": "建议创建project-config.json文件保存项目配置"
      },
      "output_structure": {
        "document_naming_pattern": "UI复刻-页面中文名-页面英文名.md",
        "document_sections": [
          "页面命名规范（中文名与英文名）",
          "页面定位与功能分析",
          "项目整体介绍",
          "项目规模与模块结构",
          "视觉设计方案引用与对照",
          "页面分区布局解析",
          "元素组详细描述",
          "色彩与样式还原（基于设计方案标准）",
          "组件化设计建议",
          "交互逻辑标注",
          "Tailwind CSS 实现方案",
          "FontAwesome 图标建议",
          "picsum.photos 图片资源"
        ],
        "analysis_principles": [
          "功能理解优先",
          "视觉还原精确",
          "设计方案一致性",
          "逻辑关联性强",
          "开发友好输出"
        ],
        "visual_design_scheme_integration": {
          "scheme_file_requirement": "必须要求用户提供视觉统一设计方案.md文件路径",
          "color_system_mapping": "将截图颜色映射到设计方案的标准配色系统",
          "component_standards": "按照设计方案中的组件库规范进行UI复刻",
          "spacing_compliance": "严格遵循设计方案中的间距和数值规范",
          "typography_consistency": "确保字体使用符合设计方案的排版规范",
          "design_consistency_check": "对照设计方案检查UI复刻的一致性"
        },
        "page_naming_requirements": {
          "chinese_name": "页面的中文描述名称，如：商品详情页、用户登录页、订单列表页",
          "english_name": "适用于代码文件名的英文名称，如：product-detail、user-login、order-list",
          "naming_rules": [
            "中文名：简洁明确，体现页面核心功能",
            "英文名：小写字母，单词间用连字符分隔，符合文件命名规范",
            "英文名避免使用特殊字符，确保跨平台兼容性"
          ]
        },
        "component_design_guidelines": {
          "identification_criteria": [
            "重复出现的UI模块（如商品卡片、用户头像、按钮样式）",
            "具有独立功能的区域（如搜索栏、导航栏、底部操作栏）",
            "可能在其他页面复用的元素（如弹窗、提示框、加载状态）"
          ],
          "naming_conventions": [
            "组件名称使用PascalCase命名，如：ProductCard、UserAvatar、SearchBar",
            "组件文件名使用kebab-case，如：product-card.vue、user-avatar.vue",
            "组件目录按功能分类：common（通用）、business（业务）、layout（布局）"
          ],
          "reusability_assessment": [
            "评估组件在当前项目中的复用频率",
            "分析组件的可配置性和扩展性",
            "考虑组件的维护成本和开发效率提升"
          ],
          "component_examples": [
            "头部导航：HeaderNav - 包含标题、返回按钮、右侧操作",
            "商品卡片：ProductCard - 图片、标题、价格、操作按钮",
            "底部操作栏：BottomAction - 固定底部的主要操作按钮",
            "加载状态：LoadingState - 统一的加载动画和文案",
            "空状态页：EmptyState - 无数据时的占位内容"
          ]
        },
        "project_config_template": {
          "file_name": "project-config.json",
          "description": "项目配置文件模板，建议在项目根目录创建此文件",
          "template": {
            "projectInfo": {
              "name": "项目名称",
              "type": "小程序类型（电商/社交/工具/教育/娱乐等）",
              "description": "项目主要功能和特色的详细描述",
              "targetUsers": "目标用户群体描述",
              "coreFeatures": ["核心功能1", "核心功能2", "核心功能3"]
            },
            "projectScale": {
              "totalPages": "总页面数量（数字）",
              "modules": [
                {
                  "name": "模块名称",
                  "pageCount": "该模块页面数量",
                  "description": "模块功能描述",
                  "pages": ["页面1", "页面2", "页面3"]
                }
              ]
            }
          },
          "usage_benefits": [
            "一次配置，多次复用：复刻其他页面时直接复制JSON内容",
            "信息标准化：确保项目信息的一致性和完整性",
            "团队协作：团队成员可共享同一份项目配置",
            "版本管理：配置文件可纳入版本控制，跟踪项目演进"
          ],
          "example": {
            "projectInfo": {
              "name": "美食外卖小程序",
              "type": "电商",
              "description": "为用户提供便捷的在线点餐服务，支持多商家入驻，实时配送跟踪",
              "targetUsers": "18-45岁的上班族和学生群体",
              "coreFeatures": ["商家浏览", "在线点餐", "支付结算", "配送跟踪", "用户评价"]
            },
            "projectScale": {
              "totalPages": 15,
              "modules": [
                {
                  "name": "首页模块",
                  "pageCount": 3,
                  "description": "首页展示、搜索、分类浏览",
                  "pages": ["首页", "搜索页", "分类页"]
                },
                {
                  "name": "商家模块",
                  "pageCount": 4,
                  "description": "商家详情、菜品展示、购物车",
                  "pages": ["商家列表", "商家详情", "菜品详情", "购物车"]
                },
                {
                  "name": "订单模块",
                  "pageCount": 4,
                  "description": "下单、支付、订单管理",
                  "pages": ["确认订单", "支付页面", "订单列表", "订单详情"]
                },
                {
                  "name": "用户模块",
                  "pageCount": 4,
                  "description": "用户中心、个人信息管理",
                  "pages": ["个人中心", "个人信息", "地址管理", "设置页面"]
                }
              ]
            }
          }
        },
        "picsum_usage_guide": {
          "basic_usage": "https://picsum.photos/宽度/高度 - 获取随机图像",
          "square_image": "https://picsum.photos/尺寸 - 获取方形图像",
          "specific_image": "https://picsum.photos/id/图片ID/宽度/高度 - 获取特定图像",
          "seeded_image": "https://picsum.photos/seed/种子值/宽度/高度 - 获取固定随机图像",
          "grayscale": "在URL末尾添加?grayscale - 获取灰度图像",
          "blur": "在URL末尾添加?blur或?blur=1-10 - 获取模糊图像",
          "advanced_usage": "可组合多个选项，如: https://picsum.photos/id/870/200/300?grayscale&blur=2",
          "prevent_cache": "添加?random=数字 防止缓存，获取多个不同图像",
          "file_formats": "支持.jpg和.webp格式，如: https://picsum.photos/200/300.webp",
          "examples": [
            "头像图片: https://picsum.photos/100/100",
            "商品图片: https://picsum.photos/300/200",
            "轮播图: https://picsum.photos/750/400",
            "背景图: https://picsum.photos/1200/800",
            "缩略图: https://picsum.photos/150/150"
          ]
        }
      }
    },
    "spec": {
      "description": "分析功能需求或bug，自动分析相关页面并生成中文命名的解决方案文档，并在文档末尾自动建立详细的任务列表",
      "commands": [
        "【强制要求】首先阅读并严格遵守.QuickAction.json中global_settings的所有配置要求",
        "【强制要求】全程必须使用中文对话，禁止使用英文回复",
        "【第一阶段：需求分析与信息收集】",
        "1. 【强制代码阅读】必须强制阅读用户指定阅读的文件的所有代码，严禁选择性阅读或跳过任何代码段，必须逐行完整理解所有指定代码内容，禁止臆测执行：在没有完全理解代码逻辑前，禁止开始执行任何操作",
        "2. 【云开发平台确认】询问用户：本项目是否使用腾讯云开发？如用户回复是，则在生成的文档中加入云开发操作工具说明",
        "3. 深度分析用户输入的功能需求或bug描述，明确问题核心和预期目标",
        "3.1 【EARS语法规范】使用EARS（Easy Approach to Requirements Syntax）语法规范化需求描述：",
        "     - 基本需求：The <系统名称> shall <系统响应>",
        "     - 触发条件：When <触发条件>, the <系统名称> shall <系统响应>",
        "     - 前置条件：While <前置条件>, the <系统名称> shall <系统响应>",
        "     - 复合条件：While <前置条件>, when <触发条件>, the <系统名称> shall <系统响应>",
        "     - 可选条件：Where <可选条件>, the <系统名称> shall <系统响应>",
        "3.2 【需求验收标准】每个需求必须包含：",
        "     - 用户故事描述",
        "     - 使用EARS语法的验收标准条目",
        "     - 可测试的具体场景描述",
        "4. 【复杂任务思考】如果任务复杂度较高，使用MCP Sequential thinking工具进行深度思考分析",
        "5. 使用codebase-retrieval工具全面搜索相关页面、组件、工具函数、配置文件",
        "6. 【技术文档查询】如果需要查询技术文档，使用MCP Context 7查询最新技术文档和最佳实践",
        "7. 【联网查询】如果需要最新信息或解决方案，进行联网查询获取最新资料，例如MCP cloudbase工具的searchWeb(联网搜索)",
        "8. 【知识库查询】使用MCP CloudBase的searchKnowledgeBase工具查询云开发相关知识",
        "9. 分析当前代码结构、架构模式、技术栈和实现方式",
        "10. 识别潜在的技术难点、依赖关系和兼容性问题",
        "11. 评估现有代码的可复用性和扩展性",
        "【第二阶段：技术方案设计】",
        "12. 制定详细的技术解决方案",
        "13. 【云开发工具集成】如果用户确认使用腾讯云开发，在技术方案中详细说明如何使用MCP CloudBase工具集",
        "14. 设计代码结构和文件组织方式，遵循项目现有架构规范",
        "14.1 【Mermaid图表支持】在技术方案中使用Mermaid图表直观展示：",
        "     - 系统架构图：使用graph TD展示系统整体架构和模块关系",
        "     - 流程图：使用flowchart展示业务流程和数据流向",
        "     - 时序图：使用sequenceDiagram展示交互时序和API调用",
        "     - 类图：使用classDiagram展示数据模型和类关系",
        "     - 状态图：使用stateDiagram展示状态变化和生命周期",
        "14.2 【图表规范要求】Mermaid图表必须：",
        "     - 使用中文标签和注释，确保可读性",
        "     - 包含清晰的标题和说明文字",
        "     - 节点命名规范，避免特殊字符冲突",
        "     - 适当使用颜色和样式增强视觉效果",
        "     - 复杂图表要分层展示，避免过于复杂",
        "15. 确定需要修改、新增、删除的文件清单，标注修改类型和影响范围",
        "16. 【依赖管理】如果需要安装新依赖，优先使用国内镜像源（阿里云、腾讯云等）",
        "17. 评估工作量、实现复杂度和潜在风险",
        "18. 制定详细的实现路径和里程碑节点",
        "【第三阶段：文档生成与命名规范】",
        "19. 【目录检查与创建】首先检查docs/NiceEasyAI目录是否存在，如不存在则自动创建",
        "20. 【强制路径】在docs/NiceEasyAI目录下创建新解决方案文档",
        "21.1 【严禁多余文档】🚫 严禁创建任何其他多余文档，包括但不限于：",
        "     - 不得创建README.md、说明文档、介绍文档等额外文档",
        "     - 不得创建配置文档、部署文档、使用手册等衍生文档",
        "     - 不得创建示例文档、测试文档、API文档等补充文档",
        "     - 除非用户在需求中明确指定要创建特定文档，否则只能创建一个解决方案文档",
        "21.2 【复杂度评估与任务数量判断】结合需求复杂度，自动判断任务数量范围：",
        "     - 简单需求（基础功能、单一页面修改）：2-5个任务",
        "     - 中等需求（多页面交互、数据处理）：6-8个任务",
        "     - 复杂需求（系统集成、架构调整）：9-11个任务",
        "     - 很复杂需求（大型功能模块、多系统协调）：12-15个任务",
        "     - 将此数量要求传入第四阶段任务列表生成环节",
        "22. 【强制中文命名】文档文件名必须使用中文命名，格式：功能模块-具体需求-解决方案.md",
        "    示例：用户管理-登录功能-微信授权登录解决方案.md",
        "    示例：商品展示-列表页面-无限滚动加载解决方案.md",
        "    示例：支付流程-订单确认-多支付方式集成解决方案.md",
        "23. 【强制中文标题】文档内所有标题、章节名称必须使用中文",
        "24. 文档必须包含以下完整结构（所有标题均为中文）：",
        "    - 问题描述与需求分析（包含EARS语法规范的验收标准）",
        "    - 现状调研与技术背景",
        "    - 技术方案设计（包含Mermaid架构图表）",
        "    - 代码实现方案详解",
        "    - 文件修改清单与影响分析",
        "    - 依赖管理与镜像配置（如需要）",
        "    - 云开发操作工具（如项目使用腾讯云开发）",
        "【第四阶段：任务列表生成与管理】",
        "25. 【强制要求】在文档末尾自动建立详细的任务列表(TaskList)",
        "26. 【任务数量控制】根据第三阶段复杂度评估结果，生成对应数量范围的任务项：",
        "    - 简单需求：生成2-5个任务项",
        "    - 中等需求：生成6-8个任务项",
        "    - 复杂需求：生成9-11个任务项",
        "    - 很复杂需求：生成12-15个任务项",
        "27. 【任务质量要求】确保每个任务：",
        "    - 每个任务代表一个独立的开发单元(约15-30分钟工作量)",
        "    - 任务之间有清晰的依赖关系和执行顺序",
        "    - 包含需求分析、代码实现等全流程任务",
        "    - 任务描述具体明确，包含验收标准，可直接执行",

        "28. 【任务列表格式】使用标准的markdown任务列表格式：",
        "    - [ ] [任务类型] 任务名称：具体描述 (预估工时: XX分钟)",
        "    - 支持嵌套子任务结构，最多3层嵌套",
        "    - 标注任务优先级：🔴高优先级 🟡中优先级 🟢低优先级",
        "    - 标注任务依赖关系：依赖任务ID或名称",

        "【第五阶段：质量保证与确认流程】",
        "29. 【强制流程】创建文档和任务列表后必须让用户确认内容",
        "30. 【强制流程】提示用户进入反复修改环节，支持以下修改类型：",
        "    - 调整技术方案和实现路径",
        "    - 修改文档结构和内容详细程度",
        "    - 调整任务列表的粒度和优先级",
        "    - 补充遗漏的技术细节或风险点",
        "31. 【强制流程】只有当用户明确发出'文档通过'、'确认通过'、'审核通过'、'方案确认'等明确通过指令时，才代表此次快捷指令结束",
        "32. 【强制流程】在用户发出通过指令前，必须持续等待用户的修改要求或确认指令",
        "33. 【任务管理集成】文档确认通过后，自动将任务列表导入到系统任务管理中，并开始执行所有任务",
        "34. 【执行阶段文档限制】🚫 在执行任务过程中，严禁创建任何多余文档：",
        "    - 执行任务时只能修改代码文件、配置文件等必要的项目文件",
        "    - 严禁在任务执行过程中创建额外的说明文档、介绍文档、使用手册等",
        "    - 严禁创建与任务无关的辅助文档、示例文档、测试说明文档等",
        "    - 除非任务列表中明确要求创建特定文档，否则只专注于代码实现",
        "    - 如需创建文档，必须是任务列表中明确列出的具体文档需求"
      ],
      "requiresInput": true,
      "inputPrompt": "请详细描述功能需求或bug详情（包含期望效果、使用场景、技术要求等）：",
      "workflow": "enhanced_issue_analysis_v2",
      "constraints": {
        "language": "中文强制要求",
        "ears_syntax": "需求分析必须使用EARS语法规范化描述验收标准",
        "document_naming": "文档文件名必须使用中文命名",
        "section_naming": "文档内所有标题章节必须使用中文",
        "completion_trigger": "用户明确发出'文档通过'等确认指令",
        "modification_loop": "必须支持反复修改直到用户确认通过",
        "tasklist_requirement": "必须在文档末尾建立详细任务列表，根据复杂度判断任务数量：简单2-5个，中等6-8个，复杂9-11个，很复杂12-15个",
        "task_granularity": "每个任务约15-30分钟工作量，具体可执行",
        "complexity_assessment": "必须评估需求复杂度并据此确定合适的任务数量范围",
        "document_creation_restriction": "🚫 严禁创建多余文档，只能创建一个解决方案文档，除非用户明确指定要创建其他特定文档",
        "task_integration": "确认通过后自动导入任务管理系统，并开始执行所有任务",
        "task_execution_document_restriction": "🚫 执行任务时严禁创建多余文档，只能修改必要的项目文件，除非任务明确要求创建特定文档",
        "directory_management": "必须检查并创建docs/NiceEasyAI目录",
        "mcp_integration": "使用MCP Context 7查询技术文档，使用Sequential thinking处理复杂任务",
        "network_query": "支持联网查询获取最新信息",
        "mirror_preference": "在中国大陆环境下优先使用国内镜像源（阿里云、腾讯云等）",
        "cloudbase_inquiry": "必须询问用户是否使用腾讯云开发，如是则在文档中添加云开发操作工具说明"
      },
      "output_structure": {
        "document_naming_pattern": "功能模块-具体需求-解决方案.md",
        "document_sections": [
          "问题描述与需求分析",
          "现状调研与技术背景",
          "技术方案设计（包含Mermaid架构图表）",
          "代码实现方案详解",
          "文件修改清单与影响分析",
          "依赖管理与镜像配置（如需要）",
          "云开发操作工具（如项目使用腾讯云开发）",
          "任务列表(TaskList)"
        ],
        "mermaid_requirements": {
          "supported_types": ["graph", "flowchart", "sequenceDiagram", "classDiagram", "stateDiagram"],
          "language": "中文标签和注释",
          "complexity": "分层展示，避免过于复杂",
          "styling": "适当使用颜色和样式增强视觉效果"
        },
        "tasklist_format": "markdown_checklist_with_metadata",
        "task_count_range": "根据复杂度动态调整：简单2-5个，中等6-8个，复杂9-11个，很复杂12-15个",
        "task_detail_level": "具体可执行的开发单元，包含验收标准",
        "priority_levels": ["🔴高优先级", "🟡中优先级", "🟢低优先级"],
        "cloudbase_tools_template": {
          "title": "云开发操作工具",
          "description": "使用MCP cloudbase工具进行云开发相关操作，包括：",
          "categories": [
            "**环境管理**：login(登录云开发环境)、logout(退出)、envQuery(查询环境信息)、envDomainManagement(域名管理)、updateEnvInfo(更新环境信息)",
            "**数据库操作**：createCollection(创建集合)、collectionQuery(查询集合)、updateCollection(更新集合配置)、checkIndexExists(检查索引)、distribution(数据分布查询)",
            "**数据CRUD**：insertDocuments(插入文档)、queryDocuments(查询文档)、updateDocuments(更新文档)、deleteDocuments(删除文档)、manageDataModel(数据模型管理)",
            "**云函数管理**：getFunctionList(函数列表)、createFunction(创建函数)、updateFunctionCode(更新代码)、updateFunctionConfig(更新配置)、getFunctionDetail(函数详情)",
            "**云函数操作**：invokeFunction(调用函数)、getFunctionLogs(获取日志)、getFunctionLogDetail(日志详情)、createFunctionTriggers(创建触发器)、deleteFunctionTrigger(删除触发器)、createFunctionHTTPAccess(HTTP访问)",
            "**静态托管**：uploadFiles(上传文件)、getWebsiteConfig(托管配置)、deleteFiles(删除文件)、findFiles(搜索文件)",
            "**云存储**：uploadFile(上传到云存储)、downloadRemoteFile(下载远程文件)",
            "**域名管理**：domainManagement(统一域名管理，支持绑定、解绑、查询和修改配置)",
            "**安全规则**：readSecurityRule(读取安全规则)、writeSecurityRule(设置安全规则)",
            "**项目模板**：downloadTemplate(下载CloudBase项目模板，支持react/vue/miniprogram/uniapp/rules等)",
            "**辅助工具**：interactiveDialog(交互式对话)、searchWeb(联网搜索)、searchKnowledgeBase(知识库检索)、activateInviteCode(激活邀请码)"
          ]
        }
      },
      "validation_rules": {
        "document_must_have_chinese_filename": true,
        "all_headings_must_be_chinese": true,
        "tasklist_must_have_time_estimates": true,
        "tasklist_must_have_priorities": true,
        "must_wait_for_user_confirmation": true,
        "must_not_create_extra_documents": true,
        "only_one_solution_document_allowed": true,
        "task_execution_no_extra_documents": true,
        "must_check_and_create_docs_directory": true,
        "must_use_mcp_tools_when_appropriate": true,
        "must_support_network_queries": true,
        "must_prefer_domestic_mirrors_in_china": true,
        "must_inquire_about_cloudbase_usage": true
      }
    },
    "add": {
      "description": "添加新的快捷操作到.QuickAction.json文件中",
      "commands": [
        "【强制要求】全程必须使用中文对话，禁止使用英文回复",
        "【第一阶段：信息收集】",
        "1. 询问用户新快捷操作的短语（触发关键词）",
        "2. 询问用户希望的功能，然后自动总结成中文描述",
        "3. 询问用户新快捷操作的具体功能和执行步骤",
        "4. 询问是否需要用户输入，如需要则询问输入提示语",
        "5. 询问是否有特殊的约束条件或配置要求",
        "【第二阶段：验证检查】",
        "6. 检查新短语是否与现有快捷操作冲突",
        "7. 验证配置格式的正确性和完整性",
        "8. 向用户展示完整的新快捷操作配置",
        "【第三阶段：确认与更新】",
        "9. 等待用户确认配置无误并发出'审核通过'指令",
        "10. 自动读取当前.QuickAction.json文件，并参考已有的快捷操作，除add外",
        "11. 将新的快捷操作添加到配置中",
        "12. 保存更新后的.QuickAction.json文件",
        "13. 向用户确认添加成功并显示更新后的配置"
      ],
      "requiresInput": true,
      "inputPrompt": "请提供要添加的快捷操作信息（我将逐步询问详细配置）：",
      "workflow": "add_quick_action",
      "constraints": {
        "language": "中文强制要求",
        "conflict_check": "必须检查短语冲突",
        "format_validation": "必须验证配置格式",
        "user_confirmation": "必须等待用户'审核通过'确认",
        "auto_update": "自动更新.QuickAction.json文件",
        "success_feedback": "必须提供添加成功的确认反馈"
      }
    },
    "json": {
      "description": "将用户输入的文字整理成标准JSON格式，便于复制给AI理解",
      "commands": [
        "分析用户输入的文字内容",
        "识别文本中的关键信息、结构和逻辑",
        "将整理后的信息组织成标准的JSON格式",
        "确保JSON结构清晰、易于AI理解和处理",
        "提供可直接复制的JSON输出"
      ],
      "requiresInput": true,
      "inputPrompt": "请输入需要整理成JSON格式的文字内容：",
      "workflow": "text_to_json_formatter",
      "constraints": {
        "format_validation": "必须验证JSON格式正确性",
        "content_analysis": "必须深度分析文本内容结构",
        "clarity_requirement": "必须确保输出JSON清晰易懂",
        "copy_friendly": "必须提供便于复制的格式"
      }
    },
    "mock": {
      "description": "基于MongoDB数据库的数据模型，根据用户提供的数据模型设计文档，生成符合MongoDB存储规范的模拟数据TS文件，询问用户想生成的条数，不要太多，覆盖不同状态和边界值",
      "commands": [
        "【强制要求】首先阅读并严格遵守.QuickAction.json中global_settings的所有配置要求",
        "【强制要求】全程必须使用中文对话，禁止使用英文回复",
        "【MongoDB数据库强调】本快捷操作专门针对MongoDB数据库设计，必须严格遵循MongoDB数据存储规范和字段类型要求", 
        "【第一阶段：MongoDB数据模型分析】",
        "1. 【强制代码阅读】必须强制阅读用户指定的数据模型设计文档的所有内容，严禁选择性阅读或跳过任何内容段，必须逐行完整理解所有指定内容，禁止臆测执行：在没有完全理解模型结构前，禁止开始生成任何代码",
        "2. 【MongoDB特有字段识别】深度分析数据模型结构，特别关注MongoDB特有字段：",
        "   - _id字段：必须使用MongoDB ObjectId格式（24位十六进制字符串）",
        "   - 时间字段：识别createTime、updateTime等时间戳字段，采用MongoDB ISODate格式或时间戳",
        "   - 嵌套对象和数组：识别MongoDB支持的嵌套文档结构",
        "   - 索引字段：识别可能需要建立索引的字段",
        "3. 明确所有字段名称、MongoDB数据类型定义、约束条件和业务规则",
        "4. 识别枚举值、状态字段、可选字段等特殊类型，为生成边界值数据做准备",
        "5. 询问用户希望生成多少条模拟数据（建议6-12条，不要太多）",
        "【第二阶段：MongoDB兼容接口定义生成】", 
        "6. 根据MongoDB数据模型生成完全对齐的TypeScript接口定义",
        "7. 【MongoDB字段类型映射】确保字段类型正确映射到TypeScript：",
        "   - _id: string（MongoDB ObjectId的字符串表示）",
        "   - 时间字段: string | Date（根据项目惯例选择）", 
        "   - 数值字段: number（对应MongoDB的NumberInt、NumberLong、Double）",
        "   - 布尔字段: boolean（对应MongoDB的Boolean）",
        "   - 数组字段: Array<T>（对应MongoDB的Array）",
        "   - 嵌套对象: 自定义接口类型（对应MongoDB的Object）",
        "8. 确保字段名、类型、约束条件与原MongoDB数据模型完全一致",
        "9. 为所有字段添加详细的MongoDB类型注释说明",
        "【第三阶段：MongoDB格式模拟数据生成】",
        "10. 生成指定条数的MongoDB格式模拟数据，必须覆盖以下场景：",
        "    - MongoDB ObjectId格式的_id字段（如：'507f1f77bcf86cd799439011'）",
        "    - 不同状态值的数据（如active/inactive等枚举值）",
        "    - 边界值测试数据（如最大值、最小值、null值等）",
        "    - 真实感强的中文数据（姓名、地址等使用中文）",
        "    - 符合MongoDB格式的时间数据（如：'2024-01-01T10:00:00.000Z'或时间戳）",
        "    - 符合格式要求的数据（如手机号、邮箱等）",
        "    - MongoDB特有的数据结构（嵌套对象、数组等）",
        "11. 【MongoDB数据完整性】确保数据的多样性和MongoDB业务逻辑合理性：",
        "    - _id字段唯一性保证",
        "    - 时间字段的合理性（createTime < updateTime）",
        "    - 引用字段的一致性（如userId引用User集合的_id）",
        "    - 符合MongoDB数据验证规则",
        "【第四阶段：文件生成与目录管理】",
        "12. 【目录检查与创建】首先检查docs/NiceEasyAI目录是否存在，如不存在则自动创建",
        "13. 【强制路径】在docs/NiceEasyAI目录下创建TS模拟数据文件",
        "14. 根据MongoDB集合名称生成合适的TS文件名（如：用户集合→用户模拟数据.ts）",
        "15. 生成完整的TS文件内容，包含：",
        "    - MongoDB兼容的接口定义部分（字段名、类型完全对齐）",
        "    - MongoDB格式的模拟数据数组部分（覆盖不同状态和边界值）",
        "    - 必要的导出语句和类型声明",
        "    - MongoDB字段说明注释",
        "16. 将生成的TS文件保存到docs/NiceEasyAI目录",
        "【第五阶段：MongoDB兼容性验证与确认】",
        "17. 验证生成的接口定义与原MongoDB数据模型的一致性",
        "18. 验证模拟数据的MongoDB格式完整性和合理性",
        "19. 检查_id字段格式、时间字段格式、数据类型映射的正确性", 
        "20. 向用户展示生成的TS文件路径和MongoDB兼容性说明",
        "21. 等待用户确认或提出修改要求"
      ],
      "requiresInput": true,
      "inputPrompt": "请提供MongoDB数据模型设计文档（文件路径或具体内容），我将为您生成符合MongoDB存储规范的模拟数据TS文件：",
      "workflow": "mongodb_mock_data_generation",
      "constraints": {
        "language": "中文强制要求",
        "database_type": "强制基于MongoDB数据库设计",
        "objectid_format": "必须使用MongoDB ObjectId格式的_id字段",
        "timestamp_format": "必须使用MongoDB兼容的时间格式",
        "data_type_mapping": "必须正确映射MongoDB数据类型到TypeScript类型",
        "model_analysis": "必须完整分析MongoDB数据模型结构",
        "interface_alignment": "接口定义必须与MongoDB模型完全对齐", 
        "data_diversity": "必须覆盖不同状态和边界值",
        "realistic_data": "使用真实感强的中文数据",
        "mongodb_compliance": "确保所有数据符合MongoDB存储规范",
        "file_naming": "TS文件使用中文命名规范",
        "directory_management": "必须检查并创建docs/NiceEasyAI目录",
        "forced_path": "强制在docs/NiceEasyAI目录下创建文件",
        "user_confirmation": "必须等待用户确认生成结果"
      }
    },
    "model": {
      "description": "基于用户提供的多个文件代码分析，生成MongoDB数据模型设计文档，深度分析复杂业务关系和数据结构",
      "commands": [
        "【强制要求】首先阅读并严格遵守.QuickAction.json中global_settings的所有配置要求",
        "【强制要求】全程必须使用中文对话，禁止使用英文回复",
        "【第一阶段：多文件代码分析】",
        "1. 【强制代码阅读】必须强制阅读用户指定的所有文件及相关代码的全部内容，严禁选择性阅读或跳过任何代码段，必须逐行完整理解所有指定代码内容，禁止臆测执行：在没有完全理解代码逻辑前，禁止开始生成任何文档",
        "2. 【复杂任务思考】如果项目复杂度较高，使用MCP Sequential thinking工具进行深度思考分析",
        "3. 深度分析用户的需求，明确问题核心和预期目标",
        "4. 【EARS语法规范】使用EARS（Easy Approach to Requirements Syntax）语法规范化需求描述：",
        "   - 基本需求：The <系统名称> shall <系统响应>",
        "   - 触发条件：When <触发条件>, the <系统名称> shall <系统响应>",
        "   - 前置条件：While <前置条件>, the <系统名称> shall <系统响应>",
        "   - 复合条件：While <前置条件>, when <触发条件>, the <系统名称> shall <系统响应>",
        "   - 可选条件：Where <可选条件>, the <系统名称> shall <系统响应>",
        "5. 分析文件中的数据流、状态管理、API调用等业务逻辑",
        "6. 识别复杂业务关系（实体间的关联、依赖和交互逻辑）",
        "【第二阶段：MongoDB数据模型设计】",
        "7. 根据代码分析结果设计MongoDB数据模型结构",
        "8. 【字段定义规范】严格按照以下格式定义字段：",
        "   - 字段名称：必须使用中文，便于理解和维护",
        "   - 字段标识：代码中引用的字段名，不能包含中文字符，字段标识里openid不能跟_连用（例如payer-openid可以，payer_openid不行）",
        "   - 数据类型：使用规范化的数据类型定义",
        "   - 是否必填：标识字段是否为必填项",
        "   - 默认值：字段的默认值设置",
        "   - 是否唯一：设置为唯一后，该字段不可输入重复值",
        "9. 【支持的数据类型】使用以下19种数据类型：文本、布尔值、数字、数组、对象、Json、邮箱、电话、网址、图片、多媒体、富文本、Markdown、日期时间、枚举、地理位置、文件、自动编号、地区",
        "10. 【系统字段说明】包含系统自动管理的字段：_id（数据标识）、_openid（微信用户标识）、createdAt（创建时间）、updatedAt（更新时间）",
        "11. 设计索引方案、数据验证规则、权限说明",
        "12. 区分辅助数据结构说明（前端临时生成的数据，不需要存储到数据库中）",
        "【第三阶段：文档生成与目录管理】",
        "13. 【目录检查与创建】首先检查docs/NiceEasyAI目录是否存在，如不存在则自动创建",
        "14. 【强制路径】在docs/NiceEasyAI目录下创建MongoDB数据模型设计文档",
        "15. 【强制中文命名】文档文件名必须使用格式：模型英文名（模型中文名）.md",
        "    示例：activity（活动模型）.md",
        "    示例：user（用户模型）.md", 
        "16. 生成完整的文档内容，包含：",
        "    - 数据结构定义（完整的字段列表和说明）",
        "    - 索引设计方案",
        "    - 数据验证规则",
        "    - 权限说明",
        "    - 辅助数据结构说明",
        "    - 业务关系图表和说明",
        "【第四阶段：质量验证与确认】",
        "17. 验证文档的完整性和准确性",
        "18. 检查字段定义格式的正确性",
        "19. 向用户展示生成的文档路径和内容概览",
        "20. 等待用户确认或提出修改要求"
      ],
      "requiresInput": true,
      "inputPrompt": "请提供要分析的文件路径和数据模型名称，我将深度分析代码并生成完整的MongoDB数据模型设计文档：",
      "workflow": "multi_file_code_analysis_to_mongodb_model",
      "constraints": {
        "language": "中文强制要求",
        "code_reading": "必须强制阅读所有指定代码",
        "ears_syntax": "必须使用EARS语法规范化需求描述",
        "field_naming": "字段标识不能使用下划线连接openid",
        "data_types": "支持19种规范化数据类型",
        "system_fields": "必须包含系统自动字段说明",
        "file_naming": "文档使用格式：模型英文名（模型中文名）.md",
        "directory_management": "必须检查并创建docs/NiceEasyAI目录",
        "forced_path": "强制在docs/NiceEasyAI目录下创建文件",
        "user_confirmation": "必须等待用户确认生成结果"
      }
    }
  }
}