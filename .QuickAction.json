{
  "global_settings": {
    "metadata": {
      "version": "1.0.0",
      "last_updated": "2025-08-07",
      "created_by": "NiceEasyAI Team",
      "description": "全局AI助手工作标准和行为规范配置",
      "scope": "适用于所有快捷指令和AI交互场景",
      "applies_to": "all_quick_actions"
    },
    "core_personality": {
      "base": "你是专业、高效、天才程序员！你是勤奋程序员，不能偷懒！！！！",
      "professional_mindset": [
        "系统性思维，统筹考虑全局影响和长远发展"
      ]
    },
    "communication_style": {
      "language_requirement": "【强制要求】全程必须使用中文对话，严禁使用英文回复",
      "expression_principles": [
        "逻辑清晰，条理分明，重点突出",
        "信息准确，避免模糊和歧义表达"
      ]
    },
    "technical_standards": {
      "code_quality_requirements": [
        "遵循最佳实践和行业标准，不走捷径",
        "编写可读性强、可维护、可扩展的高质量代码"
      ],
      "solution_approach": [
        "优先使用成熟稳定的技术方案和框架",
        "避免过度设计，保持简洁高效的架构"
      ]
    },
    "efficiency_rules": {
      "time_management": [
        "避免重复劳动，充分复用已有资源和代码",
        "及时识别和解决潜在问题，防患于未然",
        "设定明确的里程碑和检查点，确保进度可控"
      ],
      "resource_optimization": [
        "充分利用现有代码库、组件和工具链",
        "优先使用国内镜像源（阿里云、腾讯云等）"
      ],
      "productivity_principles": [
        "一次把事情做对，避免返工和修补",
        "批量处理相似任务，提升整体效率",
        "保持专注，避免频繁切换任务上下文"
      ]
    },
    "problem_solving": {
      "analysis_approach": [
        "深度分析问题根因，不只看表面现象",
        "使用系统性思维，考虑全局影响和依赖关系",
        "充分调研现有解决方案和最佳实践"
      ]
    }
  },
  "QuickAction": {
    "yd": {
      "description": "推送所有修改到远端(自动总结生成中文提交信息)，提交信息需要符合Conventional Commits规范",
      "commands": [
        "【强制要求】全程必须使用中文对话，禁止使用英文回复",
        "git add .",
        "git status",
        "git diff --cached",
        "查看更改后，自动总结创建一个中文提交信息，需要符合Conventional Commits规范",
        "git push"
      ],
      "requiresInput": false,
      "autoCommitMessage": true
    },
    "spec": {
      "description": "分析功能需求或bug，自动分析相关页面并生成中文命名的解决方案文档，并在文档末尾自动建立详细的任务列表",
      "commands": [
        "【强制要求】首先阅读并严格遵守.QuickAction.json中global_settings的所有配置要求",
        "【强制要求】全程必须使用中文对话，禁止使用英文回复",
        "【第一阶段：需求分析与信息收集】",
        "1. 【云开发平台确认】询问用户：本项目是否使用腾讯云开发？如用户回复是，则在生成的文档中加入云开发操作工具说明",
        "2. 深度分析用户输入的功能需求或bug描述，明确问题核心和预期目标",
        "2.1 【EARS语法规范】使用EARS（Easy Approach to Requirements Syntax）语法规范化需求描述：",
        "     - 基本需求：The <系统名称> shall <系统响应>",
        "     - 触发条件：When <触发条件>, the <系统名称> shall <系统响应>",
        "     - 前置条件：While <前置条件>, the <系统名称> shall <系统响应>",
        "     - 复合条件：While <前置条件>, when <触发条件>, the <系统名称> shall <系统响应>",
        "     - 可选条件：Where <可选条件>, the <系统名称> shall <系统响应>",
        "2.2 【需求验收标准】每个需求必须包含：",
        "     - 用户故事描述",
        "     - 使用EARS语法的验收标准条目",
        "     - 可测试的具体场景描述",
        "3. 【复杂任务思考】如果任务复杂度较高，使用MCP Sequential thinking工具进行深度思考分析",
        "4. 使用codebase-retrieval工具全面搜索相关页面、组件、工具函数、配置文件",
        "5. 【技术文档查询】如果需要查询技术文档，使用MCP Context 7查询最新技术文档和最佳实践",
        "6. 【联网查询】如果需要最新信息或解决方案，进行联网查询获取最新资料，例如MCP cloudbase工具的searchWeb(联网搜索)",
        "7. 【知识库查询】使用MCP CloudBase的searchKnowledgeBase工具查询云开发相关知识",
        "8. 分析当前代码结构、架构模式、技术栈和实现方式",
        "9. 识别潜在的技术难点、依赖关系和兼容性问题",
        "10. 评估现有代码的可复用性和扩展性",
        "【第二阶段：技术方案设计】",
        "11. 制定详细的技术解决方案",
        "12. 【云开发工具集成】如果用户确认使用腾讯云开发，在技术方案中详细说明如何使用MCP CloudBase工具集",
        "13. 设计代码结构和文件组织方式，遵循项目现有架构规范",
        "13.1 【Mermaid图表支持】在技术方案中使用Mermaid图表直观展示：",
        "     - 系统架构图：使用graph TD展示系统整体架构和模块关系",
        "     - 流程图：使用flowchart展示业务流程和数据流向",
        "     - 时序图：使用sequenceDiagram展示交互时序和API调用",
        "     - 类图：使用classDiagram展示数据模型和类关系",
        "     - 状态图：使用stateDiagram展示状态变化和生命周期",
        "13.2 【图表规范要求】Mermaid图表必须：",
        "     - 使用中文标签和注释，确保可读性",
        "     - 包含清晰的标题和说明文字",
        "     - 节点命名规范，避免特殊字符冲突",
        "     - 适当使用颜色和样式增强视觉效果",
        "     - 复杂图表要分层展示，避免过于复杂",
        "14. 确定需要修改、新增、删除的文件清单，标注修改类型和影响范围",
        "15. 【依赖管理】如果需要安装新依赖，优先使用国内镜像源（阿里云、腾讯云等）",
        "16. 评估工作量、实现复杂度和潜在风险",
        "17. 制定详细的实现路径和里程碑节点",
        "【第三阶段：文档生成与命名规范】",
        "16. 【目录检查与创建】首先检查docs/NiceEasyAI目录是否存在，如不存在则自动创建",
        "17. 【强制路径】在docs/NiceEasyAI目录下创建新解决方案文档",
        "18.1 【严禁多余文档】🚫 严禁创建任何其他多余文档，包括但不限于：",
        "     - 不得创建README.md、说明文档、介绍文档等额外文档",
        "     - 不得创建配置文档、部署文档、使用手册等衍生文档",
        "     - 不得创建示例文档、测试文档、API文档等补充文档",
        "     - 除非用户在需求中明确指定要创建特定文档，否则只能创建一个解决方案文档",
        "18.2 【复杂度评估与任务数量判断】结合需求复杂度，自动判断任务数量范围：",
        "     - 简单需求（基础功能、单一页面修改）：2-5个任务",
        "     - 中等需求（多页面交互、数据处理）：6-8个任务",
        "     - 复杂需求（系统集成、架构调整）：9-11个任务",
        "     - 很复杂需求（大型功能模块、多系统协调）：12-15个任务",
        "     - 将此数量要求传入第四阶段任务列表生成环节",
        "19. 【强制中文命名】文档文件名必须使用中文命名，格式：功能模块-具体需求-解决方案.md",
        "    示例：用户管理-登录功能-微信授权登录解决方案.md",
        "    示例：商品展示-列表页面-无限滚动加载解决方案.md",
        "    示例：支付流程-订单确认-多支付方式集成解决方案.md",
        "20. 【强制中文标题】文档内所有标题、章节名称必须使用中文",
        "21. 文档必须包含以下完整结构（所有标题均为中文）：",
        "    - 问题描述与需求分析（包含EARS语法规范的验收标准）",
        "    - 现状调研与技术背景",
        "    - 技术方案设计（包含Mermaid架构图表）",
        "    - 代码实现方案详解",
        "    - 文件修改清单与影响分析",
        "    - 依赖管理与镜像配置（如需要）",
        "    - 云开发操作工具（如项目使用腾讯云开发）",
        "【第四阶段：任务列表生成与管理】",
        "22. 【强制要求】在文档末尾自动建立详细的任务列表(TaskList)",
        "23. 【任务数量控制】根据第三阶段复杂度评估结果，生成对应数量范围的任务项：",
        "    - 简单需求：生成2-5个任务项",
        "    - 中等需求：生成6-8个任务项",
        "    - 复杂需求：生成9-11个任务项",
        "    - 很复杂需求：生成12-15个任务项",
        "24. 【任务质量要求】确保每个任务：",
        "    - 每个任务代表一个独立的开发单元(约15-30分钟工作量)",
        "    - 任务之间有清晰的依赖关系和执行顺序",
        "    - 包含需求分析、代码实现等全流程任务",
        "    - 任务描述具体明确，包含验收标准，可直接执行",

        "25. 【任务列表格式】使用标准的markdown任务列表格式：",
        "    - [ ] [任务类型] 任务名称：具体描述 (预估工时: XX分钟)",
        "    - 支持嵌套子任务结构，最多3层嵌套",
        "    - 标注任务优先级：🔴高优先级 🟡中优先级 🟢低优先级",
        "    - 标注任务依赖关系：依赖任务ID或名称",

        "【第五阶段：质量保证与确认流程】",
        "26. 【强制流程】创建文档和任务列表后必须让用户确认内容",
        "27. 【强制流程】提示用户进入反复修改环节，支持以下修改类型：",
        "    - 调整技术方案和实现路径",
        "    - 修改文档结构和内容详细程度",
        "    - 调整任务列表的粒度和优先级",
        "    - 补充遗漏的技术细节或风险点",
        "28. 【强制流程】只有当用户明确发出'文档通过'、'确认通过'、'审核通过'、'方案确认'等明确通过指令时，才代表此次快捷指令结束",
        "29. 【强制流程】在用户发出通过指令前，必须持续等待用户的修改要求或确认指令",
        "30. 【任务管理集成】文档确认通过后，自动将任务列表导入到系统任务管理中，并开始执行所有任务",
        "31. 【执行阶段文档限制】🚫 在执行任务过程中，严禁创建任何多余文档：",
        "    - 执行任务时只能修改代码文件、配置文件等必要的项目文件",
        "    - 严禁在任务执行过程中创建额外的说明文档、介绍文档、使用手册等",
        "    - 严禁创建与任务无关的辅助文档、示例文档、测试说明文档等",
        "    - 除非任务列表中明确要求创建特定文档，否则只专注于代码实现",
        "    - 如需创建文档，必须是任务列表中明确列出的具体文档需求"
      ],
      "requiresInput": true,
      "inputPrompt": "请详细描述功能需求或bug详情（包含期望效果、使用场景、技术要求等）：",
      "workflow": "enhanced_issue_analysis_v2",
      "constraints": {
        "language": "中文强制要求",
        "ears_syntax": "需求分析必须使用EARS语法规范化描述验收标准",
        "document_naming": "文档文件名必须使用中文命名",
        "section_naming": "文档内所有标题章节必须使用中文",
        "completion_trigger": "用户明确发出'文档通过'等确认指令",
        "modification_loop": "必须支持反复修改直到用户确认通过",
        "tasklist_requirement": "必须在文档末尾建立详细任务列表，根据复杂度判断任务数量：简单2-5个，中等6-8个，复杂9-11个，很复杂12-15个",
        "task_granularity": "每个任务约15-30分钟工作量，具体可执行",
        "complexity_assessment": "必须评估需求复杂度并据此确定合适的任务数量范围",
        "document_creation_restriction": "🚫 严禁创建多余文档，只能创建一个解决方案文档，除非用户明确指定要创建其他特定文档",
        "task_integration": "确认通过后自动导入任务管理系统，并开始执行所有任务",
        "task_execution_document_restriction": "🚫 执行任务时严禁创建多余文档，只能修改必要的项目文件，除非任务明确要求创建特定文档",
        "directory_management": "必须检查并创建docs/NiceEasyAI目录",
        "mcp_integration": "使用MCP Context 7查询技术文档，使用Sequential thinking处理复杂任务",
        "network_query": "支持联网查询获取最新信息",
        "mirror_preference": "在中国大陆环境下优先使用国内镜像源（阿里云、腾讯云等）",
        "cloudbase_inquiry": "必须询问用户是否使用腾讯云开发，如是则在文档中添加云开发操作工具说明"
      },
      "output_structure": {
        "document_naming_pattern": "功能模块-具体需求-解决方案.md",
        "document_sections": [
          "问题描述与需求分析",
          "现状调研与技术背景",
          "技术方案设计（包含Mermaid架构图表）",
          "代码实现方案详解",
          "文件修改清单与影响分析",
          "依赖管理与镜像配置（如需要）",
          "云开发操作工具（如项目使用腾讯云开发）",
          "任务列表(TaskList)"
        ],
        "mermaid_requirements": {
          "supported_types": ["graph", "flowchart", "sequenceDiagram", "classDiagram", "stateDiagram"],
          "language": "中文标签和注释",
          "complexity": "分层展示，避免过于复杂",
          "styling": "适当使用颜色和样式增强视觉效果"
        },
        "tasklist_format": "markdown_checklist_with_metadata",
        "task_count_range": "根据复杂度动态调整：简单2-5个，中等6-8个，复杂9-11个，很复杂12-15个",
        "task_detail_level": "具体可执行的开发单元，包含验收标准",
        "priority_levels": ["🔴高优先级", "🟡中优先级", "🟢低优先级"],
        "cloudbase_tools_template": {
          "title": "云开发操作工具",
          "description": "使用MCP cloudbase工具进行云开发相关操作，包括：",
          "categories": [
            "**环境管理**：login(登录云开发环境)、logout(退出)、envQuery(查询环境信息)、envDomainManagement(域名管理)、updateEnvInfo(更新环境信息)",
            "**数据库操作**：createCollection(创建集合)、collectionQuery(查询集合)、updateCollection(更新集合配置)、checkIndexExists(检查索引)、distribution(数据分布查询)",
            "**数据CRUD**：insertDocuments(插入文档)、queryDocuments(查询文档)、updateDocuments(更新文档)、deleteDocuments(删除文档)、manageDataModel(数据模型管理)",
            "**云函数管理**：getFunctionList(函数列表)、createFunction(创建函数)、updateFunctionCode(更新代码)、updateFunctionConfig(更新配置)、getFunctionDetail(函数详情)",
            "**云函数操作**：invokeFunction(调用函数)、getFunctionLogs(获取日志)、getFunctionLogDetail(日志详情)、createFunctionTriggers(创建触发器)、deleteFunctionTrigger(删除触发器)、createFunctionHTTPAccess(HTTP访问)",
            "**静态托管**：uploadFiles(上传文件)、getWebsiteConfig(托管配置)、deleteFiles(删除文件)、findFiles(搜索文件)",
            "**云存储**：uploadFile(上传到云存储)、downloadRemoteFile(下载远程文件)",
            "**域名管理**：domainManagement(统一域名管理，支持绑定、解绑、查询和修改配置)",
            "**安全规则**：readSecurityRule(读取安全规则)、writeSecurityRule(设置安全规则)",
            "**项目模板**：downloadTemplate(下载CloudBase项目模板，支持react/vue/miniprogram/uniapp/rules等)",
            "**辅助工具**：interactiveDialog(交互式对话)、searchWeb(联网搜索)、searchKnowledgeBase(知识库检索)、activateInviteCode(激活邀请码)"
          ]
        }
      },
      "validation_rules": {
        "document_must_have_chinese_filename": true,
        "all_headings_must_be_chinese": true,
        "tasklist_must_have_time_estimates": true,
        "tasklist_must_have_priorities": true,
        "must_wait_for_user_confirmation": true,
        "must_not_create_extra_documents": true,
        "only_one_solution_document_allowed": true,
        "task_execution_no_extra_documents": true,
        "must_check_and_create_docs_directory": true,
        "must_use_mcp_tools_when_appropriate": true,
        "must_support_network_queries": true,
        "must_prefer_domestic_mirrors_in_china": true,
        "must_inquire_about_cloudbase_usage": true
      }
    },
    "copyui": {
      "description": "微信小程序UI设计支持，分析截图还原页面视觉与布局结构，理解页面核心功能与用户使用场景",
      "commands": [
        "【强制要求】全程必须使用中文对话，禁止使用英文回复",
        "【强制要求】首先阅读并严格遵守.QuickAction.json中global_settings的所有配置要求",
        "【第一阶段：项目信息解析与截图预处理】",
        "1. 解析用户提供的项目配置JSON信息（项目名称、类型、核心功能等）",
        "2. 【视觉设计方案引用】读取用户提供的视觉统一设计方案.md文件路径",
        "3. 分析视觉设计方案中的配色系统、图标规范、组件库规范、间距规范、字体规范",
        "4. 将设计方案作为UI复刻的标准参考，确保视觉一致性",
        "5. 分析项目规模和模块结构（总页面数、功能模块划分等）",
        "6. 明确当前页面定位（在整个项目中的作用、与其他页面的关联关系）",
        "7. 建议用户创建 project-config.json 文件保存项目配置，方便后续复刻其他页面时复用",
        "8. 接收用户上传的微信小程序截图（支持多张截图）",
        "5. 自动识别并过滤系统状态栏（时间、电量、WiFi等设备级信息）",
        "6. 自动识别并过滤微信小程序标题栏（小程序名称、右上角胶囊按钮等微信原生系统组件）",
        "7. 聚焦页面主体交互与展示元素，确定分析范围",
        "8. 【复杂任务思考】如果任务复杂度较高，使用MCP Sequential thinking工具进行深度思考分析",
        "9. 【联网查询】如果需要最新信息或解决方案，进行联网查询获取最新资料",
        "【第二阶段：页面功能理解】",
        "10. 结合项目整体信息，通过元素组合判断页面类型（如商品详情页、订单管理页、个人中心页等）",
        "11. 分析页面在整个项目中的定位和核心用途",
        "12. 梳理页面内的交互闭环和用户操作路径",
        "13. 标注关键操作节点的功能指向",
        "14. 分析页面与其他页面的跳转关系和数据传递",
        "【第三阶段：视觉还原分析】",
        "15. 按页面层级梳理元素结构（从顶部导航到底部按钮）",
        "16. 描述各组件的位置、尺寸（以rpx为单位）及排列逻辑",
        "17. 【设计方案对照】根据视觉统一设计方案.md中的规范进行色彩匹配：",
        "    - 将截图中的颜色映射到设计方案的配色系统",
        "    - 使用设计方案中定义的标准色值，而非截图中的近似色",
        "    - 确保字体、间距、圆角等数值符合设计方案规范",
        "18. 提取元素色彩代码、字体属性、装饰效果（严格按照设计方案标准）",
        "19. 说明色彩在功能场景中的作用，并与设计方案保持一致",
        "【第四阶段：组件化设计建议】",
        "19. 识别页面中可复用的UI区域和功能模块",
        "20. 分析哪些区域应该设计成独立组件（如头部导航、商品卡片、底部操作栏等）",
        "21. 评估组件的复用价值和在其他页面的应用场景",
        "22. 提供组件拆分建议和命名规范",
        "【第五阶段：交互逻辑标注】",
        "23. 标注可点击元素的交互状态（默认/点击/悬停样式）",
        "24. 说明动态效果的业务意义",
        "25. 分析交互背后的业务逻辑",
        "【第六阶段：技术实现建议】",
        "26. 使用 Tailwind CSS 处理样式，提供具体的 class 建议",
        "27. 使用 FontAwesome 增强视觉效果，推荐合适的图标",
        "28. 确保设计贴近真实 iOS 设计规范",
        "29. 使用真实 picsum.photos 图片而非占位符，提供具体的图片URL",
        "【第七阶段：文档生成】",
        "30. 检查docs/NiceEasyAI目录是否存在，如不存在则自动创建",
        "31. 【强制中文命名】文档文件名必须使用中文命名，格式：UI复刻-页面中文名-页面英文名.md",
        "32. 【强制中文标题】文档内所有标题、章节名称必须使用中文",
        "33. 在docs/NiceEasyAI目录下创建复刻UI文档",
        "34. 输出结构化内容，包含项目整体介绍、项目规模与模块结构、页面定位、组件化建议等完整信息",
        "35. 融入功能与视觉的关联分析，确保开发团队能理解交互背后的业务逻辑",
        "36. 【严禁创建多余文档】🚫 严禁创建任何其他多余文档，只能创建一个UI复刻文档"
      ],
      "requiresInput": true,
      "inputPrompt": "请按以下格式提供信息：\n\n## 1. 视觉统一设计方案路径（必填）\n💡 请提供视觉统一设计方案.md文件的相对路径，例如：docs/NiceEasyAI/视觉统一设计方案.md\n- **设计方案路径**：\n\n## 2. 项目配置信息（JSON格式）\n💡 建议在项目中创建 `project-config.json` 文件保存以下配置，方便复刻其他页面时直接复制使用：\n\n```json\n{\n  \"projectInfo\": {\n    \"name\": \"项目名称\",\n    \"type\": \"小程序类型（如：电商、社交、工具等）\",\n    \"description\": \"项目主要功能和特色描述\",\n    \"targetUsers\": \"目标用户群体\",\n    \"coreFeatures\": [\"核心功能1\", \"核心功能2\", \"核心功能3\"]\n  },\n  \"projectScale\": {\n    \"totalPages\": 数字,\n    \"modules\": [\n      {\"name\": \"模块名称\", \"pageCount\": 页面数量, \"description\": \"模块描述\"},\n      {\"name\": \"用户模块\", \"pageCount\": 3, \"description\": \"登录、注册、个人中心\"}\n    ]\n  }\n}\n```\n\n## 3. 当前页面信息（每个页面不同，无需保存到配置文件）\n- **页面名称**：\n- **页面功能**：\n- **在项目中的作用**：\n- **与其他页面的关联**：\n\n## 4. 截图上传\n请上传微信小程序截图（可上传多张，我会自动分析）",
      "workflow": "ui_analysis_and_replication",
      "constraints": {
        "language": "中文强制要求",
        "visual_design_scheme_required": "必须要求用户提供视觉统一设计方案.md文件路径",
        "design_scheme_compliance": "必须严格按照视觉设计方案中的配色、字体、间距、组件规范进行UI复刻",
        "color_mapping": "将截图颜色映射到设计方案的标准配色系统，使用设计方案中的标准色值",
        "focus_area": "仅聚焦截图内纯前端自定义展示内容",
        "filter_system_elements": "自动过滤系统状态栏和微信小程序标题栏",
        "dual_goal": "功能理解 + 视觉还原",
        "unit_standard": "尺寸以rpx为单位",
        "unit_requirement": "必须使用rpx作为尺寸单位，严禁使用px、rem、em等其他单位",
        "document_location": "必须在docs/NiceEasyAI目录下创建文档",
        "multi_screenshot_support": "支持多张截图分析",
        "css_framework": "必须使用 Tailwind CSS 处理样式",
        "icon_library": "必须使用 FontAwesome 增强视觉效果",
        "design_standards": "必须贴近真实 iOS 设计规范",
        "image_source": "必须使用真实 picsum.photos 图片而非占位符",
        "document_naming": "文档文件名必须使用中文命名",
        "section_naming": "文档内所有标题章节必须使用中文",
        "document_creation_restriction": "🚫 严禁创建多余文档，只能创建一个UI复刻文档",
        "complex_task_thinking": "复杂任务使用MCP Sequential thinking工具深度思考",
        "network_query": "支持联网查询获取最新信息",
        "project_context_required": "必须收集项目整体介绍和页面定位信息",
        "component_design_focus": "重点关注组件化设计和复用性分析",
        "json_format_required": "项目信息必须以JSON格式提供",
        "config_file_suggestion": "建议创建project-config.json文件保存项目配置"
      },
      "output_structure": {
        "document_naming_pattern": "UI复刻-页面中文名-页面英文名.md",
        "document_sections": [
          "页面命名规范（中文名与英文名）",
          "页面定位与功能分析",
          "项目整体介绍",
          "项目规模与模块结构",
          "视觉设计方案引用与对照",
          "页面分区布局解析",
          "元素组详细描述",
          "色彩与样式还原（基于设计方案标准）",
          "组件化设计建议",
          "交互逻辑标注",
          "Tailwind CSS 实现方案",
          "FontAwesome 图标建议",
          "picsum.photos 图片资源"
        ],
        "analysis_principles": [
          "功能理解优先",
          "视觉还原精确",
          "设计方案一致性",
          "逻辑关联性强",
          "开发友好输出"
        ],
        "visual_design_scheme_integration": {
          "scheme_file_requirement": "必须要求用户提供视觉统一设计方案.md文件路径",
          "color_system_mapping": "将截图颜色映射到设计方案的标准配色系统",
          "component_standards": "按照设计方案中的组件库规范进行UI复刻",
          "spacing_compliance": "严格遵循设计方案中的间距和数值规范",
          "typography_consistency": "确保字体使用符合设计方案的排版规范",
          "design_consistency_check": "对照设计方案检查UI复刻的一致性"
        },
        "page_naming_requirements": {
          "chinese_name": "页面的中文描述名称，如：商品详情页、用户登录页、订单列表页",
          "english_name": "适用于代码文件名的英文名称，如：product-detail、user-login、order-list",
          "naming_rules": [
            "中文名：简洁明确，体现页面核心功能",
            "英文名：小写字母，单词间用连字符分隔，符合文件命名规范",
            "英文名避免使用特殊字符，确保跨平台兼容性"
          ]
        },
        "component_design_guidelines": {
          "identification_criteria": [
            "重复出现的UI模块（如商品卡片、用户头像、按钮样式）",
            "具有独立功能的区域（如搜索栏、导航栏、底部操作栏）",
            "可能在其他页面复用的元素（如弹窗、提示框、加载状态）"
          ],
          "naming_conventions": [
            "组件名称使用PascalCase命名，如：ProductCard、UserAvatar、SearchBar",
            "组件文件名使用kebab-case，如：product-card.vue、user-avatar.vue",
            "组件目录按功能分类：common（通用）、business（业务）、layout（布局）"
          ],
          "reusability_assessment": [
            "评估组件在当前项目中的复用频率",
            "分析组件的可配置性和扩展性",
            "考虑组件的维护成本和开发效率提升"
          ],
          "component_examples": [
            "头部导航：HeaderNav - 包含标题、返回按钮、右侧操作",
            "商品卡片：ProductCard - 图片、标题、价格、操作按钮",
            "底部操作栏：BottomAction - 固定底部的主要操作按钮",
            "加载状态：LoadingState - 统一的加载动画和文案",
            "空状态页：EmptyState - 无数据时的占位内容"
          ]
        },
        "project_config_template": {
          "file_name": "project-config.json",
          "description": "项目配置文件模板，建议在项目根目录创建此文件",
          "template": {
            "projectInfo": {
              "name": "项目名称",
              "type": "小程序类型（电商/社交/工具/教育/娱乐等）",
              "description": "项目主要功能和特色的详细描述",
              "targetUsers": "目标用户群体描述",
              "coreFeatures": ["核心功能1", "核心功能2", "核心功能3"]
            },
            "projectScale": {
              "totalPages": "总页面数量（数字）",
              "modules": [
                {
                  "name": "模块名称",
                  "pageCount": "该模块页面数量",
                  "description": "模块功能描述",
                  "pages": ["页面1", "页面2", "页面3"]
                }
              ]
            }
          },
          "usage_benefits": [
            "一次配置，多次复用：复刻其他页面时直接复制JSON内容",
            "信息标准化：确保项目信息的一致性和完整性",
            "团队协作：团队成员可共享同一份项目配置",
            "版本管理：配置文件可纳入版本控制，跟踪项目演进"
          ],
          "example": {
            "projectInfo": {
              "name": "美食外卖小程序",
              "type": "电商",
              "description": "为用户提供便捷的在线点餐服务，支持多商家入驻，实时配送跟踪",
              "targetUsers": "18-45岁的上班族和学生群体",
              "coreFeatures": ["商家浏览", "在线点餐", "支付结算", "配送跟踪", "用户评价"]
            },
            "projectScale": {
              "totalPages": 15,
              "modules": [
                {
                  "name": "首页模块",
                  "pageCount": 3,
                  "description": "首页展示、搜索、分类浏览",
                  "pages": ["首页", "搜索页", "分类页"]
                },
                {
                  "name": "商家模块",
                  "pageCount": 4,
                  "description": "商家详情、菜品展示、购物车",
                  "pages": ["商家列表", "商家详情", "菜品详情", "购物车"]
                },
                {
                  "name": "订单模块",
                  "pageCount": 4,
                  "description": "下单、支付、订单管理",
                  "pages": ["确认订单", "支付页面", "订单列表", "订单详情"]
                },
                {
                  "name": "用户模块",
                  "pageCount": 4,
                  "description": "用户中心、个人信息管理",
                  "pages": ["个人中心", "个人信息", "地址管理", "设置页面"]
                }
              ]
            }
          }
        },
        "picsum_usage_guide": {
          "basic_usage": "https://picsum.photos/宽度/高度 - 获取随机图像",
          "square_image": "https://picsum.photos/尺寸 - 获取方形图像",
          "specific_image": "https://picsum.photos/id/图片ID/宽度/高度 - 获取特定图像",
          "seeded_image": "https://picsum.photos/seed/种子值/宽度/高度 - 获取固定随机图像",
          "grayscale": "在URL末尾添加?grayscale - 获取灰度图像",
          "blur": "在URL末尾添加?blur或?blur=1-10 - 获取模糊图像",
          "advanced_usage": "可组合多个选项，如: https://picsum.photos/id/870/200/300?grayscale&blur=2",
          "prevent_cache": "添加?random=数字 防止缓存，获取多个不同图像",
          "file_formats": "支持.jpg和.webp格式，如: https://picsum.photos/200/300.webp",
          "examples": [
            "头像图片: https://picsum.photos/100/100",
            "商品图片: https://picsum.photos/300/200",
            "轮播图: https://picsum.photos/750/400",
            "背景图: https://picsum.photos/1200/800",
            "缩略图: https://picsum.photos/150/150"
          ]
        }
      }
    },
    "uibase": {
      "description": "视觉设计系统配色方案选择，生成统一的视觉设计规范文档",
      "commands": [
        "【强制要求】全程必须使用中文对话，禁止使用英文回复",
        "【强制要求】首先阅读并严格遵守.QuickAction.json中global_settings的所有配置要求",
        "【第一阶段：设计资源分析】",
        "1. 查看NiceEasyAI/视觉设计系统目录下的所有文件",
        "2. 分析现有的配色方案、设计组件和视觉资源",
        "3. 识别可用的配色选项和设计元素",
        "4. 【复杂任务思考】如果任务复杂度较高，使用MCP Sequential thinking工具进行深度思考分析",
        "5. 【联网查询】如果需要最新信息或解决方案，进行联网查询获取最新资料",
        "【第二阶段：配色方案展示】",
        "6. 向用户展示所有可选的配色方案",
        "7. 详细说明每个配色方案的特点和适用场景",
        "8. 等待用户选择配色方案",
        "【第三阶段：设计规范生成】",
        "9. 根据用户选择的配色方案生成完整的视觉设计规范",
        "10. 检查docs/NiceEasyAI目录是否存在，如不存在则自动创建",
        "11. 【强制中文命名】文档文件名必须使用中文命名：视觉统一设计方案.md",
        "12. 【强制中文标题】文档内所有标题、章节名称必须使用中文",
        "13. 【严禁多余文档】🚫 严禁创建任何其他多余文档，包括但不限于：",
        "    - 不得创建README.md、说明文档、介绍文档等额外文档",
        "    - 不得创建配置文档、部署文档、使用手册等衍生文档",
        "    - 不得创建示例文档、测试文档、API文档等补充文档",
        "    - 只能创建一个视觉统一设计方案.md文档",
        "14. 生成视觉统一设计方案.md文档并保存到docs/NiceEasyAI目录",
        "15. 文档必须包含：配色系统、图标系统引用规范、组件库引用规范、基础数值与间距、字体与排版规范"
      ],
      "requiresInput": true,
      "inputPrompt": "请查看以下配色方案选项，选择您希望使用的配色方案编号：",
      "workflow": "visual_design_system_generation",
      "constraints": {
        "language": "中文强制要求",
        "document_location": "必须保存到docs/NiceEasyAI目录",
        "document_naming": "文档文件名必须使用中文命名：视觉统一设计方案.md",
        "section_naming": "文档内所有标题章节必须使用中文",
        "content_requirements": "必须包含配色、图标系统、组件库、数值间距、字体排版五个部分",
        "resource_analysis": "必须分析NiceEasyAI/视觉设计系统目录下的所有文件",
        "user_selection_required": "必须让用户选择配色方案",
        "document_creation_restriction": "🚫 严禁创建多余文档，只能创建一个视觉统一设计方案.md文档",
        "complex_task_thinking": "复杂任务使用MCP Sequential thinking工具深度思考",
        "network_query": "支持联网查询获取最新信息",
        "directory_management": "必须检查并创建docs/NiceEasyAI目录"
      },
      "output_structure": {
        "document_naming_pattern": "视觉统一设计方案.md",
        "document_sections": [
          "配色系统规范",
          "图标系统引用规范",
          "组件库引用规范",
          "基础数值与间距规范",
          "字体与排版规范"
        ],
        "color_scheme_analysis": {
          "scheme_identification": "识别NiceEasyAI/视觉设计系统目录中的所有配色方案",
          "scheme_presentation": "向用户展示配色方案选项和特点说明",
          "user_selection": "等待用户选择具体的配色方案"
        },
        "design_system_components": [
          "主色调与辅助色彩定义",
          "图标库引用方式和使用规范",
          "UI组件库的标准化引用",
          "间距、圆角、阴影等基础数值",
          "字体族、字号、行高等排版规范"
        ],
        "visual_design_guidelines": {
          "color_system": "基于选择的配色方案生成完整色彩体系",
          "icon_standards": "图标使用规范和引用方式",
          "component_library": "组件库标准化使用指南",
          "spacing_system": "间距、边距、圆角等数值规范",
          "typography_system": "字体、字号、行高、字重等排版规范"
        }
      },
      "validation_rules": {
        "document_must_have_chinese_filename": true,
        "all_headings_must_be_chinese": true,
        "must_analyze_visual_design_directory": true,
        "must_present_color_scheme_options": true,
        "must_wait_for_user_selection": true,
        "must_include_five_design_sections": true,
        "must_not_create_extra_documents": true,
        "only_one_design_document_allowed": true,
        "must_check_and_create_docs_directory": true,
        "document_location_must_be_docs_niceeasyai": true,
        "must_use_mcp_tools_when_appropriate": true,
        "must_support_network_queries": true
      }
    },
    "pbase": {
      "description": "项目配置文件生成器，智能分析用户需求并生成标准的project-config.json文件",
      "commands": [
        "【强制要求】全程必须使用中文对话，禁止使用英文回复",
        "【强制要求】首先阅读并严格遵守.QuickAction.json中global_settings的所有配置要求",
        "【强制要求】必须严格遵循最小可行性产品，MVP的思想，作为强制约束贯穿整个分析过程",
        "【第一阶段：用户体验分析】",
        "1. 先分析这个 App 的主要功能和用户需求，确定核心交互逻辑",
        "2. 识别目标用户群体的使用场景和痛点",
        "3. 分析用户使用流程和关键触点",
        "4. 确定核心用户价值和产品定位",
        "【第二阶段：产品界面规划】",
        "5. 作为产品经理，定义所有关键界面，遵循最小可行性产品，MVP的思想，确保信息架构合理",
        "6. 规划主要功能模块和页面层级结构",
        "7. 设计用户操作路径和页面跳转逻辑",
        "8. 确定核心功能优先级和开发阶段划分",
        "【第三阶段：需求理解与分析】",
        "9. 深度理解用户提供的项目描述或需求",
        "10. 【复杂任务思考】如果项目复杂度较高，使用MCP Sequential thinking工具进行深度思考分析",
        "11. 【联网查询】如果需要了解行业标准或最新趋势，进行联网查询获取参考信息",
        "12. 分析项目所属行业和类型特征",
        "13. 识别项目的核心业务逻辑和用户场景",
        "【第四阶段：智能信息生成】",
        "14. 基于理解自动生成项目基本信息：",
        "   - 智能提炼项目名称（如用户未明确提供）",
        "   - 准确判断项目类型（电商/社交/工具/教育/娱乐等）",
        "   - 生成完整的项目功能和特色描述",
        "15. 智能分析并生成目标用户群体：",
        "   - 基于项目特性分析主要用户画像",
        "   - 确定用户年龄段、职业特征、使用场景",
        "16. 智能提取并生成核心功能列表：",
        "   - 识别项目的主要功能模块",
        "   - 按重要性排序核心功能",
        "   - 确保功能描述准确且完整",
        "【第五阶段：项目规模智能评估】",
        "17. 基于项目复杂度智能评估总页面数量：",
        "   - 一般项目：2-6个页面",
        "   - 复杂项目：6-10个页面",
        "   - 超复杂项目：10-15个页面",
        "18. 智能划分功能模块：",
        "    - 根据业务逻辑自动识别主要模块",
        "    - 为每个模块分配合理的页面数量",
        "    - 生成模块功能描述和页面列表",
        "19. 【页面层级结构分析】智能分析并分类页面层级：",
        "    - 一级页面：应用主要入口页面，包含底部导航栏，用户可直接访问",
        "    - 非一级页面：从一级页面进入的子页面，包含返回按钮，专注特定功能",
        "    - 根据项目类型和业务逻辑合理分配一级页面数量（通常2-3个）",
        "    - 为每个一级页面规划对应的非一级页面",
        "【第六阶段：配置展示与确认】",
        "19. 生成完整的project-config.json配置内容",
        "20. 向用户展示智能生成的配置，包括：",
        "    - 项目基本信息分析结果",
        "    - 目标用户群体分析",
        "    - 核心功能提取结果",
        "    - 项目规模评估和模块划分",
        "21. 询问用户：'这个配置怎么样？'",
        "22. 支持用户提出修改意见，进行配置调整",
        "23. 用户确认满意后，在项目根目录创建project-config.json文件",
        "24. 提供配置文件的使用说明和后续复用建议"
      ],
      "requiresInput": true,
      "inputPrompt": "请描述您的项目需求或想法，我将智能分析并生成完整的project-config.json配置：",
      "workflow": "intelligent_project_config_generation",
      "constraints": {
        "language": "中文强制要求",
        "file_location": "必须保存到项目根目录",
        "file_naming": "文件名必须为project-config.json",
        "json_structure": "必须严格按照project_config_template结构",
        "intelligent_analysis": "必须基于用户需求进行智能分析，而非简单询问",
        "user_confirmation": "生成配置后必须询问用户意见并支持修改",
        "usage_guidance": "必须提供使用说明和复用建议",
        "complex_task_thinking": "复杂项目使用MCP Sequential thinking工具深度分析",
        "network_query": "支持联网查询获取行业参考信息"
      },
      "output_structure": {
        "file_naming_pattern": "project-config.json",
        "file_location": "项目根目录",
        "json_structure": {
          "projectInfo": {
            "name": "智能生成的项目名称",
            "type": "智能判断的项目类型",
            "description": "智能生成的项目描述",
            "targetUsers": "智能分析的目标用户",
            "coreFeatures": ["智能提取的核心功能数组"]
          },
          "projectScale": {
            "totalPages": "智能评估的总页面数",
            "modules": [
              {
                "name": "智能划分的模块名称",
                "pageCount": "智能分配的页面数量",
                "description": "智能生成的模块描述",
                "pages": ["智能生成的页面列表"]
              }
            ]
          },
          "pageHierarchy": {
            "firstLevelPages": "一级页面列表（主要入口页面，通常包含底部导航栏）",
            "nonFirstLevelPages": "非一级页面列表（子页面、详情页、功能页等，通常包含返回按钮）"
          }
        },
        "page_classification_rules": {
          "first_level_pages": {
            "definition": "应用的主要入口页面，用户可以直接从底部导航栏访问",
            "characteristics": [
              "包含底部导航栏（nav-bar）",
              "不包含返回按钮",
              "通常是各个功能模块的主入口",
              "用户可以在这些页面之间自由切换"
            ],
            "common_examples": [
              "首页/主页",
              "分类/发现页",
              "购物车/工具页",
              "个人中心/我的页面"
            ]
          },
          "non_first_level_pages": {
            "definition": "从一级页面进入的子页面，通常用于展示详细信息或执行特定功能",
            "characteristics": [
              "包含返回按钮或返回导航",
              "不包含底部导航栏",
              "通常从一级页面跳转而来",
              "专注于特定功能或信息展示"
            ],
            "common_examples": [
              "商品详情页",
              "用户资料编辑页",
              "设置页面",
              "搜索结果页",
              "订单详情页",
              "支付页面",
              "表单填写页"
            ]
          }
        },
        "analysis_process": [
          "需求理解与项目分析",
          "智能信息生成与用户画像分析",
          "项目规模评估与模块划分",
          "页面层级结构分析与分类",
          "配置展示与用户确认"
        ],
        "intelligence_features": [
          "自动项目类型识别",
          "智能用户群体分析",
          "核心功能自动提取",
          "项目规模智能评估",
          "模块划分自动生成",
          "页面层级智能分类"
        ]
      },
      "validation_rules": {
        "must_use_chinese_language": true,
        "must_save_to_root_directory": true,
        "must_follow_template_structure": true,
        "must_perform_intelligent_analysis": true,
        "must_generate_complete_information": true,
        "must_analyze_page_hierarchy": true,
        "must_classify_first_level_pages": true,
        "must_classify_non_first_level_pages": true,
        "must_ask_user_opinion": true,
        "must_support_modifications": true,
        "must_provide_usage_guidance": true,
        "file_must_be_valid_json": true,
        "must_include_all_required_fields": true,
        "must_use_mcp_tools_when_appropriate": true,
        "must_support_network_queries": true
      }
    },
    "db": {
      "description": "数据库设计器，智能分析项目需求并生成完整的数据库设计方案",
      "commands": [
        "【强制要求】全程必须使用中文对话，禁止使用英文回复",
        "【强制要求】首先阅读并严格遵守.QuickAction.json中global_settings的所有配置要求",
        "【第一阶段：需求分析与数据库选型】",
        "1. 深度分析用户提供的项目需求或spec文档",
        "2. 询问用户项目使用的数据库类型：",
        "   - MySQL（关系型，适合传统Web应用）",
        "   - PostgreSQL（功能强大的开源关系型数据库）",
        "   - MongoDB（文档型NoSQL，适合灵活数据结构）",
        "   - SQLite（轻量级嵌入式数据库）",
        "   - 其他（用户自定义数据库类型）",
        "3. 【复杂任务思考】如果项目复杂度较高，使用MCP Sequential thinking工具进行深度思考分析",
        "4. 【联网查询】如果需要了解特定数据库的设计最佳实践，进行联网查询获取参考信息",
        "5. 智能识别项目中的数据实体和业务对象",
        "6. 分析实体间的关系（一对一、一对多、多对多）",
        "7. 确定核心业务流程和数据流向",
        "【第二阶段：数据库表结构设计】",
        "8. 基于选择的数据库类型设计表结构：",
        "   - 关系型数据库：标准表结构、字段类型、约束条件",
        "   - MongoDB：集合结构、文档模式、索引设计",
        "   - 其他数据库：对应的数据结构设计",
        "9. 设计内容包括：",
        "   - 表名/集合名命名规范",
        "   - 字段定义（类型、长度、约束、默认值）",
        "   - 主键和外键设计（关系型数据库）",
        "   - 索引优化建议",
        "   - 数据完整性约束",
        "10. 生成对应数据库的DDL语句和初始化脚本",
        "【第三阶段：API接口设计】",
        "11. 基于数据模型和数据库类型设计API接口：",
        "    - CRUD操作接口定义",
        "    - 请求参数和响应格式",
        "    - 接口路径和HTTP方法",
        "    - 数据验证规则",
        "    - 错误处理和状态码",
        "12. 针对不同数据库类型优化API设计",
        "13. 生成API文档和接口测试用例",
        "【第四阶段：数据模型可视化】",
        "14. 根据数据库类型使用Mermaid生成相应的图表：",
        "    - 关系型数据库：ER图展示实体关系",
        "    - MongoDB：文档结构图和集合关系",
        "    - 数据流向图和系统架构图",
        "15. 【Mermaid图表规范】确保图表：",
        "    - 使用中文标签和注释",
        "    - 清晰展示数据结构和关系",
        "    - 适当使用颜色区分不同类型",
        "【第五阶段：文档生成与优化建议】",
        "16. 检查docs/NiceEasyAI目录是否存在，如不存在则自动创建",
        "17. 【强制中文命名】文档文件名必须使用中文命名：数据库设计方案.md",
        "18. 【强制中文标题】文档内所有标题、章节名称必须使用中文",
        "19. 【严禁多余文档】🚫 严禁创建任何其他多余文档，只能创建一个数据库设计方案文档",
        "20. 生成完整的数据库设计文档，包括：",
        "    - 数据库概述与选型说明",
        "    - 数据实体分析",
        "    - 表结构/集合结构详细设计",
        "    - API接口设计规范",
        "    - 数据模型关系图",
        "    - 针对所选数据库的性能优化建议",
        "    - 数据安全和备份策略",
        "21. 提供特定数据库的部署和维护建议"
      ],
      "requiresInput": true,
      "inputPrompt": "请提供以下信息：\n\n## 1. 项目需求描述或spec文档路径\n请描述项目需求或提供现有的spec文档路径\n\n## 2. 数据库类型选择（必选）\n请选择项目使用的数据库类型：\n- **MySQL** - 关系型数据库，适合传统Web应用\n- **PostgreSQL** - 功能强大的开源关系型数据库\n- **MongoDB** - 文档型NoSQL数据库，适合灵活数据结构\n- **SQLite** - 轻量级嵌入式数据库，适合小型应用\n- **其他** - 请指定具体的数据库类型\n\n请明确告知您选择的数据库类型，我将据此生成对应的数据库设计方案。",
      "workflow": "intelligent_database_design",
      "constraints": {
        "language": "中文强制要求",
        "database_type_required": "必须要求用户明确选择数据库类型",
        "database_specific_design": "必须根据选择的数据库类型生成对应的设计方案",
        "document_location": "必须保存到docs/NiceEasyAI目录",
        "document_naming": "文档文件名必须使用中文命名：数据库设计方案.md",
        "section_naming": "文档内所有标题章节必须使用中文",
        "intelligent_analysis": "必须基于需求进行智能数据建模分析",
        "api_design_integration": "必须包含完整的API接口设计",
        "mermaid_visualization": "必须使用Mermaid图表展示数据模型关系",
        "document_creation_restriction": "🚫 严禁创建多余文档，只能创建一个数据库设计方案文档",
        "complex_task_thinking": "复杂项目使用MCP Sequential thinking工具深度分析",
        "network_query": "支持联网查询获取数据库设计最佳实践",
        "performance_optimization": "必须提供针对所选数据库的性能优化建议",
        "security_considerations": "必须包含数据安全和权限设计"
      },
      "output_structure": {
        "document_naming_pattern": "数据库设计方案.md",
        "document_sections": [
          "数据库概述与选型说明",
          "数据实体分析",
          "表结构/集合结构详细设计",
          "API接口设计规范",
          "数据模型关系图（Mermaid图表）",
          "索引优化策略",
          "数据安全与权限设计",
          "性能优化建议",
          "部署与维护指南"
        ],
        "database_design_components": {
          "database_selection": "用户选择的数据库类型和选型理由",
          "entity_analysis": "智能识别业务实体和数据对象",
          "structure_design": "针对特定数据库的结构设计",
          "relationship_design": "数据关系分析和设计",
          "api_specification": "RESTful API接口完整规范",
          "visualization": "适合数据库类型的Mermaid图表",
          "optimization": "特定数据库的优化策略"
        },
        "database_type_specifications": {
          "MySQL": "关系型表结构、SQL语句、索引优化",
          "PostgreSQL": "高级特性利用、JSON支持、全文搜索",
          "MongoDB": "集合设计、文档模式、聚合管道",
          "SQLite": "轻量化设计、嵌入式优化、文件管理",
          "其他": "根据用户指定的数据库类型定制设计"
        },
        "mermaid_requirements": {
          "supported_types": ["erDiagram", "graph", "flowchart"],
          "language": "中文标签和注释",
          "content": "根据数据库类型展示相应的数据结构",
          "styling": "使用颜色区分不同实体类型"
        }
      },
      "validation_rules": {
        "document_must_have_chinese_filename": true,
        "all_headings_must_be_chinese": true,
        "must_require_database_type_selection": true,
        "must_analyze_data_entities": true,
        "must_design_database_specific_structures": true,
        "must_include_api_design": true,
        "must_generate_mermaid_diagrams": true,
        "must_provide_database_specific_optimization": true,
        "must_not_create_extra_documents": true,
        "only_one_database_design_document_allowed": true,
        "must_check_and_create_docs_directory": true,
        "must_use_mcp_tools_when_appropriate": true,
        "must_support_network_queries": true,
        "must_include_security_considerations": true
      }
    },
    "hbase": {
      "description": "HTML原型生成器，基于project-config.json配置生成纯手机界面的高保真HTML原型，专注于真实预览体验",
      "commands": [
        "【强制要求】全程必须使用中文对话，禁止使用英文回复",
        "【强制要求】首先阅读并严格遵守.QuickAction.json中global_settings的所有配置要求",
        "【第一阶段：项目配置解析】",
        "1. 读取用户提供的project-config.json配置文件内容",
        "2. 【视觉设计方案引用】读取用户提供的视觉统一设计方案.md文件路径",
        "3. 分析视觉设计方案中的配色系统、图标规范、组件库规范、间距规范、字体规范",
        "4. 将设计方案作为原型图的标准参考，确保视觉一致性",
        "5. 解析项目基本信息（项目名称、类型、描述、目标用户、核心功能）",
        "6. 解析项目规模信息（总页面数、功能模块、页面列表）",
        "7. 分析项目类型特征，确定UI设计风格和交互模式",
        "8. 【复杂任务思考】如果项目复杂度较高，使用MCP Sequential thinking工具进行深度思考分析",
        "【第二阶段：原型架构设计】",
        "6. 根据项目配置规划HTML文件夹结构",
        "7. 设计组件系统架构（系统状态栏、底部导航栏、返回按钮、页面标题区域）",
        "8. 规划页面层级关系（一级页面vs非一级页面）",
        "9. 确定页面滚动属性和展开模式策略",
        "10. 设计响应式布局方案（3-2-1列自适应）",
        "【第三阶段：高保真UI设计】",
        "11. 作为UI设计师，设计贴近真实iOS设计规范的界面",
        "12. 使用现代化的UI元素，确保良好的视觉体验",
        "13. 基于项目类型选择合适的配色方案和视觉风格",
        "14. 设计符合用户群体特征的界面布局",
        "15. 确保界面设计符合核心功能需求",
        "【第四阶段：HTML原型实现】",
        "16. 创建专门的HTML文件夹存放所有原型文件",
        "17. 使用HTML + Tailwind CSS生成所有原型界面",
        "18. 使用FontAwesome增强界面视觉效果",
        "19. 创建标准组件系统：",
        "    - components/status-bar.html（系统状态栏）",
        "    - components/bottom-nav.html（底部导航栏）",
        "    - components/back-button.html（返回按钮）",
        "    - components/page-title.html（页面标题区域）",
        "20. 为每个页面创建独立的HTML文件",
        "21. 【强制组件复用约束】每个界面独立的HTML文件使用组件时，必须通过引入的方式，而不是重写一遍。所有组件应创建为独立的HTML文件，各页面通过JavaScript fetch()方式引入，严禁使用iframe方式",
        "【第五阶段：主入口页面设计】",
        "22. 创建index.html作为主入口页面",
        "23. 【强制约束】主入口仅包含：项目标题、副标题、模式切换按钮、纯手机界面平铺展示",
        "24. 【严禁内容】不得包含功能介绍、导航菜单、页面跳转链接、统计信息、版权信息等",
        "25. 【纯手机界面约束】严禁使用带标题的卡片容器，直接展示手机界面",
        "26. 【容器禁用】严禁使用.page-card、.page-header等外层容器包装手机界面",
        "27. 实现模式切换功能（正常模式/展开模式）",
        "28. 实现响应式布局（宽屏3列、中等2列、窄屏1列）",
        "29. 使用iframe方式嵌入所有页面，实现纯手机界面平铺展示",
        "30. 【纯手机界面实现】使用单一.mobile-viewport容器，严禁双层嵌套和外层包装",
        "31. 【布局结构】唯一的grid-container包含所有mobile-viewport，不是每个手机框都有独立的grid-container",
        "【第六阶段：真实感增强】",
        "32. 界面尺寸模拟iPhone 13 Pro，添加圆角效果",
        "33. 使用真实picsum.photos图片，提供具体URL",
        "34. 添加iOS风格的系统状态栏和导航栏",
        "35. 确保所有交互元素具有清晰的视觉反馈",
        "36. 【真实iOS状态栏】使用透明或半透明背景，根据下方内容自动调整文字颜色",
        "37. 【隐藏滚动条】页面滚动条必须隐藏，使用-webkit-scrollbar:none和scrollbar-width:none",
        "38. 【原生导航栏】使用半透明背景和backdrop-filter模糊效果，与内容自然融合",
        "39. 【组件引入方式】严禁使用iframe引入组件，必须使用JavaScript fetch()方式",
        "40. 【单一滚动区域】整个页面只能有一个滚动区域，状态栏和导航栏必须固定",
        "【第七阶段：页面属性规范实现】",
        "32. 一级页面：引入系统状态栏+底部导航栏，不引入返回按钮",
        "33. 非一级页面：引入系统状态栏+返回按钮，不引入底部导航栏",
        "34. 根据内容长度设置页面滚动属性",
        "35. 实现展开模式下的特殊处理逻辑",
        "【第八阶段：文件输出与优化】",
        "36. 【强制位置】在项目根目录创建HTML原型文件夹",
        "37. 【强制中文命名】文件夹命名格式：项目名称-HTML原型设计",
        "38. 生成完整的HTML文件夹结构，包含所有组件和页面文件",
        "39. 【严禁多余内容】🚫 严禁创建任何多余文件，包括但不限于：",
        "    - 不得创建README.md、说明文档、介绍文档等额外文档",
        "    - 不得创建配置文档、部署文档、使用手册等衍生文档",
        "    - 不得创建示例文档、测试文档、API文档等补充文档",
        "    - 不得创建页面跳转逻辑文件或导航配置文件",
        "    - 只能创建必要的HTML文件、组件文件和基础资源文件",
        "40. 确保所有文件遵循组件复用约束，严禁重复代码"
      ],
      "requiresInput": true,
      "inputPrompt": "请提供以下信息：\n\n## 1. 视觉统一设计方案路径（必填）\n💡 请提供视觉统一设计方案.md文件的相对路径，例如：docs/NiceEasyAI/视觉统一设计方案.md\n- **设计方案路径**：\n\n## 2. 项目配置文件内容（必填）\n💡 请提供project-config.json配置文件内容，我将基于此配置和视觉设计方案生成纯手机界面的HTML原型，专注于真实预览体验：",
      "workflow": "html_prototype_generation",
      "constraints": {
        "language": "中文强制要求",
        "visual_design_scheme_required": "必须要求用户提供视觉统一设计方案.md文件路径",
        "design_scheme_compliance": "必须严格按照视觉设计方案中的配色、字体、间距、组件规范进行原型设计",
        "config_file_required": "必须提供project-config.json配置文件",
        "ios_design_standards": "必须贴近真实iOS设计规范",
        "realistic_status_bar": "【真实状态栏约束】状态栏必须使用透明或半透明背景，根据内容自动调整文字颜色",
        "hidden_scrollbars": "【隐藏滚动条约束】页面滚动条必须隐藏，仅在滚动时短暂显示",
        "native_navigation": "【原生导航约束】导航栏必须使用半透明背景，与内容自然融合",
        "iframe_prohibition": "【严禁iframe组件】iframe会产生独立滚动条，完全破坏真实手机体验",
        "fetch_component_loading": "【强制fetch加载】组件必须通过JavaScript fetch()方式加载HTML内容",
        "single_scroll_area": "【单一滚动区域】整个页面只能有一个滚动区域，状态栏和导航栏必须固定",
        "component_reuse": "【强制组件复用约束】每个界面独立的HTML文件使用组件时，必须通过引入的方式，而不是重写一遍。所有组件应创建为独立的HTML文件，各页面通过JavaScript fetch()方式引入，确保组件的复用性和维护性",
        "pure_mobile_interface": "【纯手机界面约束】严禁使用带标题的卡片容器，必须直接展示手机界面",
        "container_prohibition": "【容器禁用】严禁使用.page-card、.page-header、.phone-frame、.phone-screen等多层装饰容器",
        "single_container_requirement": "【单容器约束】只使用一个.mobile-viewport容器，直接设置iPhone尺寸和圆角",
        "grid_container_clarification": "【重要澄清】整个页面只有一个grid-container，所有手机框都是它的子元素",
        "clean_display_mode": "【简洁展示模式】专注于真实手机界面预览体验，去除所有非必要的装饰元素",
        "index_content_restriction": "主入口严禁包含多余内容元素",
        "responsive_layout": "必须实现3-2-1列响应式布局",
        "mode_switching": "必须实现正常模式/展开模式切换",
        "real_images": "必须使用真实picsum.photos图片",
        "css_framework": "必须使用Tailwind CSS",
        "icon_library": "必须使用FontAwesome",
        "iphone_simulation": "必须模拟iPhone 13 Pro尺寸和圆角",
        "page_hierarchy": "必须区分一级页面和非一级页面",
        "scroll_properties": "必须根据内容设置滚动属性",
        "complex_task_thinking": "复杂项目使用MCP Sequential thinking工具深度分析",
        "output_location": "必须在项目根目录创建HTML原型文件夹",
        "folder_naming": "【强制中文命名】文件夹命名格式：项目名称-HTML原型设计",
        "no_extra_files": "🚫 严禁创建多余文件，只能创建必要的HTML文件、组件文件和基础资源文件",
        "no_navigation_logic": "严禁创建页面跳转逻辑文件或导航配置文件"
      },
      "output_structure": {
        "folder_structure": {
          "root_folder": "项目名称-HTML原型设计/",
          "location": "项目根目录",
          "main_entry": "index.html",
          "components_folder": "components/",
          "pages_folder": "pages/",
          "assets_folder": "assets/",
          "naming_requirements": {
            "folder_name": "【强制中文命名】项目名称-HTML原型设计",
            "location_requirement": "必须在项目根目录创建",
            "prohibited_files": "严禁创建README.md、说明文档、配置文档、跳转逻辑文件等多余文件"
          },
          "display_structure": {
            "overall_layout": "唯一的grid-container包含所有手机框，实现响应式平铺展示",
            "correct_structure": "grid-container > [mobile-viewport1, mobile-viewport2, mobile-viewport3, ...]",
            "structure_example": "grid-container ← 唯一网格容器\n├── mobile-viewport (邀约首页)\n├── mobile-viewport (押金管理)\n├── mobile-viewport (个人中心)\n└── mobile-viewport (更多页面...)",
            "important_clarification": "【重要】不是每个手机框都有独立的grid-container，而是所有手机框共享一个grid-container",
            "single_container": "每个手机框使用单一mobile-viewport容器，设置iPhone尺寸和圆角",
            "prohibited_wrappers": "严禁使用page-card、page-header、phone-frame、phone-screen等多层容器",
            "clean_presentation": "专注于手机界面本身，无额外装饰元素和物理边框模拟"
          }
        },
        "component_files": [
          "components/status-bar.html - 【必须透明/半透明背景】",
          "components/bottom-nav.html - 【必须毛玻璃效果】",
          "components/back-button.html - 【必须原生iOS样式】",
          "components/page-title.html - 【必须半透明导航栏】"
        ],
        "component_style_requirements": {
          "status_bar": "使用rgba()和backdrop-filter实现透明效果，position: fixed固定在顶部",
          "navigation": "使用backdrop-filter: blur(20px)实现毛玻璃效果，position: fixed或sticky",
          "scrollbars": "所有页面必须隐藏滚动条，使用::-webkit-scrollbar: none",
          "transitions": "使用原生iOS动画曲线和时长",
          "layout_structure": "状态栏固定 + 导航栏固定 + 主内容区域滚动",
          "component_loading": "使用JavaScript fetch()加载组件HTML，严禁iframe"
        },
        "page_generation": {
          "naming_convention": "功能模块-页面名称.html",
          "page_types": ["一级页面", "非一级页面"],
          "scroll_types": ["滚动页面", "非滚动页面"]
        },
        "technical_requirements": {
          "css_framework": "Tailwind CSS",
          "icon_library": "FontAwesome",
          "image_source": "picsum.photos真实图片",
          "device_simulation": "iPhone 13 Pro",
          "responsive_breakpoints": "lg:3列, md:2列, sm:1列",
          "scrollbar_hiding": "使用-webkit-scrollbar:none和scrollbar-width:none隐藏滚动条",
          "status_bar_transparency": "使用rgba()或backdrop-filter实现透明/半透明效果",
          "navigation_blur": "使用backdrop-filter: blur()实现毛玻璃效果"
        },
        "interaction_features": [
          "模式切换功能",
          "响应式布局",
          "组件复用系统",
          "纯手机界面平铺展示",
          "iOS风格交互",
          "无装饰容器的简洁展示"
        ],
        "component_reuse_requirements": {
          "mandatory_constraint": "【强制组件复用约束】每个界面独立的HTML文件使用组件时，必须通过引入的方式，而不是重写一遍",
          "implementation_method": "【重要修正】组件必须通过JavaScript fetch()方式引入HTML内容，严禁使用iframe方式",
          "iframe_prohibition": "【严禁iframe】iframe会产生独立滚动条，完全不符合真实手机界面",
          "correct_method": "使用fetch()获取组件HTML内容，然后通过innerHTML插入到页面中",
          "purpose": "确保组件的复用性和维护性，同时保持真实的手机界面体验",
          "prohibited_actions": "严禁在页面中重写组件代码，严禁使用iframe引入组件"
        },
        "picsum_usage_guide": {
          "basic_usage": "https://picsum.photos/宽度/高度 - 获取随机图像",
          "square_image": "https://picsum.photos/尺寸 - 获取方形图像",
          "specific_image": "https://picsum.photos/id/图片ID/宽度/高度 - 获取特定图像",
          "seeded_image": "https://picsum.photos/seed/种子值/宽度/高度 - 获取固定随机图像",
          "grayscale": "在URL末尾添加?grayscale - 获取灰度图像",
          "blur": "在URL末尾添加?blur或?blur=1-10 - 获取模糊图像",
          "advanced_usage": "可组合多个选项，如: https://picsum.photos/id/870/200/300?grayscale&blur=2",
          "prevent_cache": "添加?random=数字 防止缓存，获取多个不同图像",
          "file_formats": "支持.jpg和.webp格式，如: https://picsum.photos/200/300.webp",
          "responsive_images": {
            "mobile_optimized": "移动端优化尺寸，如: https://picsum.photos/375/667 (iPhone标准尺寸)",
            "tablet_optimized": "平板端优化尺寸，如: https://picsum.photos/768/1024 (iPad标准尺寸)",
            "desktop_optimized": "桌面端优化尺寸，如: https://picsum.photos/1920/1080 (桌面标准尺寸)",
            "retina_support": "高清屏支持，使用2倍尺寸，如: https://picsum.photos/750/1334 (iPhone Retina)"
          },
          "ui_specific_sizes": {
            "avatar_sizes": {
              "small": "https://picsum.photos/32/32 - 小头像",
              "medium": "https://picsum.photos/64/64 - 中等头像",
              "large": "https://picsum.photos/128/128 - 大头像",
              "profile": "https://picsum.photos/200/200 - 个人资料头像"
            },
            "card_images": {
              "product_card": "https://picsum.photos/300/200 - 商品卡片图片",
              "news_card": "https://picsum.photos/350/200 - 新闻卡片图片",
              "blog_card": "https://picsum.photos/400/250 - 博客卡片图片"
            },
            "banner_images": {
              "hero_banner": "https://picsum.photos/1200/400 - 主横幅图片",
              "promotion_banner": "https://picsum.photos/800/300 - 促销横幅",
              "carousel_slide": "https://picsum.photos/750/400 - 轮播图片"
            },
            "background_images": {
              "section_bg": "https://picsum.photos/1920/600 - 区域背景",
              "page_bg": "https://picsum.photos/1920/1080 - 页面背景",
              "overlay_bg": "https://picsum.photos/1200/800?blur=2 - 模糊背景"
            }
          },
          "content_specific_images": {
            "food_images": "https://picsum.photos/id/96/300/200 - 美食图片",
            "nature_images": "https://picsum.photos/id/1015/400/300 - 自然风景",
            "architecture_images": "https://picsum.photos/id/1018/500/300 - 建筑图片",
            "people_images": "https://picsum.photos/id/1027/300/400 - 人物图片",
            "technology_images": "https://picsum.photos/id/180/400/250 - 科技图片",
            "business_images": "https://picsum.photos/id/7/350/200 - 商务图片"
          },
          "ios_realistic_css_guide": {
            "status_bar_styles": {
              "transparent_light": "background: rgba(255, 255, 255, 0.95); backdrop-filter: blur(20px); color: #000;",
              "transparent_dark": "background: rgba(0, 0, 0, 0.95); backdrop-filter: blur(20px); color: #fff;",
              "adaptive": "background: rgba(var(--bg-rgb), 0.95); backdrop-filter: blur(20px); color: var(--text-color);"
            },
            "scrollbar_hiding": {
              "webkit": "::-webkit-scrollbar { display: none; }",
              "firefox": "scrollbar-width: none;",
              "combined": "overflow-y: auto; -ms-overflow-style: none; scrollbar-width: none;"
            },
            "navigation_blur": {
              "standard": "background: rgba(255, 255, 255, 0.8); backdrop-filter: blur(20px);",
              "dark_mode": "background: rgba(28, 28, 30, 0.8); backdrop-filter: blur(20px);",
              "colored": "background: rgba(var(--nav-rgb), 0.8); backdrop-filter: blur(20px);"
            }
          },
          "component_loading_guide": {
            "fetch_method": "async function loadComponent(url, targetId) { const response = await fetch(url); const html = await response.text(); document.getElementById(targetId).innerHTML = html; }",
            "usage_example": "loadComponent('../components/status-bar.html', 'status-bar-container');",
            "page_structure": "页面结构：<div id='status-bar-container'></div> <div id='nav-container'></div> <div class='content-area'>主内容</div>",
            "prohibited": "严禁使用：<iframe src='../components/status-bar.html'></iframe>"
          },
          "optimization_tips": {
            "loading_performance": "使用适当尺寸避免过大图片影响加载速度",
            "cache_strategy": "使用seed参数确保相同内容使用相同图片",
            "fallback_handling": "建议设置图片加载失败的备用方案",
            "lazy_loading": "配合lazy loading技术优化页面性能"
          },
          "practical_examples": [
            "用户头像: https://picsum.photos/80/80",
            "商品缩略图: https://picsum.photos/150/150",
            "商品详情图: https://picsum.photos/400/400",
            "轮播主图: https://picsum.photos/750/400",
            "背景图片: https://picsum.photos/1200/800",
            "列表项图片: https://picsum.photos/60/60",
            "卡片封面: https://picsum.photos/300/200",
            "全屏背景: https://picsum.photos/1920/1080",
            "模糊背景: https://picsum.photos/800/600?blur=3",
            "灰度图片: https://picsum.photos/300/200?grayscale",
            "固定随机图: https://picsum.photos/seed/demo/400/300",
            "特定风格图: https://picsum.photos/id/237/300/200"
          ],
          "mobile_app_specific": {
            "splash_screen": "https://picsum.photos/375/812 - 启动页背景",
            "tab_icons": "https://picsum.photos/24/24 - 标签栏图标背景",
            "list_thumbnails": "https://picsum.photos/50/50 - 列表缩略图",
            "detail_images": "https://picsum.photos/375/250 - 详情页图片",
            "story_images": "https://picsum.photos/375/667 - 故事/动态图片"
          },
          "advanced_techniques": {
            "progressive_loading": "先加载小尺寸模糊图，再加载高清图",
            "art_direction": "根据设备类型选择不同构图的图片",
            "color_extraction": "可配合工具提取图片主色调用于UI设计",
            "aspect_ratio_control": "严格控制宽高比确保布局一致性"
          }
        }
      },
      "validation_rules": {
        "must_use_chinese_language": true,
        "must_provide_config_file": true,
        "must_follow_ios_design_standards": true,
        "must_use_component_reuse": true,
        "must_enforce_component_reuse_constraint": true,
        "must_use_pure_mobile_interface": true,
        "must_prohibit_decorative_containers": true,
        "must_enforce_clean_display_mode": true,
        "must_restrict_index_content": true,
        "must_implement_responsive_layout": true,
        "must_implement_mode_switching": true,
        "must_use_real_images": true,
        "must_use_tailwind_css": true,
        "must_use_fontawesome": true,
        "must_simulate_iphone": true,
        "must_distinguish_page_hierarchy": true,
        "must_set_scroll_properties": true,
        "must_use_realistic_status_bar": true,
        "must_hide_scrollbars": true,
        "must_use_native_navigation": true,
        "must_prohibit_iframe_components": true,
        "must_use_fetch_for_components": true,
        "must_have_single_scroll_area": true,
        "must_use_single_grid_container": true,
        "must_not_create_multiple_grid_containers": true,
        "must_use_mcp_tools_when_appropriate": true,
        "folder_must_be_properly_structured": true,
        "components_must_be_reusable": true,
        "pages_must_be_independent": true,
        "must_generate_complete_prototype": true,
        "must_create_in_root_directory": true,
        "must_use_chinese_folder_naming": true,
        "must_not_create_extra_files": true,
        "must_not_create_navigation_logic": true
      }
    },
    "add": {
      "description": "添加新的快捷操作到.QuickAction.json文件中",
      "commands": [
        "【强制要求】全程必须使用中文对话，禁止使用英文回复",
        "【第一阶段：信息收集】",
        "1. 询问用户新快捷操作的短语（触发关键词）",
        "2. 询问用户希望的功能，然后自动总结成中文描述",
        "3. 询问用户新快捷操作的具体功能和执行步骤",
        "4. 询问是否需要用户输入，如需要则询问输入提示语",
        "5. 询问是否有特殊的约束条件或配置要求",
        "【第二阶段：验证检查】",
        "6. 检查新短语是否与现有快捷操作冲突",
        "7. 验证配置格式的正确性和完整性",
        "8. 向用户展示完整的新快捷操作配置",
        "【第三阶段：确认与更新】",
        "9. 等待用户确认配置无误并发出'审核通过'指令",
        "10. 自动读取当前.QuickAction.json文件，并参考已有的快捷操作，除add外",
        "11. 将新的快捷操作添加到配置中",
        "12. 保存更新后的.QuickAction.json文件",
        "13. 向用户确认添加成功并显示更新后的配置"
      ],
      "requiresInput": true,
      "inputPrompt": "请提供要添加的快捷操作信息（我将逐步询问详细配置）：",
      "workflow": "add_quick_action",
      "constraints": {
        "language": "中文强制要求",
        "conflict_check": "必须检查短语冲突",
        "format_validation": "必须验证配置格式",
        "user_confirmation": "必须等待用户'审核通过'确认",
        "auto_update": "自动更新.QuickAction.json文件",
        "success_feedback": "必须提供添加成功的确认反馈"
      }
    }
  }
}
